/**

    Â© 2020 NetSuite Inc.
    User may not copy, modify, distribute, or re-bundle or otherwise make available this code;
    provided, however, if you are an authorized user with a NetSuite account or log-in, you
    may use this code subject to the terms that govern your access and use.


 * @NApiVersion 2.x
 * @NModuleScope TargetAccount
 */
define(["require", "exports", "../../../Common/Schema/SchemaField", "../../../Common/Schema/SchemaColumn", "../../../Common/ActiveRecord/ActiveRecord", "../../../Common/Schema/SchemaSublistField", "../../Transaction/RecordAccess/Fulfillingtransaction.Schema", "../../Transaction/RecordAccess/Location.Schema", "../../Transaction/RecordAccess/Item.Schema", "../../../Common/Schema/SchemaJoin"], function (require, exports, SchemaField_1, SchemaColumn_1, ActiveRecord_1, SchemaSublistField_1, Fulfillingtransaction_Schema_1, Location_Schema_1, Item_Schema_1, SchemaJoin_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InvoiceSchema = void 0;
    var InvoiceSchema = /** @class */ (function () {
        function InvoiceSchema() {
            // possible values can be seen here:
            // SuiteCloud Platform > SuiteScript > SuiteScript 2.0 API Reference >
            // SuiteScript 2.0 Modules > N/record Module > record.Type
            // NetSuite Version: 2019.1
            this.type = ActiveRecord_1.Type.INVOICE;
            this.fields = {
                account: new SchemaField_1.SchemaField('account'),
                althandlingcost: new SchemaField_1.SchemaField('althandlingcost'),
                altshippingcost: new SchemaField_1.SchemaField('altshippingcost'),
                amountpaid: new SchemaField_1.SchemaField('amountpaid'),
                amountremaining: new SchemaField_1.SchemaField('amountremaining'),
                amountremainingtotalbox: new SchemaField_1.SchemaField('amountremainingtotalbox'),
                approvalstatus: new SchemaField_1.SchemaField('approvalstatus'),
                balance: new SchemaField_1.SchemaField('balance'),
                billaddress: new SchemaField_1.SchemaField('billaddress'),
                billaddresslist: new SchemaField_1.SchemaField('billaddresslist'),
                billingaccount: new SchemaField_1.SchemaField('billingaccount'),
                billingaddress: new SchemaField_1.SchemaField('billingaddress'),
                billisresidential: new SchemaField_1.SchemaField('billisresidential'),
                canhavestackable: new SchemaField_1.SchemaField('canhavestackable'),
                class: new SchemaField_1.SchemaField('class'),
                consolidatebalance: new SchemaField_1.SchemaField('consolidatebalance'),
                couponcode: new SchemaField_1.SchemaField('couponcode'),
                createddate: new SchemaField_1.SchemaField('createddate'),
                createdfrom: new SchemaField_1.SchemaField('createdfrom'),
                currency: new SchemaField_1.SchemaField('currency'),
                currencyname: new SchemaField_1.SchemaField('currencyname'),
                currencysymbol: new SchemaField_1.SchemaField('currencysymbol'),
                customform: new SchemaField_1.SchemaField('customform'),
                deferredrevenue: new SchemaField_1.SchemaField('deferredrevenue'),
                department: new SchemaField_1.SchemaField('department'),
                discountamount: new SchemaField_1.SchemaField('discountamount'),
                discountdate: new SchemaField_1.SchemaField('discountdate'),
                discountitem: new SchemaField_1.SchemaField('discountitem'),
                discountrate: new SchemaField_1.SchemaField('discountrate'),
                discounttotal: new SchemaField_1.SchemaField('discounttotal'),
                duedate: new SchemaField_1.SchemaField('duedate'),
                email: new SchemaField_1.SchemaField('email'),
                enddate: new SchemaField_1.SchemaField('enddate'),
                entity: new SchemaField_1.SchemaField('entity'),
                entitynexus: new SchemaField_1.SchemaField('entitynexus'),
                entitytaxregnum: new SchemaField_1.SchemaField('entitytaxregnum'),
                estgrossprofit: new SchemaField_1.SchemaField('estgrossprofit'),
                estgrossprofitpercent: new SchemaField_1.SchemaField('estgrossprofitpercent'),
                exchangerate: new SchemaField_1.SchemaField('exchangerate'),
                excludecommission: new SchemaField_1.SchemaField('excludecommission'),
                expcostdiscamount: new SchemaField_1.SchemaField('expcostdiscamount'),
                expcostdiscount: new SchemaField_1.SchemaField('expcostdiscount'),
                expcostdiscprint: new SchemaField_1.SchemaField('expcostdiscprint'),
                expcostdiscrate: new SchemaField_1.SchemaField('expcostdiscrate'),
                expcostdisctaxable: new SchemaField_1.SchemaField('expcostdisctaxable'),
                expcosttaxcode: new SchemaField_1.SchemaField('expcosttaxcode'),
                expcosttaxrate1: new SchemaField_1.SchemaField('expcosttaxrate1'),
                externalid: new SchemaField_1.SchemaField('externalid'),
                fob: new SchemaField_1.SchemaField('fob'),
                giftcertapplied: new SchemaField_1.SchemaField('giftcertapplied'),
                handlingcost: new SchemaField_1.SchemaField('handlingcost'),
                handlingtax1rate: new SchemaField_1.SchemaField('handlingtax1rate'),
                handlingtaxcode: new SchemaField_1.SchemaField('handlingtaxcode'),
                isbasecurrency: new SchemaField_1.SchemaField('isbasecurrency'),
                ismultishipto: new SchemaField_1.SchemaField('ismultishipto'),
                istaxable: new SchemaField_1.SchemaField('istaxable'),
                itemcostdiscamount: new SchemaField_1.SchemaField('itemcostdiscamount'),
                itemcostdiscount: new SchemaField_1.SchemaField('itemcostdiscount'),
                itemcostdiscprint: new SchemaField_1.SchemaField('itemcostdiscprint'),
                itemcostdiscrate: new SchemaField_1.SchemaField('itemcostdiscrate'),
                itemcostdisctaxable: new SchemaField_1.SchemaField('itemcostdisctaxable'),
                itemcosttaxcode: new SchemaField_1.SchemaField('itemcosttaxcode'),
                itemcosttaxrate1: new SchemaField_1.SchemaField('itemcosttaxrate1'),
                lastmodifieddate: new SchemaField_1.SchemaField('lastmodifieddate'),
                leadsource: new SchemaField_1.SchemaField('leadsource'),
                linkedtrackingnumbers: new SchemaField_1.SchemaField('linkedtrackingnumbers'),
                location: new SchemaField_1.SchemaField('location'),
                memo: new SchemaField_1.SchemaField('memo'),
                message: new SchemaField_1.SchemaField('message'),
                messagesel: new SchemaField_1.SchemaField('messagesel'),
                muccpromocodeinstance: new SchemaField_1.SchemaField('muccpromocodeinstance'),
                nextapprover: new SchemaField_1.SchemaField('nextapprover'),
                nexus: new SchemaField_1.SchemaField('nexus'),
                opportunity: new SchemaField_1.SchemaField('opportunity'),
                otherrefnum: new SchemaField_1.SchemaField('otherrefnum'),
                partner: new SchemaField_1.SchemaField('partner'),
                paymenteventholdreason: new SchemaField_1.SchemaField('paymenteventholdreason'),
                paymethtype: new SchemaField_1.SchemaField('paymethtype'),
                postingperiod: new SchemaField_1.SchemaField('postingperiod'),
                promocode: new SchemaField_1.SchemaField('promocode'),
                promocodepluginimpl: new SchemaField_1.SchemaField('promocodepluginimpl'),
                recognizedrevenue: new SchemaField_1.SchemaField('recognizedrevenue'),
                recurringbill: new SchemaField_1.SchemaField('recurringbill'),
                returntrackingnumbers: new SchemaField_1.SchemaField('returntrackingnumbers'),
                revenuestatus: new SchemaField_1.SchemaField('revenuestatus'),
                revreconrevcommitment: new SchemaField_1.SchemaField('revreconrevcommitment'),
                saleseffectivedate: new SchemaField_1.SchemaField('saleseffectivedate'),
                salesgroup: new SchemaField_1.SchemaField('salesgroup'),
                salesrep: new SchemaField_1.SchemaField('salesrep'),
                shipaddress: new SchemaField_1.SchemaField('shipaddress'),
                shipaddresslist: new SchemaField_1.SchemaField('shipaddresslist'),
                shipdate: new SchemaField_1.SchemaField('shipdate'),
                shipisresidential: new SchemaField_1.SchemaField('shipisresidential'),
                shipmethod: new SchemaField_1.SchemaField('shipmethod'),
                shipoverride: new SchemaField_1.SchemaField('shipoverride'),
                shippingaddress: new SchemaField_1.SchemaField('shippingaddress'),
                shippingcost: new SchemaField_1.SchemaField('shippingcost'),
                shippingcostoverridden: new SchemaField_1.SchemaField('shippingcostoverridden'),
                shippingtax1rate: new SchemaField_1.SchemaField('shippingtax1rate'),
                shippingtaxcode: new SchemaField_1.SchemaField('shippingtaxcode'),
                source: new SchemaField_1.SchemaField('source'),
                startdate: new SchemaField_1.SchemaField('startdate'),
                status: new SchemaField_1.SchemaField('status'),
                statusRef: new SchemaField_1.SchemaField('statusRef'),
                subsidiary: new SchemaField_1.SchemaField('subsidiary'),
                subsidiarytaxregnum: new SchemaField_1.SchemaField('subsidiarytaxregnum'),
                subtotal: new SchemaField_1.SchemaField('subtotal'),
                syncpartnerteams: new SchemaField_1.SchemaField('syncpartnerteams'),
                syncsalesteams: new SchemaField_1.SchemaField('syncsalesteams'),
                taxdetailsoverride: new SchemaField_1.SchemaField('taxdetailsoverride'),
                taxitem: new SchemaField_1.SchemaField('taxitem'),
                taxpointdate: new SchemaField_1.SchemaField('taxpointdate'),
                taxpointdateoverride: new SchemaField_1.SchemaField('taxpointdateoverride'),
                taxrate: new SchemaField_1.SchemaField('taxrate'),
                taxregoverride: new SchemaField_1.SchemaField('taxregoverride'),
                taxtotal: new SchemaField_1.SchemaField('taxtotal'),
                terms: new SchemaField_1.SchemaField('terms'),
                timediscamount: new SchemaField_1.SchemaField('timediscamount'),
                timediscount: new SchemaField_1.SchemaField('timediscount'),
                timediscprint: new SchemaField_1.SchemaField('timediscprint'),
                timediscrate: new SchemaField_1.SchemaField('timediscrate'),
                timedisctaxable: new SchemaField_1.SchemaField('timedisctaxable'),
                timetaxcode: new SchemaField_1.SchemaField('timetaxcode'),
                timetaxrate1: new SchemaField_1.SchemaField('timetaxrate1'),
                tobeemailed: new SchemaField_1.SchemaField('tobeemailed'),
                tobefaxed: new SchemaField_1.SchemaField('tobefaxed'),
                tobeprinted: new SchemaField_1.SchemaField('tobeprinted'),
                total: new SchemaField_1.SchemaField('total'),
                totalcostestimate: new SchemaField_1.SchemaField('totalcostestimate'),
                trackingnumbers: new SchemaField_1.SchemaField('trackingnumbers'),
                trandate: new SchemaField_1.SchemaField('trandate'),
                tranid: new SchemaField_1.SchemaField('tranid'),
                tranisvsoebundle: new SchemaField_1.SchemaField('tranisvsoebundle'),
                unbilledorders: new SchemaField_1.SchemaField('unbilledorders'),
                vsoeautocalc: new SchemaField_1.SchemaField('vsoeautocalc')
            };
            this.filters = {
                account: new SchemaColumn_1.SchemaColumn('account'),
                accounttype: new SchemaColumn_1.SchemaColumn('accounttype'),
                acctcorpcardexp: new SchemaColumn_1.SchemaColumn('acctcorpcardexp'),
                actualshipdate: new SchemaColumn_1.SchemaColumn('actualshipdate'),
                altsalesamount: new SchemaColumn_1.SchemaColumn('altsalesamount'),
                altsalesnetamount: new SchemaColumn_1.SchemaColumn('altsalesnetamount'),
                amount: new SchemaColumn_1.SchemaColumn('amount'),
                amountpaid: new SchemaColumn_1.SchemaColumn('amountpaid'),
                amountremaining: new SchemaColumn_1.SchemaColumn('amountremaining'),
                amountunbilled: new SchemaColumn_1.SchemaColumn('amountunbilled'),
                anylineitem: new SchemaColumn_1.SchemaColumn('anylineitem'),
                appliedtoforeignamount: new SchemaColumn_1.SchemaColumn('appliedtoforeignamount'),
                appliedtoisfxvariance: new SchemaColumn_1.SchemaColumn('appliedtoisfxvariance'),
                appliedtolinkamount: new SchemaColumn_1.SchemaColumn('appliedtolinkamount'),
                appliedtolinktype: new SchemaColumn_1.SchemaColumn('appliedtolinktype'),
                appliedtotransaction: new SchemaColumn_1.SchemaColumn('appliedtotransaction'),
                applyingforeignamount: new SchemaColumn_1.SchemaColumn('applyingforeignamount'),
                applyingisfxvariance: new SchemaColumn_1.SchemaColumn('applyingisfxvariance'),
                applyinglinkamount: new SchemaColumn_1.SchemaColumn('applyinglinkamount'),
                applyinglinktype: new SchemaColumn_1.SchemaColumn('applyinglinktype'),
                applyingtransaction: new SchemaColumn_1.SchemaColumn('applyingtransaction'),
                approvalstatus: new SchemaColumn_1.SchemaColumn('approvalstatus'),
                authcode: new SchemaColumn_1.SchemaColumn('authcode'),
                autocalculatelag: new SchemaColumn_1.SchemaColumn('autocalculatelag'),
                avsstreetmatch: new SchemaColumn_1.SchemaColumn('avsstreetmatch'),
                avszipmatch: new SchemaColumn_1.SchemaColumn('avszipmatch'),
                billable: new SchemaColumn_1.SchemaColumn('billable'),
                billcounty: new SchemaColumn_1.SchemaColumn('billcounty'),
                billeddate: new SchemaColumn_1.SchemaColumn('billeddate'),
                billingschedule: new SchemaColumn_1.SchemaColumn('billingschedule'),
                billingstatus: new SchemaColumn_1.SchemaColumn('billingstatus'),
                billingtransaction: new SchemaColumn_1.SchemaColumn('billingtransaction'),
                billvariancestatus: new SchemaColumn_1.SchemaColumn('billvariancestatus'),
                binnumber: new SchemaColumn_1.SchemaColumn('binnumber'),
                binnumberquantity: new SchemaColumn_1.SchemaColumn('binnumberquantity'),
                bookspecifictransaction: new SchemaColumn_1.SchemaColumn('bookspecifictransaction'),
                buildentireassembly: new SchemaColumn_1.SchemaColumn('buildentireassembly'),
                buildvariance: new SchemaColumn_1.SchemaColumn('buildvariance'),
                built: new SchemaColumn_1.SchemaColumn('built'),
                canhavestackablepromotions: new SchemaColumn_1.SchemaColumn('canhavestackablepromotions'),
                catchupperiod: new SchemaColumn_1.SchemaColumn('catchupperiod'),
                cccustomercode: new SchemaColumn_1.SchemaColumn('cccustomercode'),
                ccexpiredate: new SchemaColumn_1.SchemaColumn('ccexpiredate'),
                ccname: new SchemaColumn_1.SchemaColumn('ccname'),
                ccnumber: new SchemaColumn_1.SchemaColumn('ccnumber'),
                chargetype: new SchemaColumn_1.SchemaColumn('chargetype'),
                class: new SchemaColumn_1.SchemaColumn('class'),
                cleared: new SchemaColumn_1.SchemaColumn('cleared'),
                closed: new SchemaColumn_1.SchemaColumn('closed'),
                closedate: new SchemaColumn_1.SchemaColumn('closedate'),
                cogs: new SchemaColumn_1.SchemaColumn('cogs'),
                commissioneffectivedate: new SchemaColumn_1.SchemaColumn('commissioneffectivedate'),
                commit: new SchemaColumn_1.SchemaColumn('commit'),
                confirmationnumber: new SchemaColumn_1.SchemaColumn('confirmationnumber'),
                contribution: new SchemaColumn_1.SchemaColumn('contribution'),
                costcomponentamount: new SchemaColumn_1.SchemaColumn('costcomponentamount'),
                costcomponentcategory: new SchemaColumn_1.SchemaColumn('costcomponentcategory'),
                costcomponentitem: new SchemaColumn_1.SchemaColumn('costcomponentitem'),
                costcomponentquantity: new SchemaColumn_1.SchemaColumn('costcomponentquantity'),
                costcomponentstandardcost: new SchemaColumn_1.SchemaColumn('costcomponentstandardcost'),
                costestimate: new SchemaColumn_1.SchemaColumn('costestimate'),
                costestimaterate: new SchemaColumn_1.SchemaColumn('costestimaterate'),
                costestimatetype: new SchemaColumn_1.SchemaColumn('costestimatetype'),
                createdby: new SchemaColumn_1.SchemaColumn('createdby'),
                createdfrom: new SchemaColumn_1.SchemaColumn('createdfrom'),
                createdfromtype: new SchemaColumn_1.SchemaColumn('createdfrom.type'),
                creditamount: new SchemaColumn_1.SchemaColumn('creditamount'),
                cscmatch: new SchemaColumn_1.SchemaColumn('cscmatch'),
                currency: new SchemaColumn_1.SchemaColumn('currency'),
                customersubof: new SchemaColumn_1.SchemaColumn('customersubof'),
                customform: new SchemaColumn_1.SchemaColumn('customform'),
                customgl: new SchemaColumn_1.SchemaColumn('customgl'),
                custtype: new SchemaColumn_1.SchemaColumn('custtype'),
                datecreated: new SchemaColumn_1.SchemaColumn('datecreated'),
                daysopen: new SchemaColumn_1.SchemaColumn('daysopen'),
                daysoverdue: new SchemaColumn_1.SchemaColumn('daysoverdue'),
                debitamount: new SchemaColumn_1.SchemaColumn('debitamount'),
                deferredrevenue: new SchemaColumn_1.SchemaColumn('deferredrevenue'),
                deferrevrec: new SchemaColumn_1.SchemaColumn('deferrevrec'),
                department: new SchemaColumn_1.SchemaColumn('department'),
                depositdate: new SchemaColumn_1.SchemaColumn('depositdate'),
                deposittransaction: new SchemaColumn_1.SchemaColumn('deposittransaction'),
                draccount: new SchemaColumn_1.SchemaColumn('draccount'),
                duedate: new SchemaColumn_1.SchemaColumn('duedate'),
                email: new SchemaColumn_1.SchemaColumn('email'),
                employee: new SchemaColumn_1.SchemaColumn('employee'),
                enddate: new SchemaColumn_1.SchemaColumn('enddate'),
                entity: new SchemaColumn_1.SchemaColumn('entity'),
                entitystatus: new SchemaColumn_1.SchemaColumn('entitystatus'),
                estgrossprofit: new SchemaColumn_1.SchemaColumn('estgrossprofit'),
                estgrossprofitpct: new SchemaColumn_1.SchemaColumn('estgrossprofitpct'),
                exchangerate: new SchemaColumn_1.SchemaColumn('exchangerate'),
                excludecommission: new SchemaColumn_1.SchemaColumn('excludecommission'),
                excludefromraterequest: new SchemaColumn_1.SchemaColumn('excludefromraterequest'),
                expectedclosedate: new SchemaColumn_1.SchemaColumn('expectedclosedate'),
                expectedreceiptdate: new SchemaColumn_1.SchemaColumn('expectedreceiptdate'),
                expensedate: new SchemaColumn_1.SchemaColumn('expensedate'),
                expreports: new SchemaColumn_1.SchemaColumn('expreports'),
                externalid: new SchemaColumn_1.SchemaColumn('externalid'),
                externalidstring: new SchemaColumn_1.SchemaColumn('externalidstring'),
                finchrg: new SchemaColumn_1.SchemaColumn('finchrg'),
                firmed: new SchemaColumn_1.SchemaColumn('firmed'),
                forecasttype: new SchemaColumn_1.SchemaColumn('forecasttype'),
                formuladate: new SchemaColumn_1.SchemaColumn('formuladate'),
                formulanumeric: new SchemaColumn_1.SchemaColumn('formulanumeric'),
                formulatext: new SchemaColumn_1.SchemaColumn('formulatext'),
                fulfillingtransaction: new SchemaColumn_1.SchemaColumn('fulfillingtransaction'),
                fxaccount: new SchemaColumn_1.SchemaColumn('fxaccount'),
                fxamount: new SchemaColumn_1.SchemaColumn('fxamount'),
                fxcostestimate: new SchemaColumn_1.SchemaColumn('fxcostestimate'),
                fxcostestimaterate: new SchemaColumn_1.SchemaColumn('fxcostestimaterate'),
                fxestgrossprofit: new SchemaColumn_1.SchemaColumn('fxestgrossprofit'),
                fxtrancostestimate: new SchemaColumn_1.SchemaColumn('fxtrancostestimate'),
                fxvsoeallocation: new SchemaColumn_1.SchemaColumn('fxvsoeallocation'),
                fxvsoeamount: new SchemaColumn_1.SchemaColumn('fxvsoeamount'),
                fxvsoeprice: new SchemaColumn_1.SchemaColumn('fxvsoeprice'),
                gcoavailabeltocharge: new SchemaColumn_1.SchemaColumn('gcoavailabeltocharge'),
                gcoavailabletorefund: new SchemaColumn_1.SchemaColumn('gcoavailabletorefund'),
                gcoavsstreetmatch: new SchemaColumn_1.SchemaColumn('gcoavsstreetmatch'),
                gcoavszipmatch: new SchemaColumn_1.SchemaColumn('gcoavszipmatch'),
                gcobuyeraccountage: new SchemaColumn_1.SchemaColumn('gcobuyeraccountage'),
                gcobuyerip: new SchemaColumn_1.SchemaColumn('gcobuyerip'),
                gcochargeamount: new SchemaColumn_1.SchemaColumn('gcochargeamount'),
                gcochargebackamount: new SchemaColumn_1.SchemaColumn('gcochargebackamount'),
                gcoconfirmedchargedtotal: new SchemaColumn_1.SchemaColumn('gcoconfirmedchargedtotal'),
                gcoconfirmedrefundedtotal: new SchemaColumn_1.SchemaColumn('gcoconfirmedrefundedtotal'),
                gcocreditcardnumber: new SchemaColumn_1.SchemaColumn('gcocreditcardnumber'),
                gcocscmatch: new SchemaColumn_1.SchemaColumn('gcocscmatch'),
                gcofinancialstate: new SchemaColumn_1.SchemaColumn('gcofinancialstate'),
                gcofulfillmentstate: new SchemaColumn_1.SchemaColumn('gcofulfillmentstate'),
                gcoorderid: new SchemaColumn_1.SchemaColumn('gcoorderid'),
                gcoordertotal: new SchemaColumn_1.SchemaColumn('gcoordertotal'),
                gcopromotionamount: new SchemaColumn_1.SchemaColumn('gcopromotionamount'),
                gcopromotionname: new SchemaColumn_1.SchemaColumn('gcopromotionname'),
                gcorefundamount: new SchemaColumn_1.SchemaColumn('gcorefundamount'),
                gcoshippingtotal: new SchemaColumn_1.SchemaColumn('gcoshippingtotal'),
                gcostatechangeddetail: new SchemaColumn_1.SchemaColumn('gcostatechangeddetail'),
                giftcertificate: new SchemaColumn_1.SchemaColumn('giftcertificate'),
                grossamount: new SchemaColumn_1.SchemaColumn('grossamount'),
                includeinforecast: new SchemaColumn_1.SchemaColumn('includeinforecast'),
                incoterm: new SchemaColumn_1.SchemaColumn('incoterm'),
                intercostatus: new SchemaColumn_1.SchemaColumn('intercostatus'),
                intercotransaction: new SchemaColumn_1.SchemaColumn('intercotransaction'),
                internalid: new SchemaColumn_1.SchemaColumn('internalid'),
                internalidnumber: new SchemaColumn_1.SchemaColumn('internalidnumber'),
                inventorylocation: new SchemaColumn_1.SchemaColumn('inventorylocation'),
                inventorysubsidiary: new SchemaColumn_1.SchemaColumn('inventorysubsidiary'),
                invsoebundle: new SchemaColumn_1.SchemaColumn('invsoebundle'),
                isallocation: new SchemaColumn_1.SchemaColumn('isallocation'),
                isbackflush: new SchemaColumn_1.SchemaColumn('isbackflush'),
                iscustomapproval: new SchemaColumn_1.SchemaColumn('iscustomapproval'),
                isgcochargeback: new SchemaColumn_1.SchemaColumn('isgcochargeback'),
                isgcochargeconfirmed: new SchemaColumn_1.SchemaColumn('isgcochargeconfirmed'),
                isgcopaymentguaranteed: new SchemaColumn_1.SchemaColumn('isgcopaymentguaranteed'),
                isgcorefundconfirmed: new SchemaColumn_1.SchemaColumn('isgcorefundconfirmed'),
                isinsidedelivery: new SchemaColumn_1.SchemaColumn('isinsidedelivery'),
                isinsidepickup: new SchemaColumn_1.SchemaColumn('isinsidepickup'),
                isintercompanyadjustment: new SchemaColumn_1.SchemaColumn('isintercompanyadjustment'),
                isintransitpayment: new SchemaColumn_1.SchemaColumn('isintransitpayment'),
                ispaypalmeth: new SchemaColumn_1.SchemaColumn('ispaypalmeth'),
                isreversal: new SchemaColumn_1.SchemaColumn('isreversal'),
                isrevrectransaction: new SchemaColumn_1.SchemaColumn('isrevrectransaction'),
                isscrap: new SchemaColumn_1.SchemaColumn('isscrap'),
                isshipaddress: new SchemaColumn_1.SchemaColumn('isshipaddress'),
                istransferpricecosting: new SchemaColumn_1.SchemaColumn('istransferpricecosting'),
                isvsoealloc: new SchemaColumn_1.SchemaColumn('isvsoealloc'),
                iswip: new SchemaColumn_1.SchemaColumn('iswip'),
                item: new SchemaColumn_1.SchemaColumn('item'),
                itemfulfillmentchoice: new SchemaColumn_1.SchemaColumn('itemfulfillmentchoice'),
                itemrevision: new SchemaColumn_1.SchemaColumn('itemrevision'),
                itemsubof: new SchemaColumn_1.SchemaColumn('itemsubof'),
                lastmodifieddate: new SchemaColumn_1.SchemaColumn('lastmodifieddate'),
                leadsource: new SchemaColumn_1.SchemaColumn('leadsource'),
                line: new SchemaColumn_1.SchemaColumn('line'),
                lineuniquekey: new SchemaColumn_1.SchemaColumn('lineuniquekey'),
                location: new SchemaColumn_1.SchemaColumn('location'),
                mainline: new SchemaColumn_1.SchemaColumn('mainline'),
                mainname: new SchemaColumn_1.SchemaColumn('mainname'),
                matchbilltoreceipt: new SchemaColumn_1.SchemaColumn('matchbilltoreceipt'),
                memo: new SchemaColumn_1.SchemaColumn('memo'),
                memomain: new SchemaColumn_1.SchemaColumn('memomain'),
                memorized: new SchemaColumn_1.SchemaColumn('memorized'),
                merchantaccount: new SchemaColumn_1.SchemaColumn('merchantaccount'),
                message: new SchemaColumn_1.SchemaColumn('message'),
                multisubsidiary: new SchemaColumn_1.SchemaColumn('multisubsidiary'),
                netamount: new SchemaColumn_1.SchemaColumn('netamount'),
                nextapprover: new SchemaColumn_1.SchemaColumn('nextapprover'),
                nextbilldate: new SchemaColumn_1.SchemaColumn('nextbilldate'),
                nonreimbursable: new SchemaColumn_1.SchemaColumn('nonreimbursable'),
                number: new SchemaColumn_1.SchemaColumn('number'),
                opportunity: new SchemaColumn_1.SchemaColumn('opportunity'),
                otherrefnum: new SchemaColumn_1.SchemaColumn('otherrefnum'),
                packagecount: new SchemaColumn_1.SchemaColumn('packagecount'),
                paidtransaction: new SchemaColumn_1.SchemaColumn('paidtransaction'),
                partner: new SchemaColumn_1.SchemaColumn('partner'),
                partnercontribution: new SchemaColumn_1.SchemaColumn('partnercontribution'),
                partnerrole: new SchemaColumn_1.SchemaColumn('partnerrole'),
                partnerteammember: new SchemaColumn_1.SchemaColumn('partnerteammember'),
                payingtransaction: new SchemaColumn_1.SchemaColumn('payingtransaction'),
                paymenteventdate: new SchemaColumn_1.SchemaColumn('paymenteventdate'),
                paymenteventholdreason: new SchemaColumn_1.SchemaColumn('paymenteventholdreason'),
                paymenteventpurchasecardused: new SchemaColumn_1.SchemaColumn('paymenteventpurchasecardused'),
                paymenteventpurchasedatasent: new SchemaColumn_1.SchemaColumn('paymenteventpurchasedatasent'),
                paymenteventresult: new SchemaColumn_1.SchemaColumn('paymenteventresult'),
                paymenteventtype: new SchemaColumn_1.SchemaColumn('paymenteventtype'),
                paymenthold: new SchemaColumn_1.SchemaColumn('paymenthold'),
                paymentmethod: new SchemaColumn_1.SchemaColumn('paymentmethod'),
                paymentoption: new SchemaColumn_1.SchemaColumn('paymentoption'),
                paypalpending: new SchemaColumn_1.SchemaColumn('paypalpending'),
                paypalstatus: new SchemaColumn_1.SchemaColumn('paypalstatus'),
                paypaltranid: new SchemaColumn_1.SchemaColumn('paypaltranid'),
                pnrefnum: new SchemaColumn_1.SchemaColumn('pnrefnum'),
                poastext: new SchemaColumn_1.SchemaColumn('poastext'),
                posting: new SchemaColumn_1.SchemaColumn('posting'),
                postingperiod: new SchemaColumn_1.SchemaColumn('postingperiod'),
                pricelevel: new SchemaColumn_1.SchemaColumn('pricelevel'),
                printedpickingticket: new SchemaColumn_1.SchemaColumn('printedpickingticket'),
                probability: new SchemaColumn_1.SchemaColumn('probability'),
                projectedamount: new SchemaColumn_1.SchemaColumn('projectedamount'),
                projecttask: new SchemaColumn_1.SchemaColumn('projecttask'),
                promocode: new SchemaColumn_1.SchemaColumn('promocode'),
                purchaseorder: new SchemaColumn_1.SchemaColumn('purchaseorder'),
                quantity: new SchemaColumn_1.SchemaColumn('quantity'),
                quantitybilled: new SchemaColumn_1.SchemaColumn('quantitybilled'),
                quantitycommitted: new SchemaColumn_1.SchemaColumn('quantitycommitted'),
                quantitypacked: new SchemaColumn_1.SchemaColumn('quantitypacked'),
                quantitypicked: new SchemaColumn_1.SchemaColumn('quantitypicked'),
                quantityrevcommitted: new SchemaColumn_1.SchemaColumn('quantityrevcommitted'),
                quantityshiprecv: new SchemaColumn_1.SchemaColumn('quantityshiprecv'),
                recognizedrevenue: new SchemaColumn_1.SchemaColumn('recognizedrevenue'),
                recordtype: new SchemaColumn_1.SchemaColumn('recordtype'),
                revcommitstatus: new SchemaColumn_1.SchemaColumn('revcommitstatus'),
                revcommittingstatus: new SchemaColumn_1.SchemaColumn('revcommittingstatus'),
                revcommittingtransaction: new SchemaColumn_1.SchemaColumn('revcommittingtransaction'),
                revenuestatus: new SchemaColumn_1.SchemaColumn('revenuestatus'),
                reversaldate: new SchemaColumn_1.SchemaColumn('reversaldate'),
                reversalnumber: new SchemaColumn_1.SchemaColumn('reversalnumber'),
                revrecenddate: new SchemaColumn_1.SchemaColumn('revrecenddate'),
                revreconrevcommitment: new SchemaColumn_1.SchemaColumn('revreconrevcommitment'),
                revrecstartdate: new SchemaColumn_1.SchemaColumn('revrecstartdate'),
                revrecterminmonths: new SchemaColumn_1.SchemaColumn('revrecterminmonths'),
                saleseffectivedate: new SchemaColumn_1.SchemaColumn('saleseffectivedate'),
                salesorder: new SchemaColumn_1.SchemaColumn('salesorder'),
                salesrep: new SchemaColumn_1.SchemaColumn('salesrep'),
                salesteammember: new SchemaColumn_1.SchemaColumn('salesteammember'),
                salesteamrole: new SchemaColumn_1.SchemaColumn('salesteamrole'),
                schedulingmethod: new SchemaColumn_1.SchemaColumn('schedulingmethod'),
                serialnumber: new SchemaColumn_1.SchemaColumn('serialnumber'),
                serialnumbercost: new SchemaColumn_1.SchemaColumn('serialnumbercost'),
                serialnumbercostadjustment: new SchemaColumn_1.SchemaColumn('serialnumbercostadjustment'),
                serialnumberquantity: new SchemaColumn_1.SchemaColumn('serialnumberquantity'),
                shipcarrier: new SchemaColumn_1.SchemaColumn('shipcarrier'),
                shipcomplete: new SchemaColumn_1.SchemaColumn('shipcomplete'),
                shipcounty: new SchemaColumn_1.SchemaColumn('shipcounty'),
                shipdate: new SchemaColumn_1.SchemaColumn('shipdate'),
                shipgroup: new SchemaColumn_1.SchemaColumn('shipgroup'),
                shipmethod: new SchemaColumn_1.SchemaColumn('shipmethod'),
                shipping: new SchemaColumn_1.SchemaColumn('shipping'),
                shiprecvstatus: new SchemaColumn_1.SchemaColumn('shiprecvstatus'),
                shiprecvstatusline: new SchemaColumn_1.SchemaColumn('shiprecvstatusline'),
                shipto: new SchemaColumn_1.SchemaColumn('shipto'),
                source: new SchemaColumn_1.SchemaColumn('source'),
                startdate: new SchemaColumn_1.SchemaColumn('startdate'),
                status: new SchemaColumn_1.SchemaColumn('status'),
                subsidiary: new SchemaColumn_1.SchemaColumn('subsidiary'),
                taxitem: new SchemaColumn_1.SchemaColumn('taxitem'),
                taxline: new SchemaColumn_1.SchemaColumn('taxline'),
                taxperiod: new SchemaColumn_1.SchemaColumn('taxperiod'),
                taxpointdate: new SchemaColumn_1.SchemaColumn('taxpointdate'),
                taxrate: new SchemaColumn_1.SchemaColumn('taxrate'),
                terms: new SchemaColumn_1.SchemaColumn('terms'),
                termsofsale: new SchemaColumn_1.SchemaColumn('termsofsale'),
                title: new SchemaColumn_1.SchemaColumn('title'),
                tobeemailed: new SchemaColumn_1.SchemaColumn('tobeemailed'),
                tobeprinted: new SchemaColumn_1.SchemaColumn('tobeprinted'),
                tosubsidiary: new SchemaColumn_1.SchemaColumn('tosubsidiary'),
                totalamount: new SchemaColumn_1.SchemaColumn('totalamount'),
                trackingnumbers: new SchemaColumn_1.SchemaColumn('trackingnumbers'),
                trancostestimate: new SchemaColumn_1.SchemaColumn('trancostestimate'),
                trandate: new SchemaColumn_1.SchemaColumn('trandate'),
                tranestgrossprofit: new SchemaColumn_1.SchemaColumn('tranestgrossprofit'),
                tranestgrossprofitpct: new SchemaColumn_1.SchemaColumn('tranestgrossprofitpct'),
                tranfxestgrossprofit: new SchemaColumn_1.SchemaColumn('tranfxestgrossprofit'),
                tranid: new SchemaColumn_1.SchemaColumn('tranid'),
                tranisvsoebundle: new SchemaColumn_1.SchemaColumn('tranisvsoebundle'),
                transactiondiscount: new SchemaColumn_1.SchemaColumn('transactiondiscount'),
                transactionlinetype: new SchemaColumn_1.SchemaColumn('transactionlinetype'),
                transactionnumber: new SchemaColumn_1.SchemaColumn('transactionnumber'),
                transferlocation: new SchemaColumn_1.SchemaColumn('transferlocation'),
                transferorderquantitycommitted: new SchemaColumn_1.SchemaColumn('transferorderquantitycommitted'),
                transferorderquantitypacked: new SchemaColumn_1.SchemaColumn('transferorderquantitypacked'),
                transferorderquantitypicked: new SchemaColumn_1.SchemaColumn('transferorderquantitypicked'),
                transferorderquantityreceived: new SchemaColumn_1.SchemaColumn('transferorderquantityreceived'),
                transferorderquantityshipped: new SchemaColumn_1.SchemaColumn('transferorderquantityshipped'),
                type: new SchemaColumn_1.SchemaColumn('type'),
                unit: new SchemaColumn_1.SchemaColumn('unit'),
                unitcostoverride: new SchemaColumn_1.SchemaColumn('unitcostoverride'),
                vendtype: new SchemaColumn_1.SchemaColumn('vendtype'),
                visibletocustomer: new SchemaColumn_1.SchemaColumn('visibletocustomer'),
                voided: new SchemaColumn_1.SchemaColumn('voided'),
                vsoeallocation: new SchemaColumn_1.SchemaColumn('vsoeallocation'),
                vsoeamount: new SchemaColumn_1.SchemaColumn('vsoeamount'),
                vsoedeferral: new SchemaColumn_1.SchemaColumn('vsoedeferral'),
                vsoedelivered: new SchemaColumn_1.SchemaColumn('vsoedelivered'),
                vsoepermitdiscount: new SchemaColumn_1.SchemaColumn('vsoepermitdiscount'),
                vsoeprice: new SchemaColumn_1.SchemaColumn('vsoeprice'),
                website: new SchemaColumn_1.SchemaColumn('website')
            };
            this.columns = {
                account: new SchemaColumn_1.SchemaColumn('account'),
                accounttype: new SchemaColumn_1.SchemaColumn('accounttype'),
                acctcorpcardexp: new SchemaColumn_1.SchemaColumn('acctcorpcardexp'),
                actualshipdate: new SchemaColumn_1.SchemaColumn('actualshipdate'),
                altsalesamount: new SchemaColumn_1.SchemaColumn('altsalesamount'),
                altsalesnetamount: new SchemaColumn_1.SchemaColumn('altsalesnetamount'),
                amount: new SchemaColumn_1.SchemaColumn('amount'),
                amountpaid: new SchemaColumn_1.SchemaColumn('amountpaid'),
                amountremaining: new SchemaColumn_1.SchemaColumn('amountremaining'),
                amountunbilled: new SchemaColumn_1.SchemaColumn('amountunbilled'),
                anylineitem: new SchemaColumn_1.SchemaColumn('anylineitem'),
                appliedtoforeignamount: new SchemaColumn_1.SchemaColumn('appliedtoforeignamount'),
                appliedtoisfxvariance: new SchemaColumn_1.SchemaColumn('appliedtoisfxvariance'),
                appliedtolinkamount: new SchemaColumn_1.SchemaColumn('appliedtolinkamount'),
                appliedtolinktype: new SchemaColumn_1.SchemaColumn('appliedtolinktype'),
                appliedtotransaction: new SchemaColumn_1.SchemaColumn('appliedtotransaction'),
                applyingforeignamount: new SchemaColumn_1.SchemaColumn('applyingforeignamount'),
                applyingisfxvariance: new SchemaColumn_1.SchemaColumn('applyingisfxvariance'),
                applyinglinkamount: new SchemaColumn_1.SchemaColumn('applyinglinkamount'),
                applyinglinktype: new SchemaColumn_1.SchemaColumn('applyinglinktype'),
                applyingtransaction: new SchemaColumn_1.SchemaColumn('applyingtransaction'),
                approvalstatus: new SchemaColumn_1.SchemaColumn('approvalstatus'),
                authcode: new SchemaColumn_1.SchemaColumn('authcode'),
                autocalculatelag: new SchemaColumn_1.SchemaColumn('autocalculatelag'),
                avsstreetmatch: new SchemaColumn_1.SchemaColumn('avsstreetmatch'),
                avszipmatch: new SchemaColumn_1.SchemaColumn('avszipmatch'),
                billable: new SchemaColumn_1.SchemaColumn('billable'),
                billcounty: new SchemaColumn_1.SchemaColumn('billcounty'),
                billeddate: new SchemaColumn_1.SchemaColumn('billeddate'),
                billingschedule: new SchemaColumn_1.SchemaColumn('billingschedule'),
                billingstatus: new SchemaColumn_1.SchemaColumn('billingstatus'),
                billingtransaction: new SchemaColumn_1.SchemaColumn('billingtransaction'),
                billvariancestatus: new SchemaColumn_1.SchemaColumn('billvariancestatus'),
                binnumber: new SchemaColumn_1.SchemaColumn('binnumber'),
                binnumberquantity: new SchemaColumn_1.SchemaColumn('binnumberquantity'),
                bookspecifictransaction: new SchemaColumn_1.SchemaColumn('bookspecifictransaction'),
                buildentireassembly: new SchemaColumn_1.SchemaColumn('buildentireassembly'),
                buildvariance: new SchemaColumn_1.SchemaColumn('buildvariance'),
                built: new SchemaColumn_1.SchemaColumn('built'),
                canhavestackablepromotions: new SchemaColumn_1.SchemaColumn('canhavestackablepromotions'),
                catchupperiod: new SchemaColumn_1.SchemaColumn('catchupperiod'),
                cccustomercode: new SchemaColumn_1.SchemaColumn('cccustomercode'),
                ccexpiredate: new SchemaColumn_1.SchemaColumn('ccexpiredate'),
                ccexpdate: new SchemaColumn_1.SchemaColumn('ccexpdate'),
                ccname: new SchemaColumn_1.SchemaColumn('ccname'),
                ccnumber: new SchemaColumn_1.SchemaColumn('ccnumber'),
                chargetype: new SchemaColumn_1.SchemaColumn('chargetype'),
                class: new SchemaColumn_1.SchemaColumn('class'),
                cleared: new SchemaColumn_1.SchemaColumn('cleared'),
                closed: new SchemaColumn_1.SchemaColumn('closed'),
                closedate: new SchemaColumn_1.SchemaColumn('closedate'),
                cogs: new SchemaColumn_1.SchemaColumn('cogs'),
                commissioneffectivedate: new SchemaColumn_1.SchemaColumn('commissioneffectivedate'),
                commit: new SchemaColumn_1.SchemaColumn('commit'),
                confirmationnumber: new SchemaColumn_1.SchemaColumn('confirmationnumber'),
                contribution: new SchemaColumn_1.SchemaColumn('contribution'),
                costcomponentamount: new SchemaColumn_1.SchemaColumn('costcomponentamount'),
                costcomponentcategory: new SchemaColumn_1.SchemaColumn('costcomponentcategory'),
                costcomponentitem: new SchemaColumn_1.SchemaColumn('costcomponentitem'),
                costcomponentquantity: new SchemaColumn_1.SchemaColumn('costcomponentquantity'),
                costcomponentstandardcost: new SchemaColumn_1.SchemaColumn('costcomponentstandardcost'),
                costestimate: new SchemaColumn_1.SchemaColumn('costestimate'),
                costestimaterate: new SchemaColumn_1.SchemaColumn('costestimaterate'),
                costestimatetype: new SchemaColumn_1.SchemaColumn('costestimatetype'),
                createdby: new SchemaColumn_1.SchemaColumn('createdby'),
                createdfrom: new SchemaColumn_1.SchemaColumn('createdfrom'),
                creditamount: new SchemaColumn_1.SchemaColumn('creditamount'),
                cscmatch: new SchemaColumn_1.SchemaColumn('cscmatch'),
                currency: new SchemaColumn_1.SchemaColumn('currency'),
                customersubof: new SchemaColumn_1.SchemaColumn('customersubof'),
                customform: new SchemaColumn_1.SchemaColumn('customform'),
                customgl: new SchemaColumn_1.SchemaColumn('customgl'),
                custtype: new SchemaColumn_1.SchemaColumn('custtype'),
                datecreated: new SchemaColumn_1.SchemaColumn('datecreated'),
                daysopen: new SchemaColumn_1.SchemaColumn('daysopen'),
                daysoverdue: new SchemaColumn_1.SchemaColumn('daysoverdue'),
                debitamount: new SchemaColumn_1.SchemaColumn('debitamount'),
                deferredrevenue: new SchemaColumn_1.SchemaColumn('deferredrevenue'),
                deferrevrec: new SchemaColumn_1.SchemaColumn('deferrevrec'),
                department: new SchemaColumn_1.SchemaColumn('department'),
                depositdate: new SchemaColumn_1.SchemaColumn('depositdate'),
                deposittransaction: new SchemaColumn_1.SchemaColumn('deposittransaction'),
                draccount: new SchemaColumn_1.SchemaColumn('draccount'),
                duedate: new SchemaColumn_1.SchemaColumn('duedate'),
                email: new SchemaColumn_1.SchemaColumn('email'),
                employee: new SchemaColumn_1.SchemaColumn('employee'),
                enddate: new SchemaColumn_1.SchemaColumn('enddate'),
                entity: new SchemaColumn_1.SchemaColumn('entity'),
                entitystatus: new SchemaColumn_1.SchemaColumn('entitystatus'),
                estgrossprofit: new SchemaColumn_1.SchemaColumn('estgrossprofit'),
                estgrossprofitpct: new SchemaColumn_1.SchemaColumn('estgrossprofitpct'),
                exchangerate: new SchemaColumn_1.SchemaColumn('exchangerate'),
                excludecommission: new SchemaColumn_1.SchemaColumn('excludecommission'),
                excludefromraterequest: new SchemaColumn_1.SchemaColumn('excludefromraterequest'),
                expectedclosedate: new SchemaColumn_1.SchemaColumn('expectedclosedate'),
                expectedreceiptdate: new SchemaColumn_1.SchemaColumn('expectedreceiptdate'),
                expensedate: new SchemaColumn_1.SchemaColumn('expensedate'),
                expreports: new SchemaColumn_1.SchemaColumn('expreports'),
                externalid: new SchemaColumn_1.SchemaColumn('externalid'),
                externalidstring: new SchemaColumn_1.SchemaColumn('externalidstring'),
                finchrg: new SchemaColumn_1.SchemaColumn('finchrg'),
                firmed: new SchemaColumn_1.SchemaColumn('firmed'),
                forecasttype: new SchemaColumn_1.SchemaColumn('forecasttype'),
                formuladate: new SchemaColumn_1.SchemaColumn('formuladate'),
                formulanumeric: new SchemaColumn_1.SchemaColumn('formulanumeric'),
                formulatext: new SchemaColumn_1.SchemaColumn('formulatext'),
                fulfillingtransaction: new SchemaColumn_1.SchemaColumn('fulfillingtransaction'),
                fxaccount: new SchemaColumn_1.SchemaColumn('fxaccount'),
                fxamount: new SchemaColumn_1.SchemaColumn('fxamount'),
                fxcostestimate: new SchemaColumn_1.SchemaColumn('fxcostestimate'),
                fxcostestimaterate: new SchemaColumn_1.SchemaColumn('fxcostestimaterate'),
                fxestgrossprofit: new SchemaColumn_1.SchemaColumn('fxestgrossprofit'),
                fxtrancostestimate: new SchemaColumn_1.SchemaColumn('fxtrancostestimate'),
                fxvsoeallocation: new SchemaColumn_1.SchemaColumn('fxvsoeallocation'),
                fxvsoeamount: new SchemaColumn_1.SchemaColumn('fxvsoeamount'),
                fxvsoeprice: new SchemaColumn_1.SchemaColumn('fxvsoeprice'),
                gcoavailabeltocharge: new SchemaColumn_1.SchemaColumn('gcoavailabeltocharge'),
                gcoavailabletorefund: new SchemaColumn_1.SchemaColumn('gcoavailabletorefund'),
                gcoavsstreetmatch: new SchemaColumn_1.SchemaColumn('gcoavsstreetmatch'),
                gcoavszipmatch: new SchemaColumn_1.SchemaColumn('gcoavszipmatch'),
                gcobuyeraccountage: new SchemaColumn_1.SchemaColumn('gcobuyeraccountage'),
                gcobuyerip: new SchemaColumn_1.SchemaColumn('gcobuyerip'),
                gcochargeamount: new SchemaColumn_1.SchemaColumn('gcochargeamount'),
                gcochargebackamount: new SchemaColumn_1.SchemaColumn('gcochargebackamount'),
                gcoconfirmedchargedtotal: new SchemaColumn_1.SchemaColumn('gcoconfirmedchargedtotal'),
                gcoconfirmedrefundedtotal: new SchemaColumn_1.SchemaColumn('gcoconfirmedrefundedtotal'),
                gcocreditcardnumber: new SchemaColumn_1.SchemaColumn('gcocreditcardnumber'),
                gcocscmatch: new SchemaColumn_1.SchemaColumn('gcocscmatch'),
                gcofinancialstate: new SchemaColumn_1.SchemaColumn('gcofinancialstate'),
                gcofulfillmentstate: new SchemaColumn_1.SchemaColumn('gcofulfillmentstate'),
                gcoorderid: new SchemaColumn_1.SchemaColumn('gcoorderid'),
                gcoordertotal: new SchemaColumn_1.SchemaColumn('gcoordertotal'),
                gcopromotionamount: new SchemaColumn_1.SchemaColumn('gcopromotionamount'),
                gcopromotionname: new SchemaColumn_1.SchemaColumn('gcopromotionname'),
                gcorefundamount: new SchemaColumn_1.SchemaColumn('gcorefundamount'),
                gcoshippingtotal: new SchemaColumn_1.SchemaColumn('gcoshippingtotal'),
                gcostatechangeddetail: new SchemaColumn_1.SchemaColumn('gcostatechangeddetail'),
                giftcertificate: new SchemaColumn_1.SchemaColumn('giftcertificate'),
                grossamount: new SchemaColumn_1.SchemaColumn('grossamount'),
                includeinforecast: new SchemaColumn_1.SchemaColumn('includeinforecast'),
                incoterm: new SchemaColumn_1.SchemaColumn('incoterm'),
                intercostatus: new SchemaColumn_1.SchemaColumn('intercostatus'),
                intercotransaction: new SchemaColumn_1.SchemaColumn('intercotransaction'),
                internalid: new SchemaColumn_1.SchemaColumn('internalid'),
                internalidnumber: new SchemaColumn_1.SchemaColumn('internalidnumber'),
                inventorylocation: new SchemaColumn_1.SchemaColumn('inventorylocation'),
                inventorysubsidiary: new SchemaColumn_1.SchemaColumn('inventorysubsidiary'),
                invsoebundle: new SchemaColumn_1.SchemaColumn('invsoebundle'),
                isallocation: new SchemaColumn_1.SchemaColumn('isallocation'),
                isbackflush: new SchemaColumn_1.SchemaColumn('isbackflush'),
                iscustomapproval: new SchemaColumn_1.SchemaColumn('iscustomapproval'),
                isgcochargeback: new SchemaColumn_1.SchemaColumn('isgcochargeback'),
                isgcochargeconfirmed: new SchemaColumn_1.SchemaColumn('isgcochargeconfirmed'),
                isgcopaymentguaranteed: new SchemaColumn_1.SchemaColumn('isgcopaymentguaranteed'),
                isgcorefundconfirmed: new SchemaColumn_1.SchemaColumn('isgcorefundconfirmed'),
                isinsidedelivery: new SchemaColumn_1.SchemaColumn('isinsidedelivery'),
                isinsidepickup: new SchemaColumn_1.SchemaColumn('isinsidepickup'),
                isintercompanyadjustment: new SchemaColumn_1.SchemaColumn('isintercompanyadjustment'),
                isintransitpayment: new SchemaColumn_1.SchemaColumn('isintransitpayment'),
                ispaypalmeth: new SchemaColumn_1.SchemaColumn('ispaypalmeth'),
                isreversal: new SchemaColumn_1.SchemaColumn('isreversal'),
                isrevrectransaction: new SchemaColumn_1.SchemaColumn('isrevrectransaction'),
                isscrap: new SchemaColumn_1.SchemaColumn('isscrap'),
                isshipaddress: new SchemaColumn_1.SchemaColumn('isshipaddress'),
                istransferpricecosting: new SchemaColumn_1.SchemaColumn('istransferpricecosting'),
                isvsoealloc: new SchemaColumn_1.SchemaColumn('isvsoealloc'),
                iswip: new SchemaColumn_1.SchemaColumn('iswip'),
                item: new SchemaColumn_1.SchemaColumn('item'),
                itemfulfillmentchoice: new SchemaColumn_1.SchemaColumn('itemfulfillmentchoice'),
                itemrevision: new SchemaColumn_1.SchemaColumn('itemrevision'),
                itemsubof: new SchemaColumn_1.SchemaColumn('itemsubof'),
                lastmodifieddate: new SchemaColumn_1.SchemaColumn('lastmodifieddate'),
                leadsource: new SchemaColumn_1.SchemaColumn('leadsource'),
                line: new SchemaColumn_1.SchemaColumn('line'),
                lineuniquekey: new SchemaColumn_1.SchemaColumn('lineuniquekey'),
                location: new SchemaColumn_1.SchemaColumn('location'),
                mainline: new SchemaColumn_1.SchemaColumn('mainline'),
                mainname: new SchemaColumn_1.SchemaColumn('mainname'),
                matchbilltoreceipt: new SchemaColumn_1.SchemaColumn('matchbilltoreceipt'),
                memo: new SchemaColumn_1.SchemaColumn('memo'),
                memomain: new SchemaColumn_1.SchemaColumn('memomain'),
                memorized: new SchemaColumn_1.SchemaColumn('memorized'),
                merchantaccount: new SchemaColumn_1.SchemaColumn('merchantaccount'),
                message: new SchemaColumn_1.SchemaColumn('message'),
                multisubsidiary: new SchemaColumn_1.SchemaColumn('multisubsidiary'),
                netamount: new SchemaColumn_1.SchemaColumn('netamount'),
                nextapprover: new SchemaColumn_1.SchemaColumn('nextapprover'),
                nextbilldate: new SchemaColumn_1.SchemaColumn('nextbilldate'),
                nonreimbursable: new SchemaColumn_1.SchemaColumn('nonreimbursable'),
                number: new SchemaColumn_1.SchemaColumn('number'),
                opportunity: new SchemaColumn_1.SchemaColumn('opportunity'),
                otherrefnum: new SchemaColumn_1.SchemaColumn('otherrefnum'),
                packagecount: new SchemaColumn_1.SchemaColumn('packagecount'),
                paidtransaction: new SchemaColumn_1.SchemaColumn('paidtransaction'),
                partner: new SchemaColumn_1.SchemaColumn('partner'),
                partnercontribution: new SchemaColumn_1.SchemaColumn('partnercontribution'),
                partnerrole: new SchemaColumn_1.SchemaColumn('partnerrole'),
                partnerteammember: new SchemaColumn_1.SchemaColumn('partnerteammember'),
                payingtransaction: new SchemaColumn_1.SchemaColumn('payingtransaction'),
                paymenteventdate: new SchemaColumn_1.SchemaColumn('paymenteventdate'),
                paymenteventholdreason: new SchemaColumn_1.SchemaColumn('paymenteventholdreason'),
                paymenteventpurchasecardused: new SchemaColumn_1.SchemaColumn('paymenteventpurchasecardused'),
                paymenteventpurchasedatasent: new SchemaColumn_1.SchemaColumn('paymenteventpurchasedatasent'),
                paymenteventresult: new SchemaColumn_1.SchemaColumn('paymenteventresult'),
                paymenteventtype: new SchemaColumn_1.SchemaColumn('paymenteventtype'),
                paymenthold: new SchemaColumn_1.SchemaColumn('paymenthold'),
                paymentmethod: new SchemaColumn_1.SchemaColumn('paymentmethod'),
                paymentoption: new SchemaColumn_1.SchemaColumn('paymentoption'),
                paypalpending: new SchemaColumn_1.SchemaColumn('paypalpending'),
                paypalstatus: new SchemaColumn_1.SchemaColumn('paypalstatus'),
                paypaltranid: new SchemaColumn_1.SchemaColumn('paypaltranid'),
                pnrefnum: new SchemaColumn_1.SchemaColumn('pnrefnum'),
                poastext: new SchemaColumn_1.SchemaColumn('poastext'),
                posting: new SchemaColumn_1.SchemaColumn('posting'),
                postingperiod: new SchemaColumn_1.SchemaColumn('postingperiod'),
                pricelevel: new SchemaColumn_1.SchemaColumn('pricelevel'),
                printedpickingticket: new SchemaColumn_1.SchemaColumn('printedpickingticket'),
                probability: new SchemaColumn_1.SchemaColumn('probability'),
                projectedamount: new SchemaColumn_1.SchemaColumn('projectedamount'),
                projecttask: new SchemaColumn_1.SchemaColumn('projecttask'),
                promocode: new SchemaColumn_1.SchemaColumn('promocode'),
                purchaseorder: new SchemaColumn_1.SchemaColumn('purchaseorder'),
                quantity: new SchemaColumn_1.SchemaColumn('quantity'),
                quantitybilled: new SchemaColumn_1.SchemaColumn('quantitybilled'),
                quantitycommitted: new SchemaColumn_1.SchemaColumn('quantitycommitted'),
                quantitypacked: new SchemaColumn_1.SchemaColumn('quantitypacked'),
                quantitypicked: new SchemaColumn_1.SchemaColumn('quantitypicked'),
                quantityrevcommitted: new SchemaColumn_1.SchemaColumn('quantityrevcommitted'),
                quantityshiprecv: new SchemaColumn_1.SchemaColumn('quantityshiprecv'),
                recognizedrevenue: new SchemaColumn_1.SchemaColumn('recognizedrevenue'),
                recordtype: new SchemaColumn_1.SchemaColumn('recordtype'),
                revcommitstatus: new SchemaColumn_1.SchemaColumn('revcommitstatus'),
                revcommittingstatus: new SchemaColumn_1.SchemaColumn('revcommittingstatus'),
                revcommittingtransaction: new SchemaColumn_1.SchemaColumn('revcommittingtransaction'),
                revenuestatus: new SchemaColumn_1.SchemaColumn('revenuestatus'),
                reversaldate: new SchemaColumn_1.SchemaColumn('reversaldate'),
                reversalnumber: new SchemaColumn_1.SchemaColumn('reversalnumber'),
                revrecenddate: new SchemaColumn_1.SchemaColumn('revrecenddate'),
                revreconrevcommitment: new SchemaColumn_1.SchemaColumn('revreconrevcommitment'),
                revrecstartdate: new SchemaColumn_1.SchemaColumn('revrecstartdate'),
                revrecterminmonths: new SchemaColumn_1.SchemaColumn('revrecterminmonths'),
                saleseffectivedate: new SchemaColumn_1.SchemaColumn('saleseffectivedate'),
                salesorder: new SchemaColumn_1.SchemaColumn('salesorder'),
                salesrep: new SchemaColumn_1.SchemaColumn('salesrep'),
                salesteammember: new SchemaColumn_1.SchemaColumn('salesteammember'),
                salesteamrole: new SchemaColumn_1.SchemaColumn('salesteamrole'),
                schedulingmethod: new SchemaColumn_1.SchemaColumn('schedulingmethod'),
                serialnumber: new SchemaColumn_1.SchemaColumn('serialnumber'),
                serialnumbercost: new SchemaColumn_1.SchemaColumn('serialnumbercost'),
                serialnumbercostadjustment: new SchemaColumn_1.SchemaColumn('serialnumbercostadjustment'),
                serialnumberquantity: new SchemaColumn_1.SchemaColumn('serialnumberquantity'),
                shipcarrier: new SchemaColumn_1.SchemaColumn('shipcarrier'),
                shipcomplete: new SchemaColumn_1.SchemaColumn('shipcomplete'),
                shipcounty: new SchemaColumn_1.SchemaColumn('shipcounty'),
                shipdate: new SchemaColumn_1.SchemaColumn('shipdate'),
                shipgroup: new SchemaColumn_1.SchemaColumn('shipgroup'),
                shipmethod: new SchemaColumn_1.SchemaColumn('shipmethod'),
                shipping: new SchemaColumn_1.SchemaColumn('shipping'),
                shiprecvstatus: new SchemaColumn_1.SchemaColumn('shiprecvstatus'),
                shiprecvstatusline: new SchemaColumn_1.SchemaColumn('shiprecvstatusline'),
                shipto: new SchemaColumn_1.SchemaColumn('shipto'),
                source: new SchemaColumn_1.SchemaColumn('source'),
                startdate: new SchemaColumn_1.SchemaColumn('startdate'),
                status: new SchemaColumn_1.SchemaColumn('status'),
                subsidiary: new SchemaColumn_1.SchemaColumn('subsidiary'),
                taxitem: new SchemaColumn_1.SchemaColumn('taxitem'),
                taxline: new SchemaColumn_1.SchemaColumn('taxline'),
                taxperiod: new SchemaColumn_1.SchemaColumn('taxperiod'),
                taxpointdate: new SchemaColumn_1.SchemaColumn('taxpointdate'),
                taxrate: new SchemaColumn_1.SchemaColumn('taxrate'),
                terms: new SchemaColumn_1.SchemaColumn('terms'),
                termsofsale: new SchemaColumn_1.SchemaColumn('termsofsale'),
                title: new SchemaColumn_1.SchemaColumn('title'),
                tobeemailed: new SchemaColumn_1.SchemaColumn('tobeemailed'),
                tobeprinted: new SchemaColumn_1.SchemaColumn('tobeprinted'),
                tosubsidiary: new SchemaColumn_1.SchemaColumn('tosubsidiary'),
                totalamount: new SchemaColumn_1.SchemaColumn('totalamount'),
                trackingnumbers: new SchemaColumn_1.SchemaColumn('trackingnumbers'),
                trancostestimate: new SchemaColumn_1.SchemaColumn('trancostestimate'),
                trandate: new SchemaColumn_1.SchemaColumn('trandate'),
                tranestgrossprofit: new SchemaColumn_1.SchemaColumn('tranestgrossprofit'),
                tranestgrossprofitpct: new SchemaColumn_1.SchemaColumn('tranestgrossprofitpct'),
                tranfxestgrossprofit: new SchemaColumn_1.SchemaColumn('tranfxestgrossprofit'),
                tranid: new SchemaColumn_1.SchemaColumn('tranid'),
                tranisvsoebundle: new SchemaColumn_1.SchemaColumn('tranisvsoebundle'),
                transactiondiscount: new SchemaColumn_1.SchemaColumn('transactiondiscount'),
                transactionlinetype: new SchemaColumn_1.SchemaColumn('transactionlinetype'),
                transactionnumber: new SchemaColumn_1.SchemaColumn('transactionnumber'),
                transferlocation: new SchemaColumn_1.SchemaColumn('transferlocation'),
                transferorderquantitycommitted: new SchemaColumn_1.SchemaColumn('transferorderquantitycommitted'),
                transferorderquantitypacked: new SchemaColumn_1.SchemaColumn('transferorderquantitypacked'),
                transferorderquantitypicked: new SchemaColumn_1.SchemaColumn('transferorderquantitypicked'),
                transferorderquantityreceived: new SchemaColumn_1.SchemaColumn('transferorderquantityreceived'),
                transferorderquantityshipped: new SchemaColumn_1.SchemaColumn('transferorderquantityshipped'),
                type: new SchemaColumn_1.SchemaColumn('type'),
                unit: new SchemaColumn_1.SchemaColumn('unit'),
                unitcostoverride: new SchemaColumn_1.SchemaColumn('unitcostoverride'),
                vendtype: new SchemaColumn_1.SchemaColumn('vendtype'),
                visibletocustomer: new SchemaColumn_1.SchemaColumn('visibletocustomer'),
                voided: new SchemaColumn_1.SchemaColumn('voided'),
                vsoeallocation: new SchemaColumn_1.SchemaColumn('vsoeallocation'),
                vsoeamount: new SchemaColumn_1.SchemaColumn('vsoeamount'),
                vsoedeferral: new SchemaColumn_1.SchemaColumn('vsoedeferral'),
                vsoedelivered: new SchemaColumn_1.SchemaColumn('vsoedelivered'),
                vsoepermitdiscount: new SchemaColumn_1.SchemaColumn('vsoepermitdiscount'),
                vsoeprice: new SchemaColumn_1.SchemaColumn('vsoeprice'),
                website: new SchemaColumn_1.SchemaColumn('website')
            };
            this.fulfillingtransactionSchema = Fulfillingtransaction_Schema_1.FulfillingtransactionSchema.getInstance();
            this.locationSchema = Location_Schema_1.LocationSchema.getInstance();
            this.itemSchema = Item_Schema_1.ItemSchema.getInstance();
            this.joins = {
                fulfillingtransaction: new SchemaJoin_1.SchemaJoin('fulfillingtransaction', this.fulfillingtransactionSchema),
                location: new SchemaJoin_1.SchemaJoin('location', this.locationSchema),
                item: new SchemaJoin_1.SchemaJoin('item', this.itemSchema)
            };
            this.initializeDefaults = {
                entity: 'entity',
                subsidiary: 'subsidiary',
                billingaccount: 'billingaccount',
                shipaddresslist: 'shipaddresslist',
                shipaddress: 'shipaddress',
                shipcountry: 'shipcountry',
                shipstate: 'shipstate',
                shipzip: 'shipzip',
                shipcity: 'shipcity',
                shipaddr1: 'shipaddr1',
                shipaddr2: 'shipaddr2',
                shipaddressee: 'shipaddressee',
                shipattention: 'shipattention',
                shipisresidential: 'shipisresidential',
                shipoverride: 'shipoverride',
                billexpenses: 'billexpenses',
                billitems: 'billitems',
                billtime: 'billtime',
                billcharges: 'billcharges',
                billorderedtime: 'billorderedtime',
                billstart: 'billstart',
                billend: 'billend',
                bulk: 'bulk',
                memdate: 'memdate',
                nexus: 'nexus',
                currency: 'currency',
                chrgroupfield: 'chrgroupfield',
                invgroupfield: 'invgroupfield',
                groupval: 'groupval',
                automaticallyapplypromotions: 'automaticallyapplypromotions',
                canhavestackable: 'canhavestackable',
                standalonecopy: 'standalonecopy',
                customform: 'customform',
                enablefieldtriggers: 'enablefieldtriggers',
                enablefieldpermissions: 'enablefieldpermissions',
                disabletriggers: 'disabletriggers',
                recordmode: 'recordmode',
                cf: 'cf',
                sobcmode: 'sobcmode',
                shoppernexus: 'shoppernexus',
                print: 'print',
                advancedprint: 'advancedprint',
                is: 'is',
                ps: 'ps',
                pt: 'pt',
                bom: 'bom',
                hasrm: 'hasrm',
                popup: 'popup',
                rmloaddata: 'rmloaddata',
                userm: 'userm',
                nameprefix: 'nameprefix',
                deletionreason: 'deletionreason',
                deletionreasonmemo: 'deletionreasonmemo',
                platformtype: 'platformtype',
                ignorecache: 'ignorecache'
            };
            this.transformDefaults = {
                customform: 'customform',
                enablefieldtriggers: 'enablefieldtriggers',
                enablefieldpermissions: 'enablefieldpermissions',
                disabletriggers: 'disabletriggers',
                recordmode: 'recordmode',
                cf: 'cf',
                sobcmode: 'sobcmode',
                shoppernexus: 'shoppernexus',
                print: 'print',
                advancedprint: 'advancedprint',
                is: 'is',
                ps: 'ps',
                pt: 'pt',
                bom: 'bom',
                hasrm: 'hasrm',
                popup: 'popup',
                rmloaddata: 'rmloaddata',
                userm: 'userm',
                nameprefix: 'nameprefix',
                deletionreason: 'deletionreason',
                deletionreasonmemo: 'deletionreasonmemo',
                platformtype: 'platformtype',
                ignorecache: 'ignorecache',
                billdate: 'billdate',
                billremaining: 'billremaining',
                billcharges: 'billcharges'
            };
            this.sublists = {
                accountingbookdetail: {
                    sublistId: 'accountingbookdetail',
                    fields: {
                        accountingbook: new SchemaSublistField_1.SchemaSublistField('accountingbook', 'accountingbookdetail'),
                        exchangerate: new SchemaSublistField_1.SchemaSublistField('exchangerate', 'accountingbookdetail'),
                        revreconrevcommitment: new SchemaSublistField_1.SchemaSublistField('revreconrevcommitment', 'accountingbookdetail'),
                        tranisvsoebundle: new SchemaSublistField_1.SchemaSublistField('tranisvsoebundle', 'accountingbookdetail')
                    }
                },
                expcost: {
                    sublistId: 'expcost',
                    fields: {
                        amortizationperiod: new SchemaSublistField_1.SchemaSublistField('amortizationperiod', 'expcost'),
                        amortizationtype: new SchemaSublistField_1.SchemaSublistField('amortizationtype', 'expcost'),
                        amount: new SchemaSublistField_1.SchemaSublistField('amount', 'expcost'),
                        apply: new SchemaSublistField_1.SchemaSublistField('apply', 'expcost'),
                        billeddate: new SchemaSublistField_1.SchemaSublistField('billeddate', 'expcost'),
                        category: new SchemaSublistField_1.SchemaSublistField('category', 'expcost'),
                        doc: new SchemaSublistField_1.SchemaSublistField('doc', 'expcost'),
                        employee: new SchemaSublistField_1.SchemaSublistField('employee', 'expcost'),
                        job: new SchemaSublistField_1.SchemaSublistField('job', 'expcost'),
                        line: new SchemaSublistField_1.SchemaSublistField('line', 'expcost'),
                        location: new SchemaSublistField_1.SchemaSublistField('location', 'expcost'),
                        memo: new SchemaSublistField_1.SchemaSublistField('memo', 'expcost'),
                        originalamount: new SchemaSublistField_1.SchemaSublistField('originalamount', 'expcost'),
                        revrecenddate: new SchemaSublistField_1.SchemaSublistField('revrecenddate', 'expcost'),
                        revrecschedule: new SchemaSublistField_1.SchemaSublistField('revrecschedule', 'expcost'),
                        revrecstartdate: new SchemaSublistField_1.SchemaSublistField('revrecstartdate', 'expcost'),
                        taxable: new SchemaSublistField_1.SchemaSublistField('taxable', 'expcost'),
                        taxcode: new SchemaSublistField_1.SchemaSublistField('taxcode', 'expcost'),
                        taxrate1: new SchemaSublistField_1.SchemaSublistField('taxrate1', 'expcost'),
                        url: new SchemaSublistField_1.SchemaSublistField('url', 'expcost')
                    }
                },
                item: {
                    sublistId: 'item',
                    fields: {
                        account: new SchemaSublistField_1.SchemaSublistField('account', 'item'),
                        amortizationperiod: new SchemaSublistField_1.SchemaSublistField('amortizationperiod', 'item'),
                        amortizationtype: new SchemaSublistField_1.SchemaSublistField('amortizationtype', 'item'),
                        amount: new SchemaSublistField_1.SchemaSublistField('amount', 'item'),
                        billvariancestatus: new SchemaSublistField_1.SchemaSublistField('billvariancestatus', 'item'),
                        catchupperiod: new SchemaSublistField_1.SchemaSublistField('catchupperiod', 'item'),
                        chargetype: new SchemaSublistField_1.SchemaSublistField('chargetype', 'item'),
                        costestimate: new SchemaSublistField_1.SchemaSublistField('costestimate', 'item'),
                        costestimaterate: new SchemaSublistField_1.SchemaSublistField('costestimaterate', 'item'),
                        costestimatetype: new SchemaSublistField_1.SchemaSublistField('costestimatetype', 'item'),
                        daysbeforeexpiration: new SchemaSublistField_1.SchemaSublistField('daysbeforeexpiration', 'item'),
                        deferrevrec: new SchemaSublistField_1.SchemaSublistField('deferrevrec', 'item'),
                        description: new SchemaSublistField_1.SchemaSublistField('description', 'item'),
                        excludefromraterequest: new SchemaSublistField_1.SchemaSublistField('excludefromraterequest', 'item'),
                        giftcertfrom: new SchemaSublistField_1.SchemaSublistField('giftcertfrom', 'item'),
                        giftcertmessage: new SchemaSublistField_1.SchemaSublistField('giftcertmessage', 'item'),
                        giftcertrecipientemail: new SchemaSublistField_1.SchemaSublistField('giftcertrecipientemail', 'item'),
                        giftcertrecipientname: new SchemaSublistField_1.SchemaSublistField('giftcertrecipientname', 'item'),
                        id: new SchemaSublistField_1.SchemaSublistField('id', 'item'),
                        inventorydetail: new SchemaSublistField_1.SchemaSublistField('inventorydetail', 'item'),
                        istaxable: new SchemaSublistField_1.SchemaSublistField('istaxable', 'item'),
                        isvsoebundle: new SchemaSublistField_1.SchemaSublistField('isvsoebundle', 'item'),
                        item: new SchemaSublistField_1.SchemaSublistField('item', 'item'),
                        itemsubtype: new SchemaSublistField_1.SchemaSublistField('itemsubtype', 'item'),
                        itemtype: new SchemaSublistField_1.SchemaSublistField('itemtype', 'item'),
                        job: new SchemaSublistField_1.SchemaSublistField('job', 'item'),
                        licensecode: new SchemaSublistField_1.SchemaSublistField('licensecode', 'item'),
                        line: new SchemaSublistField_1.SchemaSublistField('line', 'item'),
                        matrixtype: new SchemaSublistField_1.SchemaSublistField('matrixtype', 'item'),
                        options: new SchemaSublistField_1.SchemaSublistField('options', 'item'),
                        price: new SchemaSublistField_1.SchemaSublistField('price', 'item'),
                        printitems: new SchemaSublistField_1.SchemaSublistField('printitems', 'item'),
                        quantity: new SchemaSublistField_1.SchemaSublistField('quantity', 'item'),
                        quantityavailable: new SchemaSublistField_1.SchemaSublistField('quantityavailable', 'item'),
                        quantityremaining: new SchemaSublistField_1.SchemaSublistField('quantityremaining', 'item'),
                        rate: new SchemaSublistField_1.SchemaSublistField('rate', 'item'),
                        rateschedule: new SchemaSublistField_1.SchemaSublistField('rateschedule', 'item'),
                        revrecenddate: new SchemaSublistField_1.SchemaSublistField('revrecenddate', 'item'),
                        revrecschedule: new SchemaSublistField_1.SchemaSublistField('revrecschedule', 'item'),
                        revrecstartdate: new SchemaSublistField_1.SchemaSublistField('revrecstartdate', 'item'),
                        shipaddress: new SchemaSublistField_1.SchemaSublistField('shipaddress', 'item'),
                        shipcarrier: new SchemaSublistField_1.SchemaSublistField('shipcarrier', 'item'),
                        shipmethod: new SchemaSublistField_1.SchemaSublistField('shipmethod', 'item'),
                        subscriptionline: new SchemaSublistField_1.SchemaSublistField('subscriptionline', 'item'),
                        taxcode: new SchemaSublistField_1.SchemaSublistField('taxcode', 'item'),
                        taxrate1: new SchemaSublistField_1.SchemaSublistField('taxrate1', 'item'),
                        units: new SchemaSublistField_1.SchemaSublistField('units', 'item'),
                        vsoeallocation: new SchemaSublistField_1.SchemaSublistField('vsoeallocation', 'item'),
                        vsoeamount: new SchemaSublistField_1.SchemaSublistField('vsoeamount', 'item'),
                        vsoedeferral: new SchemaSublistField_1.SchemaSublistField('vsoedeferral', 'item'),
                        vsoedelivered: new SchemaSublistField_1.SchemaSublistField('vsoedelivered', 'item'),
                        vsoeisestimate: new SchemaSublistField_1.SchemaSublistField('vsoeisestimate', 'item'),
                        vsoepermitdiscount: new SchemaSublistField_1.SchemaSublistField('vsoepermitdiscount', 'item'),
                        vsoeprice: new SchemaSublistField_1.SchemaSublistField('vsoeprice', 'item'),
                        vsoesopgroup: new SchemaSublistField_1.SchemaSublistField('vsoesopgroup', 'item')
                    }
                },
                itemcost: {
                    sublistId: 'itemcost',
                    fields: {
                        amortizationperiod: new SchemaSublistField_1.SchemaSublistField('amortizationperiod', 'itemcost'),
                        amortizationtype: new SchemaSublistField_1.SchemaSublistField('amortizationtype', 'itemcost'),
                        amount: new SchemaSublistField_1.SchemaSublistField('amount', 'itemcost'),
                        apply: new SchemaSublistField_1.SchemaSublistField('apply', 'itemcost'),
                        billeddate: new SchemaSublistField_1.SchemaSublistField('billeddate', 'itemcost'),
                        binnumbers: new SchemaSublistField_1.SchemaSublistField('binnumbers', 'itemcost'),
                        cost: new SchemaSublistField_1.SchemaSublistField('cost', 'itemcost'),
                        doc: new SchemaSublistField_1.SchemaSublistField('doc', 'itemcost'),
                        item: new SchemaSublistField_1.SchemaSublistField('item', 'itemcost'),
                        itemcostcount: new SchemaSublistField_1.SchemaSublistField('itemcostcount', 'itemcost'),
                        job: new SchemaSublistField_1.SchemaSublistField('job', 'itemcost'),
                        line: new SchemaSublistField_1.SchemaSublistField('line', 'itemcost'),
                        location: new SchemaSublistField_1.SchemaSublistField('location', 'itemcost'),
                        memo: new SchemaSublistField_1.SchemaSublistField('memo', 'itemcost'),
                        options: new SchemaSublistField_1.SchemaSublistField('options', 'itemcost'),
                        rateschedule: new SchemaSublistField_1.SchemaSublistField('rateschedule', 'itemcost'),
                        revrecenddate: new SchemaSublistField_1.SchemaSublistField('revrecenddate', 'itemcost'),
                        revrecschedule: new SchemaSublistField_1.SchemaSublistField('revrecschedule', 'itemcost'),
                        revrecstartdate: new SchemaSublistField_1.SchemaSublistField('revrecstartdate', 'itemcost'),
                        serialnumbers: new SchemaSublistField_1.SchemaSublistField('serialnumbers', 'itemcost'),
                        taxable: new SchemaSublistField_1.SchemaSublistField('taxable', 'itemcost'),
                        taxcode: new SchemaSublistField_1.SchemaSublistField('taxcode', 'itemcost'),
                        taxrate1: new SchemaSublistField_1.SchemaSublistField('taxrate1', 'itemcost'),
                        unit: new SchemaSublistField_1.SchemaSublistField('unit', 'itemcost'),
                        url: new SchemaSublistField_1.SchemaSublistField('url', 'itemcost')
                    }
                },
                partners: {
                    sublistId: 'partners',
                    fields: {
                        contribution: new SchemaSublistField_1.SchemaSublistField('contribution', 'partners'),
                        id: new SchemaSublistField_1.SchemaSublistField('id', 'partners'),
                        isprimary: new SchemaSublistField_1.SchemaSublistField('isprimary', 'partners'),
                        partner: new SchemaSublistField_1.SchemaSublistField('partner', 'partners'),
                        partnerrole: new SchemaSublistField_1.SchemaSublistField('partnerrole', 'partners'),
                        transaction: new SchemaSublistField_1.SchemaSublistField('transaction', 'partners')
                    }
                },
                promotions: {
                    sublistId: 'promotions',
                    fields: {
                        cannotbecombined: new SchemaSublistField_1.SchemaSublistField('cannotbecombined', 'promotions'),
                        couponcode: new SchemaSublistField_1.SchemaSublistField('couponcode', 'promotions'),
                        discount: new SchemaSublistField_1.SchemaSublistField('discount', 'promotions'),
                        discountrate: new SchemaSublistField_1.SchemaSublistField('discountrate', 'promotions'),
                        muccpromocodeinstance: new SchemaSublistField_1.SchemaSublistField('muccpromocodeinstance', 'promotions'),
                        promocode: new SchemaSublistField_1.SchemaSublistField('promocode', 'promotions'),
                        purchasediscount: new SchemaSublistField_1.SchemaSublistField('purchasediscount', 'promotions'),
                        shippingdiscount: new SchemaSublistField_1.SchemaSublistField('shippingdiscount', 'promotions')
                    }
                },
                salesteam: {
                    sublistId: 'salesteam',
                    fields: {
                        contribution: new SchemaSublistField_1.SchemaSublistField('contribution', 'salesteam'),
                        employee: new SchemaSublistField_1.SchemaSublistField('employee', 'salesteam'),
                        id: new SchemaSublistField_1.SchemaSublistField('id', 'salesteam'),
                        isprimary: new SchemaSublistField_1.SchemaSublistField('isprimary', 'salesteam'),
                        issalesrep: new SchemaSublistField_1.SchemaSublistField('issalesrep', 'salesteam'),
                        salesrole: new SchemaSublistField_1.SchemaSublistField('salesrole', 'salesteam'),
                        transaction: new SchemaSublistField_1.SchemaSublistField('transaction', 'salesteam')
                    }
                },
                shipgroup: {
                    sublistId: 'shipgroup',
                    fields: {
                        destinationaddress: new SchemaSublistField_1.SchemaSublistField('destinationaddress', 'shipgroup'),
                        handlingrate: new SchemaSublistField_1.SchemaSublistField('handlingrate', 'shipgroup'),
                        id: new SchemaSublistField_1.SchemaSublistField('id', 'shipgroup'),
                        shippingcarrier: new SchemaSublistField_1.SchemaSublistField('shippingcarrier', 'shipgroup'),
                        shippingmethod: new SchemaSublistField_1.SchemaSublistField('shippingmethod', 'shipgroup'),
                        shippingrate: new SchemaSublistField_1.SchemaSublistField('shippingrate', 'shipgroup'),
                        sourceaddress: new SchemaSublistField_1.SchemaSublistField('sourceaddress', 'shipgroup'),
                        weight: new SchemaSublistField_1.SchemaSublistField('weight', 'shipgroup')
                    }
                },
                taxdetails: {
                    sublistId: 'taxdetails',
                    fields: {
                        calcdetail: new SchemaSublistField_1.SchemaSublistField('calcdetail', 'taxdetails'),
                        grossamount: new SchemaSublistField_1.SchemaSublistField('grossamount', 'taxdetails'),
                        linename: new SchemaSublistField_1.SchemaSublistField('linename', 'taxdetails'),
                        linetype: new SchemaSublistField_1.SchemaSublistField('linetype', 'taxdetails'),
                        netamount: new SchemaSublistField_1.SchemaSublistField('netamount', 'taxdetails'),
                        taxamount: new SchemaSublistField_1.SchemaSublistField('taxamount', 'taxdetails'),
                        taxbasis: new SchemaSublistField_1.SchemaSublistField('taxbasis', 'taxdetails'),
                        taxcode: new SchemaSublistField_1.SchemaSublistField('taxcode', 'taxdetails'),
                        taxdetailsreference: new SchemaSublistField_1.SchemaSublistField('taxdetailsreference', 'taxdetails'),
                        taxrate: new SchemaSublistField_1.SchemaSublistField('taxrate', 'taxdetails'),
                        transaction: new SchemaSublistField_1.SchemaSublistField('transaction', 'taxdetails')
                    }
                },
                time: {
                    sublistId: 'time',
                    fields: {
                        amortizationperiod: new SchemaSublistField_1.SchemaSublistField('amortizationperiod', 'time'),
                        amortizationtype: new SchemaSublistField_1.SchemaSublistField('amortizationtype', 'time'),
                        amount: new SchemaSublistField_1.SchemaSublistField('amount', 'time'),
                        apply: new SchemaSublistField_1.SchemaSublistField('apply', 'time'),
                        billeddate: new SchemaSublistField_1.SchemaSublistField('billeddate', 'time'),
                        doc: new SchemaSublistField_1.SchemaSublistField('doc', 'time'),
                        item: new SchemaSublistField_1.SchemaSublistField('item', 'time'),
                        job: new SchemaSublistField_1.SchemaSublistField('job', 'time'),
                        memo: new SchemaSublistField_1.SchemaSublistField('memo', 'time'),
                        rate: new SchemaSublistField_1.SchemaSublistField('rate', 'time'),
                        rateschedule: new SchemaSublistField_1.SchemaSublistField('rateschedule', 'time'),
                        revrecenddate: new SchemaSublistField_1.SchemaSublistField('revrecenddate', 'time'),
                        revrecschedule: new SchemaSublistField_1.SchemaSublistField('revrecschedule', 'time'),
                        revrecstartdate: new SchemaSublistField_1.SchemaSublistField('revrecstartdate', 'time'),
                        taxable: new SchemaSublistField_1.SchemaSublistField('taxable', 'time'),
                        taxcode: new SchemaSublistField_1.SchemaSublistField('taxcode', 'time'),
                        taxrate1: new SchemaSublistField_1.SchemaSublistField('taxrate1', 'time'),
                        unit: new SchemaSublistField_1.SchemaSublistField('unit', 'time'),
                        url: new SchemaSublistField_1.SchemaSublistField('url', 'time')
                    }
                }
            };
        }
        InvoiceSchema.getInstance = function () {
            if (!this.instance) {
                this.instance = new InvoiceSchema();
            }
            return this.instance;
        };
        return InvoiceSchema;
    }());
    exports.InvoiceSchema = InvoiceSchema;
});
