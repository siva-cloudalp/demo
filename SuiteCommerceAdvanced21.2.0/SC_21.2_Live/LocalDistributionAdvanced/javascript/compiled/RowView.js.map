{"version":3,"sources":["RowView.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;;;;;;;;;;;;;;IAaF;QAA6B,2BAAQ;QAGjC,iBAAmB,OAAuB;YAA1C,YACI,iBAAO,SAKV;YARS,cAAQ,GAAG,YAAY,CAAC;YAK9B,IAAI,OAAO,CAAC,QAAQ,EAAE;gBAClB,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;aACpC;;QACL,CAAC;QAEM,4BAAU,GAAjB;YACI,OAAO,EAAE,CAAC;QACd,CAAC;QACL,cAAC;IAAD,CAdA,AAcC,CAd4B,WAAI,GAchC;IAdY,0BAAO","file":"RowView.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"RowView\"/>\n// @Typescript-full\n\nimport * as row_view_tpl from 'row_view.tpl';\n\nimport { View } from './View';\n\ninterface RowViewOptions {\n    template?: unknown | string;\n}\n\nexport class RowView extends View<{}> {\n    protected template = row_view_tpl;\n\n    public constructor(options: RowViewOptions) {\n        super();\n\n        if (options.template) {\n            this.template = options.template;\n        }\n    }\n\n    public getContext(): {} {\n        return {};\n    }\n}\n"]}