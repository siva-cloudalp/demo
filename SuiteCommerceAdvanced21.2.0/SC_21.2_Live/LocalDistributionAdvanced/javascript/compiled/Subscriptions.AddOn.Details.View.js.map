{"version":3,"sources":["Subscriptions.AddOn.Details.View.ts"],"names":[],"mappings":"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","file":"Subscriptions.AddOn.Details.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Subscriptions.AddOn.Details.View\"/>\n// @module SubscriptionsAddOnDetailsView\n\nimport * as subscriptions_addon_details from 'subscriptions_addon_details.tpl';\nimport { Loggers } from '../../../Commons/Loggers/JavaScript/Loggers';\nimport { SubscriptionsModel } from './Subscriptions.Model';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { AjaxRequestsKiller } from '../../../Commons/AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\n\nimport { SubscriptionsPricingView } from './Subscriptions.Pricing.View';\n\nimport { SubscriptionsStatusView } from './Subscriptions.Status.View';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport SummaryView = require('./Subscriptions.AddOn.Summary.View');\nimport resizeImage = require('../../../Commons/Utilities/JavaScript/Utilities.ResizeImage');\nimport QuantityAmount = require('./Subscriptions.AddOn.Quantity.Amount.View');\nimport Utils = require('../../../Commons/Utilities/JavaScript/Utils');\nimport GlobalViewsConfirmationView = require('../../../Commons/GlobalViews/JavaScript/GlobalViews.Confirmation.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\nconst SubscriptionsAddOnDetailsView: any = BackboneView.extend({\n    template: subscriptions_addon_details,\n\n    title: Utils.translate('Add-On Details'),\n\n    events: {\n        'click [data-action=\"placeOrder\"]': 'submit',\n        'click [data-action=\"cancel\"]': 'cancelAddOn'\n    },\n\n    initialize(options) {\n        this.application = options.application;\n        this.options = options;\n        this.model = this.options.model;\n        this.initializeModel(this.model);\n        this.subscription = this.options.subscription;\n    },\n\n    // The model must be initialized in two cases:\n    // with a model, when the view is rendered by navigation\n    // without a model, when the view is initialized by the url\n    initializeModel(line) {\n        if (line) {\n            if (\n                this.model.get('subscriptionLineTypeObj').subscriptionlinetypeText &&\n                this.model.get('subscriptionLineTypeObj').subscriptionlinetypeText !== 'Usage'\n            ) {\n                line.setRecurringAmount();\n                line.on(\n                    'change:recurringAmount_formatted change:quantity',\n                    this.onChangeQuantityListener,\n                    this\n                );\n            }\n        }\n    },\n\n    onChangeQuantityListener(e) {\n        this.render();\n        this.showContinueButton =\n            (this.model.get('initialQuantity') &&\n                this.model.get('initialQuantity') !== this.model.get('quantity')) ||\n            this.model.getStatusLabel() === 'NOT_INCLUDED';\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        if (!this.subscription || !this.model) {\n            this.subscription = new SubscriptionsModel({\n                internalid: this.options.routerArguments[0]\n            });\n            const loggersActionId = Loggers.getLogger().start('SUBSCRIPTIONS_ADDON_LOAD');\n            const fetch = this.subscription\n                .fetch({ killerId: AjaxRequestsKiller.getKillerId() })\n                .done(() => {\n                    this.model = this.subscription.findLineInUnifiedCollection(\n                        parseInt(this.options.routerArguments[1], 10)\n                    );\n                    this.initializeModel(this.model);\n                    Loggers.getLogger().end(loggersActionId);\n                });\n\n            return fetch;\n        }\n        return jQuery.Deferred().resolve();\n    },\n\n    childViews: {\n        'Pricing.View': function() {\n            if (!this.quantityPricingView) {\n                const prices =\n                    this.model.get('item').get('_priceDetails') &&\n                    this.model.get('item').get('_priceDetails').priceschedule;\n                if (prices && prices.length > 0) {\n                    this.quantityPricingView = new SubscriptionsPricingView({\n                        model: this.model,\n                        fullMode: true,\n                        title:\n                            this.model.get('pricePlanTypeObj').pricePlanTypeText +\n                            Utils.translate(' Pricing')\n                    });\n                }\n            }\n            return this.quantityPricingView;\n        },\n        'Status.View': function() {\n            return new SubscriptionsStatusView({ status: this.model.getStatusLabel() });\n        },\n        'Quantity.Amount': function() {\n            if (this.model.get('subscriptionLineTypeObj').subscriptionlinetypeText !== 'Usage') {\n                return new QuantityAmount({ model: this.model });\n            }\n        },\n        'Summary.View': function() {\n            return new SummaryView({\n                model: this.model,\n                isByUsage:\n                    this.model.get('subscriptionLineTypeObj').subscriptionlinetypeText === 'Usage'\n            });\n        }\n    },\n\n    cancelAddOn(e) {\n        e.preventDefault();\n        const deleteConfirmationView = new GlobalViewsConfirmationView({\n            callBack: this._cancelAddon,\n            callBackParameters: {\n                context: this\n            },\n            title: Utils.translate('Cancel Line from subscription'),\n            body: Utils.translate(\n                'Please, confirm you want to cancel this item from your subscription'\n            ),\n            autohide: true\n        });\n        return this.application.getLayout().showInModal(deleteConfirmationView);\n    },\n\n    _cancelAddon(options) {\n        const componentArea =\n            Configuration.get('subscriptions.lineStatusChange') === 'Allow Suspending / Resuming'\n                ? 'SUBSCRIPTIONS_ADDON_PAUSED'\n                : 'SUBSCRIPTIONS_ADDON_CANCELED';\n\n        const params = {\n            lineType: options.context.model.get('chargeType')\n        };\n\n        const loggersActionId = Loggers.getLogger().start(componentArea);\n        options.context.subscription\n            .save({\n                lineNumber: options.context.model.get('lineNumber'),\n                action: 'delete'\n            })\n            .done(() => {\n                Loggers.getLogger().end(loggersActionId);\n                Backbone.history.navigate(\n                    `subscription/${options.context.subscription.get('internalid')}`,\n                    true\n                );\n            });\n    },\n\n    submit(e) {\n        e.preventDefault();\n        const updatedModel = new SubscriptionsModel();\n        updatedModel.set('internalid', this.subscription.get('internalid'));\n        updatedModel.set('quantity', this.model.get('quantity'));\n        updatedModel.set('lineNumber', this.model.get('lineNumber'));\n\n        const isOptionalAddOn = this.subscription.hasAddOnByLineNumber(\n            updatedModel.get('lineNumber')\n        );\n        const qtyDifference = this.model.has('initialQuantity')\n            ? this.model.get('quantity') - this.model.get('initialQuantity')\n            : 0;\n\n        const loggersActionId = Loggers.getLogger().start(\n            qtyDifference !== 0 ? 'SUBSCRIPTIONS_ADDON_QTY_CHANGED' : 'SUBSCRIPTIONS_ADDON_ADDED'\n        );\n\n        updatedModel.save().done(() => {\n            let params = {};\n            if (qtyDifference !== 0) {\n                params = {\n                    lineType: this.model.get('chargeType'),\n                    qtyChange: qtyDifference > 0 ? 'INCREASED' : 'DECREASED'\n                };\n            } else if (!isOptionalAddOn) {\n                params = {\n                    lineType: this.model.get('chargeType')\n                };\n            }\n            Loggers.getLogger().end(loggersActionId, params);\n            Backbone.history.navigate(`subscription/${this.subscription.get('internalid')}`, true);\n        });\n    },\n\n    // @method getSelectedMenu @return {String}\n    getSelectedMenu() {\n        return 'subscriptions';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages() {\n        return [\n            {\n                text: this.title,\n                href: '/Subscriptions'\n            },\n            {\n                text: this.subscription.get('name'),\n                href: `subscription/${this.subscription.get('internalid')}`\n            },\n            {\n                text: Utils.translate('Add-ons'),\n                href: `subscription/${this.subscription.get('internalid')}/addons`\n            },\n            {\n                text: Utils.translate(this.model.get('item').get('itemId')),\n                href: `subscription/${this.subscription.get('internalid')}/addons/${this.model.get(\n                    'internalId'\n                )}`\n            }\n        ];\n    },\n\n    getContext() {\n        const item = this.model.get('item');\n        const name = item.get('storeDisplayName') || item.get('itemId') || '';\n\n        // @class Overview.Banner.View.Context\n        return {\n            // @property {String} internalId\n            internalId: this.model.get('internalId'),\n            // @property {String} subscriptionPlanId\n            subscriptionPlanId: this.model.get('subscriptionplan'),\n            // @property {String} imageUrl\n            imageUrl: resizeImage(item.get('imageUrl'), 'main'),\n            // @property {String} displayName\n            displayName: name,\n            // @property {bool} hasDescription\n            hasDescription: !!item.get('storedetailedDescription'),\n            // @property {String} description\n            description: item.get('storedetailedDescription'),\n            // @property {String} itemPrice\n            itemPrice: this.model.getDefaultOfferStr(),\n            // @property {number} quantity\n            quantity: this.model.get('quantity'),\n            // @property {bool} setMinusDisabled\n            setMinusDisabled: this.setMinusDisabled,\n            // @property {bool} showInfoMessage\n            showInfoMessage: this.model.get('isProrated') === true,\n            // @property {bool} showContinueButton\n            showContinueButton: !this.model.isReadOnly(),\n            // @property {bool} showCancelButton\n            showCancelButton: this.model.get('canBeSuspended'),\n            // @property {bool} isAddingLine\n            isAddingLine: this.model.get('status') === 'NOT_INCLUDED',\n            // @property {bool} hasPriceIntervals\n            hasPriceIntervals: this.model.hasPriceIntervals()\n        };\n    }\n});\n\nexport = SubscriptionsAddOnDetailsView;\n"]}