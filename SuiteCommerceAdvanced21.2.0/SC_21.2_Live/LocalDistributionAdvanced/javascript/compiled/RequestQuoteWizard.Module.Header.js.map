{"version":3,"sources":["RequestQuoteWizard.Module.Header.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAQF,OAAS,oCAAgB,CAAC,MAAM,CAAC;QAC7B,gCAAgC;QAChC,QAAQ,EAAE,qCAAqC;QAE/C,oGAAoG;QACpG,iBAAiB;QACjB,UAAU,EAAE;YACR,oCAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC9E,CAAC;QAED,qBAAqB;QACrB,qDAAqD;QACrD,UAAU,EAAE;YACR,kDAAkD;YAClD,OAAO;gBACH,oDAAoD;gBACpD,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK;gBACxB,8BAA8B;gBAC9B,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM;gBAChD,oCAAoC;gBACpC,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE;gBACrC,iCAAiC;gBACjC,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC;aAC1C,CAAC;YACF,0CAA0C;QAC9C,CAAC;QAED,kHAAkH;QAClH,mBAAmB;QACnB,cAAc,EAAE;YACZ,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,UAAS,KAAK,EAAE,IAAI;gBAC7D,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC9B,OAAO,KAAK,CAAC;YACjB,CAAC,EAAE,CAAC,CAAC,CAAC;QACV,CAAC;QAED,uFAAuF;QACvF,iBAAiB;QACjB,OAAO,EAAE;YACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAE9D,oCAAgB,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAC9D,CAAC;KACJ,CAAC,CAAC","file":"RequestQuoteWizard.Module.Header.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"RequestQuoteWizard.Module.Header\"/>\n\nimport * as requestquote_wizard_module_header_tpl from 'requestquote_wizard_module_header.tpl';\nimport { WizardStepModule } from '../../Wizard/JavaScript/Wizard.StepModule';\n\n// @class WizardModule.Module.Header @extend Wizard.Module\nexport = WizardStepModule.extend({\n    // @property {Function} template\n    template: requestquote_wizard_module_header_tpl,\n\n    // @method initialize Override default initialize to attach on model lines change event to re-render\n    // @return {Void}\n    initialize: function() {\n        WizardStepModule.prototype.initialize.apply(this, arguments);\n        this.wizard.model.get('lines').on('add remove change', this.render, this);\n    },\n\n    // @method getContext\n    // @return {RequestQuoteWizard.Module.Header.Context}\n    getContext: function() {\n        // @class RequestQuoteWizard.Module.Header.Context\n        return {\n            // property {RequestQuoteWizard.Module.Header} model\n            model: this.wizard.model,\n            // @property {Boolean} hasItem\n            hasItem: !!this.wizard.model.get('lines').length,\n            // @property {Number} productsLength\n            productsLength: this.getItemsLength(),\n            // @property {Boolean} hasOneItem\n            hasOneItem: this.getItemsLength() === 1\n        };\n        // @class RequestQuoteWizard.Module.Header\n    },\n\n    // @method getItemsLength Returns the number of items in the entire model, that is the sum of all lines quantities\n    // @return {Number}\n    getItemsLength: function() {\n        return this.wizard.model.get('lines').reduce(function(accum, line) {\n            accum += line.get('quantity');\n            return accum;\n        }, 0);\n    },\n\n    // @method destroy Override default implementation to detach form wizard's model events\n    // @return {Void}\n    destroy: function() {\n        this.wizard.model.get('lines').off('add remove', this.render);\n\n        WizardStepModule.prototype.destroy.apply(this, arguments);\n    }\n});\n"]}