{"version":3,"sources":["Backbone.CollectionView.ts"],"names":[],"mappings":"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","file":"Backbone.CollectionView.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Backbone.CollectionView\"/>\nimport * as _ from 'underscore';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\n\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport PluginContainer = require('../../PluginContainer/JavaScript/PluginContainer');\n\nconst classProperties = {\n    postRowCompile: new PluginContainer()\n};\n\nconst BackboneCollectionView: any = BackboneView.extend(\n    {\n        // @property {Class} childView the View class of this collection view children\n        childView: BackboneView,\n\n        template: null,\n\n        // @property {Object} childViewOptions the options to be passed to children views\n        childViewOptions: {},\n\n        // @property {Number} viewsPerRow\n        viewsPerRow: 3,\n\n        // @property {Number} rowsCount Total number of rows used by the CSS framework\n        rowsCount: 12,\n\n        // @property {Function} childTemplate Template used to override the default child view template\n        childTemplate: null,\n\n        // @property {Function} cellTemplate Template used to create a cell\n        cellTemplate: null,\n\n        // @property {Function} rowTemplate Template used to create a row\n        rowTemplate: null,\n\n        // @property  {String} cellsContainerId Defines the data type\n        // values used to find the container element of the cells in a row\n        cellsContainerId: 'backbone.collection.view.cells',\n\n        // @property  {String} cellContainerId Defines the data type values\n        // used to find the container elements of the child view in a cell\n        cellContainerId: 'backbone.collection.view.cell',\n\n        // @property  {String} rowsContainerId Defines the data type values\n        // used to find the container elements of the rows in a template\n        rowsContainerId: 'backbone.collection.view.rows',\n\n        // @property {Object} allows the user to define a custom context.\n        context: {},\n\n        initialize: function(options: any) {\n            this.childView = options.childView || this.childView;\n            this.childViewOptions = options.childViewOptions || this.childViewOptions;\n            this.viewsPerRow = options.viewsPerRow ? options.viewsPerRow : this.viewsPerRow;\n            if (this.viewsPerRow < 1) {\n                this.viewsPerRow = Infinity;\n            }\n\n            this.context = options.context || {};\n            this.collection = options.collection;\n            this.childTemplate = options.childTemplate || this.childTemplate;\n            this.cellTemplate = options.cellTemplate || this.cellTemplate;\n            this.rowTemplate = options.rowTemplate || this.rowTemplate;\n            this.cellsContainerId = options.cellsContainerId || this.cellsContainerId;\n            this.cellContainerId = options.cellContainerId || this.cellContainerId;\n            this.template = options.template || this.template;\n\n            this.childCells = [];\n        },\n\n        createChildElement: function() {\n            const data = this.placeholderData || {};\n            const tag_name = data.childTagName || 'div';\n            const element = jQuery(`<${tag_name}></${tag_name}>`);\n\n            if (data.childId) {\n                element.attr('id', data.childId);\n            }\n\n            if (data.childClass) {\n                element.addClass(data.childClass);\n            }\n\n            if (data.childDataAction) {\n                element.attr('data-action', data.childDataAction);\n            }\n\n            if (data.childDataType) {\n                element.attr('data-type', data.childDataType);\n            }\n\n            return element;\n        },\n\n        // @method generateRowContext Generates the context used by the\n        // row template. This method is aimed to be overrided\n        // @return {Backbone.CollectionView.RowContext}\n        generateRowContext: function() {\n            // @class Backbone.CollectionView.RowContext\n            return {};\n        },\n\n        // @method generateCellContext Generates the context used by the\n        // cell template @return {Backbone.CollectionView.CellContext}\n        generateCellContext: function(child_view_instance: any) {\n            const child_view_instance_context = child_view_instance.getTemplateContext\n                ? child_view_instance.getTemplateContext()\n                : child_view_instance.getContext\n                ? child_view_instance.getContext()\n                : {};\n\n            // @class Backbone.CollectionView.CellContext\n            return _.extend(child_view_instance_context, {\n                // @property {Number} spanSize\n                spanSize: this.calculateSpanSize()\n            });\n        },\n\n        calculateSpanSize: function() {\n            return this.rowsCount / this.viewsPerRow;\n        },\n\n        // @method createCell Internal method for generate the render\n        // result of a child view wrapping it into a cell container.\n        createCell: function(model: any, index: any) {\n            const options = _.extend({}, this.childViewOptions, { model: model, index: index });\n            const child_view_instance = new this.childView(options);\n\n            this.childCells.push(child_view_instance);\n\n            if (\n                !(\n                    child_view_instance.attributes &&\n                    child_view_instance.attributes['data-root-component-id']\n                )\n            ) {\n                child_view_instance.attributes = child_view_instance.attributes || {};\n                child_view_instance.attributes['data-root-component-id'] =\n                    (this.attributes && this.attributes['data-root-component-id']) || '';\n            }\n\n            child_view_instance.parentView = child_view_instance.parentView || this;\n            child_view_instance.hasParent = true;\n\n            child_view_instance.setElement(this.createChildElement());\n\n            child_view_instance.render();\n\n            if (child_view_instance.$el.children().length === 1) {\n                child_view_instance.setElement(child_view_instance.$el.children()[0]);\n            }\n\n            if (this.cellTemplate) {\n                let $cell = jQuery(\n                    this.cellTemplate(this.generateCellContext(child_view_instance))\n                );\n                const $placeholder = $cell.find(`[data-type=\"${this.cellContainerId}\"]`);\n\n                if ($placeholder.length) {\n                    $placeholder.replaceWith(child_view_instance.$el);\n                } else {\n                    $cell = jQuery('<div></div>');\n                    $cell.append(child_view_instance.$el);\n                }\n\n                return $cell;\n            }\n            return child_view_instance.$el;\n        },\n\n        // @method appendCellsToRow Add an array of jQuery cells into an\n        // jQuery row @param {Array<jQuery>} cells\n        appendCellsToRow: function(cells: any) {\n            const $cells = jQuery(\n                _(cells).map(function(element: any) {\n                    return element.get(0);\n                })\n            );\n\n            if (this.rowTemplate) {\n                const tmpl_str = this.rowTemplate(this.generateRowContext());\n                BackboneCollectionView.postRowCompile.executeAll(tmpl_str, this);\n                let $row = jQuery(tmpl_str);\n\n                const $placeholder = $row.find(`[data-type=\"${this.cellsContainerId}\"]`);\n\n                if ($placeholder.length) {\n                    $placeholder.replaceWith($cells);\n                } else {\n                    $row = jQuery('<div></div>');\n                    $row.append($cells);\n                }\n\n                return $row;\n            }\n            return $cells;\n        },\n\n        // @method render Override default render to give support to\n        // iteration and multiple items per row\n        render: function() {\n            this.collection =\n                this.collection instanceof Backbone.Collection\n                    ? this.collection\n                    : new Backbone.Collection(this.collection);\n\n            // Empty the div before starting the render\n            this.$el.empty();\n            if (this.template) {\n                this._render();\n            }\n\n            const self = this;\n            const rows = [];\n            let cells_in_row = [];\n\n            if (self.childTemplate) {\n                self.childView.prototype.template = self.childTemplate;\n            }\n\n            this.viewsPerRow =\n                (this.placeholderData && this.placeholderData.viewsPerRow) || this.viewsPerRow;\n\n            // @property {Array<Object>} collection this kind of view\n            // should be always have a collection property which is what is rendered.\n            this.collection.each(function(model: any, index: any) {\n                const cell = self.createCell(model, index);\n\n                if (self.rowTemplate) {\n                    cells_in_row.push(cell);\n\n                    if (\n                        self.viewsPerRow === 1 ||\n                        (index + 1) % self.viewsPerRow === 0 ||\n                        index + 1 === self.collection.length\n                    ) {\n                        rows.push(self.appendCellsToRow(cells_in_row));\n                        cells_in_row = [];\n                    }\n                } else {\n                    rows.push(cell);\n                }\n            });\n\n            const $content = jQuery(\n                _(rows).map(function(element: any) {\n                    return element.get(0);\n                })\n            );\n\n            if (this.template) {\n                this.$(`[data-type=\"${this.rowsContainerId}\"]`).replaceWith($content);\n            } else {\n                this.$el.append($content);\n            }\n        },\n\n        destroy: function() {\n            _.each(this.childCells, function(child: any) {\n                child && child.destroy();\n            });\n\n            BackboneView.prototype.destroy.apply(this, Array.prototype.slice.call(arguments));\n        },\n\n        getContext: function() {\n            const context = {\n                collection: this.collection,\n                showCells: !!this.collection.length\n            };\n\n            return _.extend(context, this.context);\n        }\n    },\n    classProperties\n);\n\nexport = BackboneCollectionView;\n"]}