{"version":3,"sources":["ReorderItems.Collection.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAOF,IAAM,sBAAsB,GAAQ,yBAAyB,CAAC,MAAM,CAAC;QACjE,GAAG,EAAE,kCAAkC;QAEvC,KAAK,EAAE,sCAAiB;QAExB,KAAK,EAAE,UAAS,QAAQ;YACpB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,iBAAiB,CAAC;YACpD,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;YAE9C,OAAO,QAAQ,CAAC,OAAO,CAAC;QAC5B,CAAC;QAED,MAAM,EAAE,UAAS,OAAO,EAAE,WAAW;YACjC,IAAM,YAAY,GAAQ;gBACtB,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK;gBACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,IAAI,EAAE,OAAO,CAAC,IAAI;aACrB,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAChB,IAAI,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC/D,WAAW,GAAG,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAEpD,YAAY,CAAC,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBACnC,YAAY,CAAC,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;aACpC;YAED,IAAI,CAAC,KAAK,CAAC;gBACP,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,IAAI;gBACX,QAAQ,EAAE,OAAO,CAAC,QAAQ;aAC7B,CAAC,CAAC;QACP,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,sBAAsB,CAAC","file":"ReorderItems.Collection.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ReorderItems.Collection\"/>\nimport { ReorderItemsModel } from './ReorderItems.Model';\n\nimport TransactionLineCollection = require('../../../Commons/Transaction/JavaScript/Transaction.Line.Collection');\n\nconst ReorderItemsCollection: any = TransactionLineCollection.extend({\n    url: 'services/ReorderItems.Service.ss',\n\n    model: ReorderItemsModel,\n\n    parse: function(response) {\n        this.totalRecordsFound = response.totalRecordsFound;\n        this.recordsPerPage = response.recordsPerPage;\n\n        return response.records;\n    },\n\n    update: function(options, list_header) {\n        const data_filters: any = {\n            sort: options.sort.value,\n            order_id: this.order_id,\n            order: options.order,\n            page: options.page\n        };\n\n        if (!this.order_id) {\n            let date_string = options.filter.value.apply(list_header.view);\n            date_string = date_string && date_string.split('T');\n\n            data_filters.from = date_string[0];\n            data_filters.to = date_string[1];\n        }\n\n        this.fetch({\n            data: data_filters,\n            reset: true,\n            killerId: options.killerId\n        });\n    }\n});\n\nexport = ReorderItemsCollection;\n"]}