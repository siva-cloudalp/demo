{"version":3,"sources":["PaymentWizard.CreditTransaction.Model.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAQF,SAAS,uBAAuB,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;YAC1B,OAAO,KAAK,CAAC,SAAS,CAAC,2CAA2C,CAAC,CAAC;SACvE;QAED,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,OAAO,KAAK,CAAC,SAAS,CAAC,wCAAwC,CAAC,CAAC;SACpE;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE;YACxB,OAAO,KAAK,CAAC,SAAS,CAAC,wDAAwD,CAAC,CAAC;SACpF;QAED,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;YACrB,OAAO,KAAK,CAAC,SAAS,CAAC,+DAA+D,CAAC,CAAC;SAC3F;IACL,CAAC;IAED,sEAAsE;IACtE,IAAM,mCAAmC,GAAQ,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;QACnE,UAAU,EAAE;YACR,MAAM,EAAE;gBACJ,EAAE,EAAE,uBAAuB;aAC9B;SACJ;QAED,UAAU,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACnB,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;aAC/B;QACL,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,mCAAmC,CAAC","file":"PaymentWizard.CreditTransaction.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PaymentWizard.CreditTransaction.Model\"/>\n\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\nfunction validateAmountRemaining(value, name, form) {\n    if (isNaN(parseFloat(value))) {\n        return Utils.translate('The amount to apply is not a valid number');\n    }\n\n    if (value <= 0) {\n        return Utils.translate('The amount to apply has to be positive');\n    }\n\n    if (value > form.remaining) {\n        return Utils.translate('The amount to apply cannot exceed the remaining amount');\n    }\n\n    if (form.orderTotal < 0) {\n        return Utils.translate('The amount to apply cannot exceed the remaining payment total');\n    }\n}\n\n// @class PaymentWizard.CreditTransaction.Model @extend Backbone.Model\nconst PaymentWizardCreditTransactionModel: any = Backbone.Model.extend({\n    validation: {\n        amount: {\n            fn: validateAmountRemaining\n        }\n    },\n\n    initialize: function() {\n        if (!this.get('type')) {\n            this.set('type', 'Deposit');\n        }\n    }\n});\n\nexport = PaymentWizardCreditTransactionModel;\n"]}