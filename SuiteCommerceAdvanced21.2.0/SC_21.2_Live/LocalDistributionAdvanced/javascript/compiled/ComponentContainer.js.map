{"version":3,"sources":["ComponentContainer.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;IAMF;QAAA;YAEY,eAAU,GAAG,EAAE,CAAC;QA8C5B,CAAC;QA5CU,8CAAiB,GAAxB,UAAyB,SAAc;YACnC,IAAI,SAAS,IAAI,SAAS,CAAC,aAAa,EAAE;gBACtC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,aAAa,CACzD,SAAS,EACT,SAAS,CAAC,aAAa,CAC1B,CAAC;gBACF,OAAO;aACV;YACD,IAAM,KAAK,GAAG,IAAI,KAAK,CACnB,iGAAiG,CACpG,CAAC;YACF,KAAK,CAAC,IAAI,GAAG,eAAe,CAAC;YAC7B,MAAM,KAAK,CAAC;QAChB,CAAC;QAEM,yCAAY,GAAnB,UAAoB,cAAsB;YACtC,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC;QACnD,CAAC;QAEO,0CAAa,GAArB,UAAsB,SAAc,EAAE,cAAmB;YACrD,IAAI;gBACA,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,UAAS,KAAK,EAAE,IAAI;oBAClC,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,EAAE;wBACnC,GAAG,EAAE;4BACD,OAAO,KAAK,CAAC;wBACjB,CAAC;wBACD,GAAG,EAAE;4BACD,MAAM,IAAI,KAAK,CACX,kCAAgC,IAAI,sBAAiB,cAAgB,CACxE,CAAC;wBACN,CAAC;qBACJ,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;aACN;YAAC,OAAO,CAAC,EAAE;gBACR,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACpB;YAED,OAAO,SAAS,CAAC;QACrB,CAAC;QAEa,8BAAW,GAAzB;YACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,kBAAkB,EAAE,CAAC;YAC1D,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;QACL,yBAAC;IAAD,CAhDA,AAgDC,IAAA;IAhDY,gDAAkB","file":"ComponentContainer.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ComponentContainer\"/>\n\nimport * as _ from 'underscore';\n\nexport class ComponentContainer {\n    private static instance;\n    private components = {};\n\n    public registerComponent(component: any): void {\n        if (component && component.componentName) {\n            this.components[component.componentName] = this.sealComponent(\n                component,\n                component.componentName\n            );\n            return;\n        }\n        const error = new Error(\n            'Invalid component parameter, make sure you specify a componentName property and getProxy method'\n        );\n        error.name = 'INVALID_PARAM';\n        throw error;\n    }\n\n    public getComponent(component_name: string): any {\n        return this.components[component_name] || null;\n    }\n\n    private sealComponent(component: any, component_name: any): any {\n        try {\n            _.each(component, function(value, prop) {\n                Object.defineProperty(component, prop, {\n                    get: function() {\n                        return value;\n                    },\n                    set: function() {\n                        throw new Error(\n                            `You cannot override property ${prop} of component ${component_name}`\n                        );\n                    }\n                });\n            });\n        } catch (e) {\n            console.error(e);\n        }\n\n        return component;\n    }\n\n    public static getInstance() {\n        this.instance = this.instance || new ComponentContainer();\n        return this.instance;\n    }\n}\n"]}