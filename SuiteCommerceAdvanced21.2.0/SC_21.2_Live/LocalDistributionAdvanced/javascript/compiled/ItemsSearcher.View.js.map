{"version":3,"sources":["ItemsSearcher.View.ts"],"names":[],"mappings":"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","file":"ItemsSearcher.View.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ItemsSearcher.View\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/GlobalDeclarations.d.ts\" />\n\nimport * as _ from 'underscore';\nimport * as itemssearcher_tpl from 'itemssearcher.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport '../../../Commons/Utilities/JavaScript/typeahead';\n\nimport ItemsSearcherUtils = require('./ItemsSearcher.Utils');\nimport ItemsSearcherCollection = require('./ItemsSearcher.Collection');\nimport ItemsSearcherItemView = require('./ItemsSearcher.Item.View');\nimport PluginContainer = require('../../../Commons/PluginContainer/JavaScript/PluginContainer');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class ItemsSearcher.View @extends Backbone.View\nconst ItemsSearcherView: any = BackboneView.extend({\n    // @property {Function} template\n    template: function() {},\n\n    // @property {ItemsSearcher.View.Options} defaultOptions\n    // @class ItemsSearcher.View.Options\n    defaultOptions: {\n        // @property {String} placeholderLabel\n        placeholderLabel: Utils.translate('Search for products'),\n        // @property {Number} minLength\n        minLength: 3,\n        // @property {Number} maxLength\n        maxLength: 10,\n        // @property {Number} limit\n        limit: 10,\n        // @property {String} sort\n        sort: 'relevance:desc',\n        // @property {Array} labels\n        labels: [],\n        // @property {ItemsSearcher.Collection} collection\n        collection: ItemsSearcherCollection,\n        // @property {String} query\n        query: '',\n        // @property {Boolean} ajaxDone\n        ajaxDone: false,\n        // @property {Boolean} showMenuOnClick\n        showMenuOnClick: false,\n        // @property {ItemsSearcher.Item.View} itemView\n        itemView: ItemsSearcherItemView,\n        // @property {Boolean} highlight\n        highlight: true,\n        // @property {Function} template\n        template: itemssearcher_tpl,\n        // @property {Void} componentId\n        componentId: void 0,\n        // @property {Void} componentName\n        componentName: void 0,\n        // @property {Boolean} showSeeAll Indicate if the first result should be the \"See All\" option\n        showSeeAll: true,\n        // @property {Boolean} highlightFirst\n        highlightFirst: false,\n        // @property {ItemsSearcher.View.Options.Item.View.Option} itemViewOptions\n        itemViewOptions: {},\n        // @property {ItemsSearcher.View.Options.Collection.Option} collectionOptions\n        collectionOptions: {},\n        // @property {Function<Item.Model, String, String>} getItemDisplayName This function give the chance to\n        // change the way items display name is returned\n        getItemDisplayName: null\n    },\n    // @class SiteSearch.View\n\n    // @property {Object} events\n    events: {\n        'keyup [data-type=\"search-input\"]': 'onKeyUp',\n        'keydown [data-type=\"search-input\"]': 'onKeyDown'\n    },\n\n    // @method initialize\n    // @param {ItemsSearcher.View.Options?} options\n    // @return {Void}\n    initialize: function(options) {\n        this.options = _.defaults(options || {}, this.defaultOptions);\n\n        this.collection = new this.options.collection([], this.options.collectionOptions);\n        this.template = this.options.template;\n\n        this.on('afterViewRender', this.configureTypeahead, this);\n\n        this.installPlugins();\n    },\n\n    // @method installPlugins Internal method used to define the plugins this component expose\n    // @return {Void}\n    installPlugins: function() {\n        // @property {PluginContainer} postItemsSuggestionObtained This hook is executed after the fetch of item of retrieved\n        // Allows apply any extra transformation over the result from the Search API before those are displayed by the type ahead\n        // Each execute method on this hook will receive:\n        // the collection {ItemsSearcher.Collection} of items\n        // the current string query\n        // and it's expected to return another {ItemsSearcher.Collection} collection.\n        this.postItemsSuggestionObtained = new PluginContainer();\n    },\n\n    // @method getTypeAheadConfiguration Generates the type ahead configuration\n    // @return {ItemsSearcher.View.TypeAheadConfiguration}\n    getTypeAheadConfiguration: function() {\n        const self = this;\n\n        // @class ItemsSearcher.View.TypeAheadConfiguration\n        return {\n            limit: self.options && self.options.limit ? self.options.limit + 1 : '',\n            // @property {Function<String,Function>} source\n            source: _.debounce(_.bind(self.loadSuggestionItemsSource, self), 500),\n            // @property {Function<String>} displayKey Function used to return the string to be displayed on the main input after an item is selected\n            displayKey: _.bind(self.getSelectedItemDisplayText, self),\n            // @property {Object<suggestion:Function>} templates\n            templates: {\n                suggestion: _.bind(self.getSuggestionItemTemplate, self)\n            },\n            // @property boolean async\n            async: true\n        };\n        // @class ItemsSearcher.View\n    },\n\n    // @method configureTypeahead Configures the type ahead and loads the $searchElement attribute\n    // @return {Void}\n    configureTypeahead: function() {\n        const self = this;\n        const typeaheadOptions = {\n            highlight: this.options.highlight,\n            minLength: this.options.minLength\n        };\n\n        // @property {jQuery} $searchElement\n        self.$searchElement = self.$('[data-type=\"search-input\"]');\n\n        // after the layout has be rendered, we initialize the plugin\n        if (SC.ENVIRONMENT.jsEnvironment !== 'server') {\n            self.$searchElement\n                .typeahead(typeaheadOptions, this.getTypeAheadConfiguration())\n                .on('typeahead:selected', _.bind(self.onItemSelected, self));\n\n            self.$searchElement.on('focus', _.bind(self.selectFirstIfRequire, self));\n\n            // TYPE AHEAD HACKS\n            const drop = self.$searchElement.data('ttTypeahead').menu;\n            drop.$node.off('click.tt', '.tt-suggestion').on(\n                'click.tt',\n                '.tt-suggestion',\n                _.bind(function($e) {\n                    $e.preventDefault();\n                    $e.stopPropagation();\n                    drop.trigger('suggestionClicked', jQuery($e.currentTarget));\n                }, drop)\n            );\n\n            // Display menu when selected the input hack\n            if (self.options.showMenuOnClick) {\n                self.$searchElement.focus(function() {\n                    const ev = jQuery.Event('keydown');\n\n                    ev.keyCode = ev.which = 40;\n                    jQuery(this).trigger(ev);\n                    return true;\n                });\n            }\n        }\n    },\n\n    // @method getCurrentQuery Get the current search. Use when triggering events\n    // @return {String}\n    getCurrentQuery: function getCurrentQuery() {\n        return String(this.$searchElement.val()).trim();\n    },\n\n    // @method cleanSearch Clean the current search and close the dropdown\n    // @param {Boolean} stop_triggering_event Indicate if NOT trigger the event itemSelect indicating the unselected item\n    // @return {Void}\n    cleanSearch: function cleanSearch(stop_triggering_event) {\n        this.$searchElement.data('ttTypeahead') && this.$searchElement.data('ttTypeahead').close();\n\n        this.$searchElement.typeahead('val', '');\n\n        this.options.query = '';\n        this.options.selectedItem = null;\n\n        if (!stop_triggering_event) {\n            this.trigger('itemSelected', {\n                selectedItem: null,\n                collection: this.collection.models,\n                currentQuery: this.options.query\n            });\n        }\n    },\n\n    // @method onItemSelected Handle the selection of an item of the type-ahead result\n    // @param {HTMLEvent} e\n    // @param {String} item_id\n    // @return {Void}\n    onItemSelected: function onItemSelected(e, item_id) {\n        this.options.selectedItem = this.collection.get(item_id);\n\n        // @event itemSelected\n        this.trigger(\n            'itemSelected',\n            // @class ItemsSearcher.View.itemSelected.Properties\n            {\n                // @property {Item.Model?} selectedItem\n                selectedItem: this.collection.get(item_id),\n                // @property {Array<Item.Model>} collection\n                collection: this.collection.models,\n                // @property {String} currentQuery\n                currentQuery: this.options.query,\n                // @property {Boolean} isResultCompleted\n                isResultCompleted: this.options.ajaxDone\n            }\n        );\n        // @class ItemsSearcher.View\n    },\n\n    // @method setFocus Set the focus to the input searcher\n    // @return {Void}\n    setFocus: function setFocus() {\n        this.$searchElement.focus();\n    },\n\n    // @method selectFirstIfRequire Highlights the first item of the suggest if the highlightFirst options is specified\n    // @return {Void}\n    selectFirstIfRequire: function selectFirstIfRequire() {\n        if (this.options.highlightFirst) {\n            const $menu_container = this.$searchElement.data('ttTypeahead').menu;\n            const current_cursor_index = $menu_container.find('.tt-suggestion.tt-cursor').index();\n\n            if (current_cursor_index === -1) {\n                $menu_container\n                    .find('.tt-suggestion')\n                    .first()\n                    .addClass('tt-cursor');\n            }\n        }\n    },\n\n    // @method loadSuggestionItemsSource Implements the search logic by fetching the collection of items\n    // @param {String} query To string to search for\n    // @param {Function<Array<String>, Void>} callback IMPORTANT Based on the values passed in to this callback the typeAhead plugin will invoke\n    // the methd getSelectedItemDisplayText asking for the string of each item\n    // @return {Void}\n    loadSuggestionItemsSource: function loadSuggestionItemsSource(query, callback, callbackAsync) {\n        const self = this;\n\n        self.options.ajaxDone = false;\n        self.options.results = {};\n        self.options.query = ItemsSearcherUtils.formatKeywords(query);\n        // self.collection.reset(undefined, {silent:true});\n        this.collection = new this.options.collection([], this.options.collectionOptions);\n\n        // if the character length from the query is over the min length\n        if (self.options.query.length >= self.options.minLength) {\n            self.options.labels = [`see-all-${self.options.query}`];\n            callback(self.options.labels);\n\n            // self.$searchElement.data('ttTypeahead').dropdown.moveCursorDown();\n        }\n\n        // silent = true makes it invisible to any listener that is waiting for the data to load\n        // We can use jQuery's .done, as the fetch method returns a promise\n        // http://api.jquery.com/deferred.done/\n        self.collection\n            .fetch(\n                {\n                    data: {\n                        q: String(self.options.query).trim(),\n                        sort: self.options.sort,\n                        limit: self.options.limit,\n                        offset: 0\n                    },\n                    killerId: _.uniqueId('ajax_killer_')\n                },\n                {\n                    silent: true\n                }\n            )\n            .done(function() {\n                self.collection =\n                    self.postItemsSuggestionObtained.executeAll(self.collection, self.options) ||\n                    self.collection;\n\n                self.options.ajaxDone = true;\n                self.options.labels = self.options.showSeeAll\n                    ? [`see-all-${self.options.query}`].concat(self.getItemIds(self.collection))\n                    : self.getItemIds(self.collection);\n                // self.options.labels = self.options.showSeeAll ? ['see-all-' + self.options.query].concat(self.collection.pluck('_id')) : self.collection.pluck('_id');\n\n                if (!self.options.labels.length) {\n                    self.options.labels = [`see-all-${self.options.query}`];\n                }\n\n                callbackAsync(self.options.labels);\n\n                self.selectFirstIfRequire();\n            });\n    },\n\n    // @method getItemIds Given the collection of items it generates an array of Ids. This method is used so it is easy to use another model\n    // rather than Item.Model (let say Product.Model)\n    // @param {Item.Collection} collection\n    // @return {Array<String>}\n    getItemIds: function getItemIds(collection) {\n        return collection.map(function(item) {\n            return item.id;\n        });\n    },\n\n    // @method getSelectedItemDisplayText Returns the text shown on the input text when an item is selected by using the keyboard keys\n    // @param {String} item_id\n    // @return {String}\n    getSelectedItemDisplayText: function(item_id): string {\n        return this.getItemDisplayName(this.collection.get(item_id), this.options.query);\n    },\n\n    // @method getItemDisplayName Internal auxiliary method used to extract the display name of an item\n    // @param {Item.Model} item\n    // @param {String} query\n    // @return {String}\n    getItemDisplayName: function(item, query): string {\n        return _.isFunction(this.options.getItemDisplayName)\n            ? this.options.getItemDisplayName(item, query)\n            : item\n            ? item.get('_name')\n            : query;\n    },\n\n    // @method getSuggestionItemTemplate\n    // @param {String} item_id\n    // @return {jQuery} Returns a jQuery elements with the template\n    getSuggestionItemTemplate: function(item_id) {\n        const item_view_options = _.extend({}, this.options.itemViewOptions, {\n            model: this.collection.get(item_id),\n            query: this.options.query,\n            areResults: !!this.collection.length,\n            isAjaxDone: this.options.ajaxDone\n        });\n        const items_searcher_item = new this.options.itemView(item_view_options);\n\n        items_searcher_item.render();\n        return items_searcher_item.$el;\n    },\n\n    // @method onKeyUp Handle the visibility of the reset button, hide and show it\n    // @param {jQuertEvent} e\n    // @return {Void}\n    onKeyUp: function(e) {\n        // @event keyUp\n        this.trigger(\n            'keyUp',\n            // @class ItemsSearcher.View.KeyDown.Properties\n            {\n                // @property {Array<Item.Model>} collection\n                collection: this.collection.models,\n                // @property {jQueryEvent} eventObject\n                eventObject: e,\n                // @property {String} currentQuery\n                currentQuery: this.getCurrentQuery()\n            }\n        );\n\n        // @class ItemsSearcher.View\n    },\n\n    // @method onKeyDown Cleans the input field and hide the reset button on enter\n    // @param {jQueryEvent} e\n    // @return {Void}\n    onKeyDown: function(e) {\n        const current_text = this.$searchElement.typeahead('val');\n\n        if (\n            this.options.selectedItem &&\n            current_text !== this.getItemDisplayName(this.options.selectedItem, this.options.query)\n        ) {\n            this.options.selectedItem = null;\n\n            this.trigger('itemSelected', {\n                selectedItem: null,\n                collection: this.collection.models,\n                currentQuery: this.options.query\n            });\n        }\n\n        // @event keyDown\n        this.trigger(\n            'keyDown',\n            // @class ItemsSearcher.View.KeyDown.Properties\n            {\n                // @property {Array<Item.Model>} collection\n                collection: this.collection.models,\n                // @property {jQueryEvent} eventObject\n                eventObject: e,\n                // @property {String} currentQuery\n                currentQuery: this.getCurrentQuery()\n            }\n        );\n        // @class ItemsSearcher.View\n    },\n\n    // @method destroy Override default implementation to clean up all attached events of the initialize\n    // @return {Void}\n    destroy: function() {\n        this.off('afterViewRender');\n        this.$searchElement.off('click');\n\n        BackboneView.prototype.destroy.apply(this, arguments);\n    },\n\n    // @method getContext\n    // @returns {ItemsSearcher.View.Context}\n    getContext: function() {\n        // @class ItemsSearcher.View.Context\n        return {\n            // @property {String} defaultPlaceholderLabel\n            placeholderLabel: this.options.placeholderLabel,\n            // @property {Number} maxLength\n            maxLength: this.options.maxLength,\n            // @property {Boolean} showId\n            showId: !!this.options.componentId,\n            // @property {String} id\n            id: this.options.componentId,\n            // @property {Boolean} showName\n            showName: !!this.options.componentName,\n            // @property {String?} name\n            name: this.options.componentName\n        };\n        // @class ItemsSearcher.View\n    }\n});\n\nexport = ItemsSearcherView;\n"]}