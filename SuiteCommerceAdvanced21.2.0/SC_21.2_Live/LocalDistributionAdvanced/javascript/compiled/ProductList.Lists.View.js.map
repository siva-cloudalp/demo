{"version":3,"sources":["ProductList.Lists.View.ts"],"names":[],"mappings":"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","file":"ProductList.Lists.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductList.Lists.View\"/>\n\nimport * as product_list_lists_tpl from 'product_list_lists.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { Configuration } from '../../../Commons/Utilities/JavaScript/Configuration';\n\nimport GlobalViewsConfirmationView = require('../../../Commons/GlobalViews/JavaScript/GlobalViews.Confirmation.View');\nimport ProductListModel = require('../../../Commons/ProductList/JavaScript/ProductList.Model');\nimport ProductListCreationView = require('./ProductList.Edit.View');\nimport ProductListListDetailsView = require('./ProductList.ListDetails.View');\nimport ProductListAddedToCartView = require('./ProductList.AddedToCart.View');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport LiveOrderModel = require('../../../Commons/LiveOrder/JavaScript/LiveOrder.Model');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\n// @class ProductList.Lists.View @extends Backbone.View\nexport = BackboneView.extend({\n    template: product_list_lists_tpl,\n\n    title: Utils.translate('Wishlist'),\n\n    className: 'ProductListListsView',\n\n    attributes: {\n        id: 'WishlistList',\n        class: 'ProductListListsView'\n    },\n\n    events: {\n        'change [data-action=\"sort-by\"]': 'sortBy',\n        'click [data-action=\"add-list\"]': 'createProductList',\n        'click [data-action=\"delete-list\"]': 'askDeleteList',\n        'click [data-action=\"edit-list\"]': 'editListHandler',\n        'click [data-action=\"share-list\"]': 'shareList',\n        'click [data-action=\"add-to-cart\"]': 'addListToCartHandler',\n        'click [data-action=\"select\"]': 'toggleProductListHandler',\n        'click [data-action=\"navigate\"]': 'navigateToItems'\n    },\n\n    initialize: function(options) {\n        this.options = options;\n        this.application = options.application;\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        return this.application.ProductListModule.Utils.getProductListsPromise();\n    },\n\n    showContent: function showContent() {\n        this.collection = this.application.ProductListModule.Utils.getProductLists();\n\n        return BackboneView.prototype.showContent.apply(this, arguments);\n    },\n\n    render: function() {\n        BackboneView.prototype.render.apply(this, arguments);\n\n        // if there are no list we show the list creation form\n        if (!this.collection.length) {\n            this.newProductListView = new ProductListCreationView({\n                application: this.application,\n                parentView: this,\n                model: new ProductListModel() // create!\n            });\n            this.newProductListView.render();\n            this.$('[data-type=\"new-product-list\"]').append(this.newProductListView.$el);\n        }\n    },\n\n    // @method createProductList Show create new product list modal form\n    createProductList: function() {\n        this.newProductListView = new ProductListCreationView({\n            application: this.application,\n            parentView: this,\n            model: new ProductListModel() // create!\n        });\n\n        this.application.getLayout().showInModal(this.newProductListView);\n    },\n\n    // @method askDeleteList starts the 'delete a list' use case\n    askDeleteList: function(e) {\n        this.deleteConfirmationView = new GlobalViewsConfirmationView({\n            callBackParameters: {\n                target: e.target,\n                context: this\n            },\n            callBack: this.deleteListHandler,\n            title: Utils.translate('Delete list'),\n            autohide: true,\n            body: Utils.translate('Are you sure you want to remove this list?')\n        });\n        this.application.getLayout().showInModal(this.deleteConfirmationView);\n    },\n\n    // @method deleteListHandler called from the sub view when the user confirms he\n    // wants to delete the product list.\n    deleteListHandler: function(options) {\n        const self = options.context;\n        const { target } = options;\n        const list = self.getListFromDom(jQuery(target));\n\n        self.collection.remove(list);\n        list.url = ProductListModel.prototype.url;\n\n        list.destroy().done(function() {\n            self.render();\n            self.showConfirmationMessage(\n                Utils.translate(\n                    'Your <span class=\"product-list-name\">$(0)</span> list was removed',\n                    list.get('name')\n                )\n            );\n            self.deleteConfirmationView.$containerModal\n                .removeClass('fade')\n                .modal('hide')\n                .data('bs.modal', null);\n        });\n    },\n\n    // @method highlightList temporarily highlights a list that has been recently added or edited\n    highlightList: function(internalid) {\n        const $list_dom = jQuery(this.el).find('article[data-product-list-id=' + internalid + ']');\n        if ($list_dom) {\n            $list_dom.addClass('new-list');\n\n            setTimeout(function() {\n                $list_dom.removeClass('new-list');\n            }, 3000);\n        }\n    },\n\n    // @method addListToCartHandler Add list to cart click handler\n    addListToCartHandler: function(e) {\n        const list = this.getCurrentList(e);\n        this.addListToCart(list);\n    },\n\n    // @method Adds an entire list to the cart @param {ProductList.Model} list\n    addListToCart: function(list) {\n        // collect the items data to add to cart\n        const lines_to_add = [];\n        const self = this;\n        let not_purchasable_items_count = 0;\n\n        list.get('items').each(function(pli) {\n            if (pli.get('item').get('_isPurchasable')) {\n                lines_to_add.push(pli);\n            } else {\n                not_purchasable_items_count++;\n            }\n        });\n\n        if (lines_to_add.length === 0) {\n            const errorMessage = Utils.translate(\n                'All items in the list are not available for purchase.'\n            );\n\n            self.showWarningMessage(errorMessage);\n\n            return;\n        }\n\n        // add the items to the cart and when its done show the confirmation view\n        LiveOrderModel.getInstance()\n            .addProducts(lines_to_add)\n            .done(function() {\n                // before showing the confirmation view we need to fetch the items of\n                // the list with all the data.\n                self.application.ProductListModule.Utils.getProductList(\n                    list.get('internalid')\n                ).done(function(model) {\n                    self.addedToCartView = new ProductListAddedToCartView({\n                        application: self.application,\n                        parentView: self,\n                        list: new ProductListModel(model), // pass the model with all the data\n                        not_purchasable_items_count: not_purchasable_items_count\n                    });\n\n                    // also show a confirmation message\n                    let confirmMessage;\n\n                    if (list.get('items').length > 1) {\n                        confirmMessage = Utils.translate(\n                            'Good! $(0) items from your <a class=\"product-list-name\" href=\"/wishlist/$(1)\">$(2)</a> list were successfully added to your cart. You can continue to <a href=\"\">view your cart and checkout</a>',\n                            list.get('items').length,\n                            list.get('internalid'),\n                            list.get('name')\n                        );\n                    } else {\n                        confirmMessage = Utils.translate(\n                            'Good! $(0) item from your <a class=\"product-list-name\" href=\"/wishlist/$(1)\">$(2)</a> list was successfully added to your cart. You can continue to <a href=\"\" data-touchpoint=\"viewcart\">view your cart and checkout</a>',\n                            list.get('items').length,\n                            list.get('internalid'),\n                            list.get('name')\n                        );\n                    }\n\n                    self.showConfirmationMessage(confirmMessage);\n                    self.application.getLayout().showInModal(self.addedToCartView);\n                });\n            });\n    },\n\n    // @method editListHandler Edit list click handler\n    editListHandler: function(e) {\n        const list = this.getListFromDom(jQuery(e.target));\n        this.editList(list);\n    },\n\n    // @method getListFromDom Get the list (collection) from DOM @return {ProductList.Model}\n    getListFromDom: function($target) {\n        const list_id = $target.closest('[data-product-list-id]').data('product-list-id') + '';\n\n        return this.collection.where({ internalid: list_id })[0];\n    },\n\n    // @method editList Edit list click handler (displays edit list modal view)\n    // @param {ProductList.Model} list\n    editList: function(list) {\n        this.newProductListView = new ProductListCreationView({\n            application: this.application,\n            parentView: this,\n            model: list,\n            inModal: true\n        });\n\n        this.application.getLayout().showInModal(this.newProductListView);\n    },\n\n    // @method getSelectedMenu\n    getSelectedMenu: function() {\n        return 'productlist_all';\n    },\n\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return {\n            text: Utils.translate('Wishlist'),\n            href: '/wishlist'\n        };\n    },\n\n    // @method toggleProductListItemHandler\n    toggleProductListItemHandler: function(e) {\n        this.toggleProductListItem(\n            jQuery(e.target)\n                .closest('article')\n                .data('id')\n        );\n    },\n\n    // @method toggleProductListHandler\n    toggleProductListHandler: function(e) {\n        this.toggleProductList(\n            jQuery(e.target)\n                .closest('article')\n                .data('id')\n        );\n    },\n\n    // @method toggleProductList @param {String} pl_internalid\n    toggleProductList: function(pl_internalid) {\n        const pl = this.collection.get(pl_internalid);\n\n        if (pl) {\n            this[pl.get('checked') ? 'unselectProductList' : 'selectProductList'](pl);\n            this.render();\n        }\n    },\n\n    // @method selectProductList @param {ProductList.Model} pl\n    selectProductList: function(pl) {\n        if (pl) {\n            pl.set('checked', true);\n        }\n    },\n\n    // @method unselectProductList @param {ProductList.Model} pl\n    unselectProductList: function(pl) {\n        if (pl) {\n            pl.set('checked', false);\n        }\n    },\n\n    // @method getCurrentList @returns {ProductList.Model}\n    getCurrentList: function(e) {\n        const list_id =\n            jQuery(e.target)\n                .closest('[data-product-list-id]')\n                .data('product-list-id') + '';\n        const list = this.collection.findWhere({\n            internalid: list_id\n        });\n\n        return list;\n    },\n\n    // @method navigateToItems\n    navigateToItems: function(e) {\n        // ignore clicks on anchors and buttons\n        if (Utils.isTargetActionable(e)) {\n            return;\n        }\n\n        const list = this.getCurrentList(e);\n        const internalid = list.get('internalid');\n        const url = '/wishlist/' + (internalid || 'tmpl_' + list.get('templateid'));\n\n        Backbone.history.navigate(url, { trigger: true });\n    },\n\n    childViews: {\n        'ProductList.ListDetails': function() {\n            return new BackboneCollectionView({\n                childView: ProductListListDetailsView,\n                viewsPerRow: 1,\n                collection: this.collection\n            });\n        }\n    },\n\n    // @method getContext @return {ProductList.Lists.View.Context}\n    getContext: function() {\n        // @class ProductList.Lists.View.Context\n        return {\n            // @property {Boolean} hasLists\n            hasLists: this.collection.length,\n            // @property {Boolean} showBackToAccount\n            showBackToAccount: Configuration.get('siteSettings.sitetype') === 'STANDARD',\n            // @property {Boolean} isSingleList\n            isSingleList: this.application.ProductListModule.Utils.isSingleList()\n        };\n    }\n});\n"]}