{"version":3,"sources":["PaymentInstrumentACH.Model.ts"],"names":[],"mappings":"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","file":"PaymentInstrumentACH.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PaymentInstrumentACH.Model\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/GlobalDeclarations.d.ts\" />\n\nimport * as _ from 'underscore';\nimport { Model, ModelEventsDefinition } from '../../../Commons/Core/JavaScript/Model';\nimport { PaymentInstrumentACH } from '../../../ServiceContract/SC/PaymentInstrumentACH/PaymentInstrumentACH';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport {\n    AttributeValidationRules,\n    ValidationUtils\n} from '../../../Commons/Core/JavaScript/Validator';\n\ninterface PaymentInstrumentACHModelEventsDefinition<TModel, TServiceContract>\n    extends ModelEventsDefinition<TModel, TServiceContract> {\n    add: (model: TModel) => void;\n    save: (model: TModel) => void;\n    update: (model: TModel) => void;\n}\n\n// @class PaymentInstrument.ACH.Model\nexport class PaymentInstrumentACHModel extends Model<\n    PaymentInstrumentACH,\n    PaymentInstrumentACH,\n    PaymentInstrumentACHModelEventsDefinition<PaymentInstrumentACH, PaymentInstrumentACH>\n> {\n    protected urlRoot = (): string =>\n        Utils.getAbsoluteUrl('services/PaymentInstrumentACH.Service.ss', false);\n\n    protected getValidationRules(): AttributeValidationRules<PaymentInstrumentACH> {\n        return {\n            account: [val => ValidationUtils.required(val, Utils.translate('Account is required'))],\n            paymentmethod: [val => this.validatePaymentMethod(val)],\n            accounttype: [\n                val => ValidationUtils.required(val, Utils.translate('Account type is required'))\n            ],\n            routingnumber: [val => this.validateRoutingNumber(val)],\n            bankname: [\n                val => ValidationUtils.required(val, Utils.translate('Bank name is required'))\n            ],\n            ownername: [\n                val => ValidationUtils.required(val, Utils.translate('Owner name is required'))\n            ],\n            limit: [val => this.validateLimit(val)]\n        };\n    }\n\n    protected validateRoutingNumber(val): string {\n        return (\n            ValidationUtils.required(val, Utils.translate('Routing number is required')) ||\n            ValidationUtils.number(val, Utils.translate('Routing number must be numeric'))\n        );\n    }\n\n    protected validateLimit(val): string {\n        return (\n            ValidationUtils.required(val, Utils.translate('Limit is required')) ||\n            ValidationUtils.number(val, Utils.translate('Limit must be numeric'))\n        );\n    }\n\n    protected validatePaymentMethod(form): string {\n        if (form && _.isUndefined(form.internalid) && form.paymentmethod === '0') {\n            return Utils.translate('Please Select an ACH Type');\n        }\n        return '';\n    }\n\n    public constructor(\n        attributes: PaymentInstrumentACH = {\n            internalid: null,\n            account: null,\n            ownername: '',\n            accounttype: null,\n            bankname: '',\n            routingnumber: '',\n            limit: null,\n            paymentmethod: null,\n            paymentmethods: null,\n            consent: false\n        },\n        options?: never\n    ) {\n        super(attributes, options);\n\n        if (!this.get('internalid')) {\n            this.set('internalid', this.get('id'));\n        }\n    }\n\n    public getAccountTypes() {\n        return [\n            { key: 'CHECKING', name: 'Checking' },\n            { key: 'SAVING', name: 'Saving' },\n            { key: 'CORPORATE_CHECKING', name: 'Corporate Checking' }\n        ];\n    }\n\n    public getAccountType() {\n        return _.where(this.getAccountTypes(), { key: this.get('accounttype') })[0].name;\n    }\n}\n"]}