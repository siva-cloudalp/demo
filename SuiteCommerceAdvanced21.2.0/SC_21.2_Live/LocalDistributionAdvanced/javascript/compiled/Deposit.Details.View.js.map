{"version":3,"sources":["Deposit.Details.View.ts"],"names":[],"mappings":"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","file":"Deposit.Details.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Deposit.Details.View\"/>\n\nimport * as deposit_details_tpl from 'deposit_details.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { RecordViewsView } from '../../RecordViews/JavaScript/RecordViews.View';\nimport { AjaxRequestsKiller } from '../../../Commons/AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\n\nimport DepositModel = require('./Deposit.Model');\nimport DepositDetailsDepositApplicationLinkView = require('./Deposit.Details.DepositApplication.Link.View');\nimport GlobalViewsFormatPaymentMethodView = require('../../../Commons/GlobalViews/JavaScript/GlobalViews.FormatPaymentMethod.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class Deposit.Details.View @extend Backbone.View\nconst DepositDetailsView: any = BackboneView.extend({\n    template: deposit_details_tpl,\n\n    title: Utils.translate('Deposit Details'),\n\n    page_header: Utils.translate('Deposit Details'),\n\n    attributes: {\n        id: 'DepositDetail',\n        class: 'DepositDetails'\n    },\n\n    initialize: function(options) {\n        const internalid = options.routerArguments[0];\n\n        this.model = new DepositModel({ internalid: internalid });\n        this.model.on('change', this.showContent, this);\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        return this.model.fetch({\n            killerId: AjaxRequestsKiller.getKillerId()\n        });\n    },\n\n    // @method getSelectedMenu\n    getSelectedMenu: function() {\n        return 'transactionhistory';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return [\n            {\n                text: Utils.translate('Transaction History'),\n                href: '/transactionhistory'\n            },\n            {\n                text: Utils.translate('Deposit #$(0)', this.model.get('tranid')),\n                path: `transactionhistory/customerdeposit/${this.model.get('internalid')}`\n            }\n        ];\n    },\n\n    render: function() {\n        this.payment_method =\n            this.model.get('paymentmethods') &&\n            this.model.get('paymentmethods').findWhere({ primary: true });\n\n        BackboneView.prototype.render.apply(this, arguments);\n    },\n\n    childViews: {\n        'Invoices.Collection': function() {\n            const records_collection = new Backbone.Collection(\n                this.model.get('invoices').map(function(invoice) {\n                    const model = new Backbone.Model({\n                        touchpoint: 'customercenter',\n\n                        title: Utils.translate('Invoice #$(0)', invoice.get('refnum')),\n                        detailsURL: `/invoices/${invoice.get('invoice_id')}`,\n\n                        id: `${invoice.get('invoice_id')}_${invoice.get('line')}`,\n                        internalid: `${invoice.get('invoice_id')}_${invoice.get('line')}`,\n\n                        columns: [\n                            {\n                                label: Utils.translate('Invoice Date'),\n                                type: 'date',\n                                name: 'invoice-date',\n                                value: invoice.get('invoicedate')\n                            },\n                            {\n                                label: Utils.translate('Date Applied'),\n                                type: 'date',\n                                name: 'applied-date',\n                                compositeKey: 'DepositDetailsDepositApplicationLinkView',\n                                composite: new DepositDetailsDepositApplicationLinkView({\n                                    model: new Backbone.Model({\n                                        depositId: invoice.get('deposit_id'),\n                                        depositDate: invoice.get('depositdate')\n                                    })\n                                })\n                            },\n                            {\n                                label: Utils.translate('Amount:'),\n                                type: 'currency',\n                                name: 'amount',\n                                value: invoice.get('amount_formatted')\n                            }\n                        ]\n                    });\n\n                    return model;\n                })\n            );\n\n            return new BackboneCollectionView({\n                childView: RecordViewsView,\n                collection: records_collection,\n                viewsPerRow: 1\n            });\n        },\n        PaymentMethod: function() {\n            return new GlobalViewsFormatPaymentMethodView({ model: this.payment_method });\n        }\n    },\n\n    // @method getContext @return Deposit.Details.View.Context\n    getContext: function() {\n        // @class Deposit.Details.View.Context\n        return {\n            // @property {String} tranId\n            tranId: this.model.get('tranid'),\n            // @property {String} paymentFormatted\n            paymentFormatted: this.model.get('payment_formatted'),\n            // @property {String} paidFormatted\n            paidFormatted: this.model.get('paid_formatted'),\n            // @property {String} remainingFormatted\n            remainingFormatted: this.model.get('remaining_formatted'),\n            // @property {String} tranDate\n            tranDate: this.model.get('trandate'),\n            // @property {String} status\n            status: this.model.get('status').internalid,\n            // @property {Boolean} areElementsCollapsed\n            areElementsCollapsed: Configuration.get('collapse_elements'),\n            // @property {String} downloadPDFURL\n            downloadPDFURL: Utils.getDownloadPdfUrl({\n                asset: 'deposit-details',\n                id: this.model.get('internalid')\n            }),\n            // @property {Boolean} showInvoices\n            showInvoices: !!(this.model.get('invoices') && this.model.get('invoices').length),\n            // @property {Boolean} showPaymentMethod\n            showPaymentMethod: !!(this.payment_method && this.payment_method.get('type')),\n            // @property {Boolean} showMemo\n            showMemo: !!this.model.get('memo'),\n            // @property {String} memo\n            memo: this.model.get('memo'),\n            // @property {Boolean} showOpenedAccordion\n            showOpenedAccordion: Utils.isTabletDevice() || Utils.isDesktopDevice()\n        };\n    }\n});\n\nexport = DepositDetailsView;\n"]}