{"version":3,"sources":["TransactionHistory.List.View.ts"],"names":[],"mappings":"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","file":"TransactionHistory.List.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"TransactionHistory.List.View\"/>\n// @module TransactionHistory\n\nimport * as _ from 'underscore';\nimport * as transaction_history_list_tpl from 'transaction_history_list.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { ListHeaderView } from '../../../Commons/ListHeader/JavaScript/ListHeader.View';\nimport { RecordViewsView } from '../../RecordViews/JavaScript/RecordViews.View';\nimport { GlobalViewsPaginationView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.Pagination.View';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\n\nimport TransactionHistoryCollection = require('./TransactionHistory.Collection');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport Handlebars = require('../../../Commons/Utilities/JavaScript/Handlebars');\n\nconst TransactionHistoryListView: any = BackboneView.extend({\n    template: transaction_history_list_tpl,\n\n    title: Utils.translate('Transaction History'),\n\n    page_header: Utils.translate('Transaction History'),\n\n    attributes: {\n        id: 'TransactionHistory',\n        class: 'TransactionHistory'\n    },\n\n    initialize: function(options) {\n        let page = '1';\n\n        if (options.routerArguments && options.routerArguments[0]) {\n            const params = Utils.parseUrlOptions(options.routerArgument);\n\n            if (params.page) {\n                page = params.page.toString();\n            }\n        }\n\n        this.options.page = page;\n\n        this.application = options.application;\n        this.collection = new TransactionHistoryCollection();\n        this.profileModel = ProfileModel.getInstance();\n\n        this.listenCollection();\n\n        this.collection.on('reset', this.showContent, this);\n\n        const today = new Date();\n        const isoDate = `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;\n\n        this.rangeFilterOptions = {\n            fromMin: '1800-01-02',\n            fromMax: isoDate,\n            toMin: '1800-01-02',\n            toMax: isoDate\n        };\n\n        this.listHeader = new ListHeaderView({\n            view: this,\n            application: this.application,\n            collection: this.collection,\n            filters: this.filterOptions,\n            sorts: this.sortOptions,\n            rangeFilter: 'date',\n            rangeFilterLabel: Utils.translate('From'),\n            hidePagination: true,\n            allowEmptyBoundaries: true\n        });\n    },\n\n    // @method listenCollection\n    listenCollection: function() {\n        this.setLoading(true);\n\n        this.collection.on({\n            request: jQuery.proxy(this, 'setLoading', true),\n            reset: jQuery.proxy(this, 'setLoading', false)\n        });\n    },\n\n    // @method setLoading @param {Boolean} bool\n    setLoading: function(bool) {\n        this.isLoading = bool;\n    },\n\n    // @method getSelectedMenu @return {String}\n    getSelectedMenu: function() {\n        return 'transactionhistory';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return {\n            text: this.title,\n            href: '/transactionhistory'\n        };\n    },\n\n    // @property {Array} filterOptions Array of default filter options filters always apply on the original collection\n    filterOptions: [\n        {\n            value: 'CustCred,CustPymt,CustDep,DepAppl,CustInvc,CashSale',\n            name: Utils.translate('Show all record types'),\n            selected: true\n        },\n        {\n            value: 'CustCred',\n            name: Utils.translate('Show Credit Memo'),\n            permission: 'transactions.tranCustCred.1'\n        },\n        {\n            value: 'CustPymt',\n            name: Utils.translate('Show Payment'),\n            permission: 'transactions.tranCustPymt.1'\n        },\n        {\n            value: 'CustDep',\n            name: Utils.translate('Show Deposit'),\n            permission: 'transactions.tranCustDep.1'\n        },\n        {\n            value: 'DepAppl',\n            name: Utils.translate('Show Deposit Application'),\n            permission: 'transactions.tranDepAppl.1'\n        },\n        {\n            value: 'CustInvc',\n            name: Utils.translate('Show Invoices'),\n            permission: 'transactions.tranCustInvc.1'\n        },\n        {\n            value: 'CashSale',\n            name: Utils.translate('Show Cash Receipts'),\n            permission: 'transactions.tranCashSale.1'\n        }\n    ],\n\n    // @property {Array} sortOptions Array of default sort options sorts only apply on the current collection\n    // which might be a filtered version of the original\n    sortOptions: [\n        {\n            value: 'trandate,internalid',\n            name: Utils.translate('by Date'),\n            selected: true\n        },\n        {\n            value: 'tranid',\n            name: Utils.translate('by Number')\n        },\n        {\n            value: 'amount',\n            name: Utils.translate('by Amount')\n        }\n    ],\n\n    childViews: {\n        'ListHeader.View': function() {\n            return this.listHeader;\n        },\n        'Records.Collection': function() {\n            const records_collection = new Backbone.Collection(\n                this.collection.map(function(transaction_history) {\n                    const model = new Backbone.Model({\n                        touchpoint: 'customercenter',\n                        title: new Handlebars.SafeString(\n                            Utils.translate(\n                                `${transaction_history.getTypeLabel()} #<span class=\"tranid\">$(0)</span>`,\n                                transaction_history.get('tranid')\n                            )\n                        ),\n                        detailsURL: transaction_history.getTypeUrl(),\n\n                        id: transaction_history.id,\n                        internalid: transaction_history.id,\n\n                        columns: [\n                            {\n                                label: Utils.translate('Date:'),\n                                type: 'date',\n                                name: 'date',\n                                value: transaction_history.get('trandate')\n                            },\n                            {\n                                label: Utils.translate('Amount:'),\n                                type: 'currency',\n                                name: 'amount',\n                                value: transaction_history.get('amount_formatted')\n                            },\n                            {\n                                label: Utils.translate('Status:'),\n                                type: 'status',\n                                name: 'status',\n                                value: transaction_history.get('status').name\n                            }\n                        ]\n                    });\n\n                    return model;\n                })\n            );\n\n            return new BackboneCollectionView({\n                childView: RecordViewsView,\n                collection: records_collection,\n                viewsPerRow: 1\n            });\n        },\n        'GlobalViews.Pagination': function() {\n            return new GlobalViewsPaginationView(\n                _.extend(\n                    {\n                        totalPages: Math.ceil(\n                            this.collection.totalRecordsFound / this.collection.recordsPerPage\n                        )\n                    },\n                    Configuration.defaultPaginationSettings\n                )\n            );\n        }\n    },\n\n    // @method getContext @return {TransactionHistory.List.View.Context}\n    getContext: function() {\n        // @class TransactionHistory.List.View.Context\n        return {\n            // @property {String} pageHeader\n            pageHeader: this.page_header,\n            // @property {Boolean} showNoTermMessage\n            hasTerms: !!this.profileModel.get('paymentterms'),\n            // @property {Boolean} isThereAnyResult\n            isThereAnyResult: !!this.collection.length,\n            // @property {Boolean} isLoading\n            isLoading: this.isLoading,\n            // @property {Boolean} showPagination\n            showPagination: !!(this.collection.totalRecordsFound && this.collection.recordsPerPage),\n            // @property {Boolean} showCurrentPage\n            showCurrentPage: this.options.showCurrentPage,\n            // @property {Boolean} showBackToAccount\n            showBackToAccount: Configuration.get('siteSettings.sitetype') === 'STANDARD'\n        };\n    }\n});\n\nexport = TransactionHistoryListView;\n"]}