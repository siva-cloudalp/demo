{"version":3,"sources":["PageTypeFormView.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;;;;;;;;;;;;;;IAUF,SAAS,WAAW,CAAC,WAAgB,EAAE,SAAgB;QACnD,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ;YACtB,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI;gBACvD,MAAM,CAAC,cAAc,CACjB,WAAW,CAAC,SAAS,EACrB,IAAI,EACJ,MAAM,CAAC,wBAAwB,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAC5D,CAAC;YACN,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;QAII;IACJ;QAIU,oCAA+B;QAErC,0BAAsB,OAA4B,EAAE,SAAiB;YAArE,YACI,kBAAM,OAAO,CAAC,SAEjB;YADG,mBAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,EAAE,SAAS,CAAC,CAAC;;QACzD,CAAC;QACL,uBAAC;IAAD,CAVA,AAUC,CANS,2BAAY,GAMrB;IAVqB,4CAAgB;IAmBtC,WAAW,CAAC,gBAAgB,EAAE,CAAC,mBAAQ,CAAC,CAAC,CAAC","file":"PageTypeFormView.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PageTypeFormView\"/>\n// @Typescript-partial\n\nimport { PageTypeView, PageTypeViewOptions } from './PageTypeView';\nimport { FormView } from './FormView';\nimport { InferModelEntity, InferModelServiceContract } from './backbone/backbone';\nimport { Model } from './Model';\n\nfunction applyMixins(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            Object.defineProperty(\n                derivedCtor.prototype,\n                name,\n                Object.getOwnPropertyDescriptor(baseCtor.prototype, name)\n            );\n        });\n    });\n}\n\n/** @deprecated\n * This is deprecated because for new solutions\n * you should have View that extends from PageTypeView\n * and on it a child view that extend from FormView\n **/\nexport abstract class PageTypeFormView<\n    TModel extends Model<InferModelEntity<TModel>, InferModelServiceContract<TModel>, {}>,\n    TContext extends object,\n    TEvents extends object = {}\n> extends PageTypeView<TContext, TEvents> implements FormView<TModel, TContext, TEvents> {\n    protected formView: PageTypeFormView<TModel, TContext, TEvents>;\n    protected constructor(options: PageTypeViewOptions, formModel: TModel) {\n        super(options);\n        FormView.prototype.constructor.call(this, formModel);\n    }\n}\n\n// @deprecated\nexport interface PageTypeFormView<\n    TModel extends Model<InferModelEntity<TModel>, InferModelServiceContract<TModel>, {}>,\n    TContext extends object,\n    TEvents extends object = {}\n> extends FormView<TModel, TContext, TEvents>, PageTypeView<TContext, TEvents> {}\n\napplyMixins(PageTypeFormView, [FormView]);\n"]}