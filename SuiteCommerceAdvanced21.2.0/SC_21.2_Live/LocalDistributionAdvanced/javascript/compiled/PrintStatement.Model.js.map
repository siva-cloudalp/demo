{"version":3,"sources":["PrintStatement.Model.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAUF,SAAS,SAAS,CAAC,KAAK;QACpB,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE;YACxB,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;SACvD;QACD,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;IACrC,CAAC;IAED,SAAS,qBAAqB,CAAC,KAAK;QAChC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;YACnC,OAAO,KAAK,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;SACpD;IACL,CAAC;IAED,SAAS,iBAAiB,CAAC,KAAK;QAC5B,IAAI,KAAK,EAAE;YACP,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;gBACzB,OAAO,KAAK,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;aAChD;SACJ;IACL,CAAC;IAED,sDAAsD;IACtD,IAAM,mBAAmB,GAAQ,aAAa,CAAC,MAAM,CAAC;QAClD,UAAU,EAAE;YACR,aAAa,EAAE,EAAE,EAAE,EAAE,qBAAqB,EAAE;YAE5C,SAAS,EAAE,EAAE,EAAE,EAAE,iBAAiB,EAAE;SACvC;QAED,6BAA6B;QAC7B,OAAO,EAAE,oCAAoC;QAE7C,gBAAgB;QAChB,KAAK,EAAE,UAAS,MAAM;YAClB,OAAO,MAAM,CAAC;QAClB,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,mBAAmB,CAAC","file":"PrintStatement.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PrintStatement.Model\"/>\n\nimport * as _ from 'underscore';\nimport '../../../Commons/BackboneExtras/JavaScript/Backbone.Sync';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport BackboneModel = require('../../../Commons/BackboneExtras/JavaScript/Backbone.Model');\n\nfunction parseDate(value) {\n    if (value && value.replace) {\n        return new Date(value.replace(/-/g, '/')).getTime();\n    }\n    return new Date(value).getTime();\n}\n\nfunction validateStatementDate(value) {\n    if (!value || isNaN(parseDate(value))) {\n        return Utils.translate('Invalid Statement date');\n    }\n}\n\nfunction validateStartDate(value) {\n    if (value) {\n        if (isNaN(parseDate(value))) {\n            return Utils.translate('Invalid Start date');\n        }\n    }\n}\n\n// @class PrintStatement.Model @extends Backbone.Model\nconst PrintStatementModel: any = BackboneModel.extend({\n    validation: {\n        statementDate: { fn: validateStatementDate },\n\n        startDate: { fn: validateStartDate }\n    },\n\n    // @property {String} urlRoot\n    urlRoot: 'services/PrintStatement.Service.ss',\n\n    // @method parse\n    parse: function(result) {\n        return result;\n    }\n});\n\nexport = PrintStatementModel;\n"]}