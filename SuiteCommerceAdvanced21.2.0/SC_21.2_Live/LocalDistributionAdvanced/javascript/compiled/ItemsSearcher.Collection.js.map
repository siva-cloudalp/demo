{"version":3,"sources":["ItemsSearcher.Collection.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAeF,OAAS,cAAc,CAAC,MAAM,CAAC;QAC3B,sDAAsD;QACtD,cAAc,EAAE;YACZ,8CAA8C;YAC9C,wBAAwB,EAAE,kCAAkC;SAC/D;QACD,kCAAkC;QAElC,qBAAqB;QACrB,yCAAyC;QACzC,iEAAiE;QACjE,iBAAiB;QACjB,UAAU,EAAE,UAAS,UAAU,EAAE,OAAO;YACpC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAC9D,IAAI,CAAC,sBAAsB,GAAG,yCAAmB,CAAC,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;YAElH,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAC/D,CAAC;QAED,kFAAkF;QAClF,0BAA0B;QAC1B,yBAAyB;QACzB,KAAK,EAAE,UAAS,OAAO;YACnB,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;YACxB,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;YAErB,OAAO,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACjE,CAAC;KACJ,CAAC,CAAC","file":"ItemsSearcher.Collection.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ItemsSearcher.Collection\"/>\n\nimport * as _ from 'underscore';\nimport '../../../Commons/Utilities/JavaScript/Utils';\nimport '../../../Commons/Utilities/JavaScript/typeahead';\nimport { MasterOptionsHelper } from '../../../Commons/SC/JavaScript/MasterOptionsHelper';\n\nimport ItemCollection = require('../../../Commons/Item/JavaScript/Item.Collection');\n\n// @class ItemsSearcher.Collection Connects to the search api to get\n// the minimal information of the items to show on the typeahead of the search\n// A Model Contains a Collection of items and the list of facet groups with its values\n// @extends Item.Collection\nexport = ItemCollection.extend({\n    // @class ItemsSearcher.View.Options.Collection.Option\n    defaultOptions: {\n        // @property {String} searcherAPIConfiguration\n        searcherAPIConfiguration: 'searchApiMasterOptions.typeAhead'\n    },\n    // @class ItemsSearcher.Collection\n\n    // @method initialize\n    // @param {Array<Item.Model>?} collection\n    // @param {ItemsSearcher.View.Options.Collection.Option?} options\n    // @return {Void}\n    initialize: function(collection, options) {\n        this.options = _.defaults(options || {}, this.defaultOptions);\n        this.searchApiMasterOptions = MasterOptionsHelper.getSearchAPIMasterOption(this.options.searcherAPIConfiguration);\n\n        ItemCollection.prototype.initialize.apply(this, arguments);\n    },\n\n    // @method fetch We need to make sure that the cache is set to true, so we wrap it\n    // @param {Object} options\n    // @return {jQuery.Proxy}\n    fetch: function(options) {\n        options = options || {};\n        options.cache = true;\n\n        return ItemCollection.prototype.fetch.apply(this, arguments);\n    }\n});\n"]}