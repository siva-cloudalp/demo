{"version":3,"sources":["CreditCard.Edit.Form.View.ts"],"names":[],"mappings":"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","file":"CreditCard.Edit.Form.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CreditCard.Edit.Form.View\"/>\n// @module CreditCard\nimport * as _ from 'underscore';\nimport * as creditcard_edit_form_tpl from 'creditcard_edit_form.tpl';\nimport { Loggers } from '../../Loggers/JavaScript/Loggers';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nimport CreditCardEditFormSecurityCodeView = require('./CreditCard.Edit.Form.SecurityCode.View');\nimport BackboneFormView = require('../../Backbone.FormView/JavaScript/Backbone.FormView');\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\nconst CreditCardEditFormView: any = BackboneView.extend({\n    template: creditcard_edit_form_tpl,\n\n    bindings: {\n        '[name=\"ccnumber\"]': 'ccnumber',\n        '[name=\"ccname\"]': 'ccname',\n        '[name=\"ccsecuritycode\"]': 'ccsecuritycode',\n        '[name=\"expmonth\"]': 'expmonth',\n        '[name=\"expyear\"]': 'expyear'\n    },\n\n    initialize: function() {\n        if (!this.model.isNew()) {\n            delete this.bindings['[name=\"ccnumber\"]'];\n        }\n\n        if (this.options.showSecurityCodeForm) {\n            this.model.set({ hasSecurityCode: true });\n        } else {\n            this.model.unset('hasSecurityCode', { silent: true });\n        }\n\n        if (!this.model.get('expmonth')) {\n            this.model.set({ expmonth: this.options.currentMonth + '' }, { silent: true });\n        }\n\n        if (!this.model.get('expyear')) {\n            this.model.set({ expyear: this.options.years[0] + '' }, { silent: true });\n        }\n        BackboneFormView.add(this);\n\n        this.saveForm = function saveForm() {\n            const loggers = Loggers.getLogger();\n            const actionId = loggers.start('Save Credit Card');\n\n            const promise = BackboneFormView.saveForm.apply(this, arguments);\n\n            if (promise) {\n                promise.done(() => {\n                    loggers.end(actionId, {\n                        operationIds: this.model.getOperationIds(),\n                        status: 'success'\n                    });\n                });\n            }\n\n            return promise;\n        };\n    },\n\n    childViews: {\n        'CreditCard.Edit.Form.SecurityCode': function() {\n            return new CreditCardEditFormSecurityCodeView({\n                showCreditCardHelp: this.options.showCreditCardHelp,\n                creditCardHelpTitle: this.options.creditCardHelpTitle\n            });\n        }\n    },\n    // @method getContext @return CreditCard.Edit.Form.View.Context\n    getContext: function() {\n        const selected_payment_method = this.model.get('paymentmethod');\n        const self = this;\n        const paymentMethods = _.map(\n            _.where(Configuration.get('siteSettings.paymentmethods', []), { creditcard: 'T' }),\n            function(paymentmethod: any) {\n                // @class CreditCard.PaymentMetod\n                return {\n                    // @property\n                    hidden: !(\n                        self.model.isNew() ||\n                        (selected_payment_method &&\n                            paymentmethod.key === selected_payment_method.key)\n                    ),\n                    icon: paymentmethod.imagesrc,\n                    internalid: paymentmethod.internalid,\n                    key: paymentmethod.key,\n                    name: paymentmethod.name,\n                    selected:\n                        selected_payment_method && paymentmethod.key === selected_payment_method.key\n                };\n            }\n        );\n        const months = _.map(this.options.months, function(month) {\n            return {\n                month: month\n            };\n        });\n        const years = _.map(this.options.years, function(year) {\n            return {\n                year: year,\n                disabled: year === self.options.expyear\n            };\n        });\n        let ccnumber = this.model.get('ccnumber');\n\n        // temporal credit card.\n        if (ccnumber && !~ccnumber.indexOf('*')) {\n            ccnumber = '************' + ccnumber.substring(ccnumber.length - 4);\n        }\n\n        // @class CreditCard.Form.View.Context\n        return {\n            // @property {Array<CreditCard.PaymentMetod>} paymentMethods\n            paymentMethods: paymentMethods,\n            // @property {String} paymentMethodValue\n            paymentMethodValue: selected_payment_method ? selected_payment_method.key : '',\n            // @property {String} ccnumber\n            ccnumber: ccnumber,\n            // @property {boolean} showPaymentSelector\n            showPaymentSelector: this.model.isNew(),\n            // @property {Boolean} isNew\n            isNew: this.model.isNew(),\n            // @property {Array<Object>?} months\n            months: months,\n            // @property {Array<Object>?} years\n            years: years,\n            // @property {Boolean} showDefaults\n            showDefaults: !!this.options.showDefaults,\n            // @property {String} ccname\n            ccname: this.model.get('ccname'),\n            // @property {Boolean} ccdefault\n            ccdefault: this.model.get('ccdefault') === 'T',\n            // @property {Boolean} showSecurityCode\n            showSecurityCodeForm: !!this.options.showSecurityCodeForm,\n            // @property {Boolean} showSaveCreditCardCheckbox\n            showSaveCreditCardCheckbox:\n                !!this.options.showSaveCreditCardCheckbox &&\n                (this.model.isNew() || this.model.get('internalid') === '-temporal-'),\n            // @property {Boolean} saveCreditCardByDefault\n            saveCreditCardByDefault:\n                this.model.get('internalid') === '-temporal-'\n                    ? false\n                    : !!this.options.saveCreditCardByDefault\n        };\n    }\n});\n\nexport = CreditCardEditFormView;\n"]}