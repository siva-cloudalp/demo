{"version":3,"sources":["Tracker.ExtensibilityHelper.ts"],"names":[],"mappings":"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","file":"Tracker.ExtensibilityHelper.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Tracker.ExtensibilityHelper\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\n\nimport ICartComponent = require('../../Cart/JavaScript/ICart.Component');\n\ninterface Product {\n    sku: string;\n    name: string;\n    price: number;\n}\n\ninterface ProductViewInfo extends Product {\n    internalId: string;\n    isInStock: boolean;\n    isBackorderable: boolean;\n    quantityAvailable: number;\n    thumbnail: string;\n    urlComponent: string;\n}\n\ninterface PageViewInfo {\n    url: string;\n}\n\ninterface TransactionInfo {\n    confirmationNumber: string;\n    subTotal: number;\n    taxTotal: number;\n    shippingCost: number;\n    handlingCost: number;\n    products: TransactionProductInfo[];\n    total: number;\n    promoCodes: string[];\n}\n\ninterface TransactionProductInfo extends Product {\n    quantity: number;\n    options: string;\n}\n\nfunction normalizePageView(url: string): PageViewInfo {\n    return { url };\n}\n\nfunction normalizeCartLine(line) {\n    // eslint-disable-next-line no-underscore-dangle\n    return ICartComponent._normalizeLine(line);\n}\n\nfunction normalizeCartLines(lines) {\n    // eslint-disable-next-line no-underscore-dangle\n    return ICartComponent._normalizeLines(lines);\n}\n\nfunction normalizeTransaction(transactionModel): TransactionInfo {\n    const normalizedTransaction: TransactionInfo = {\n        handlingCost: transactionModel.get('handlingCost'),\n        shippingCost: transactionModel.get('shippingCost'),\n        subTotal: transactionModel.get('subTotal'),\n        taxTotal: transactionModel.get('taxTotal'),\n        total: transactionModel.get('total'),\n        confirmationNumber: transactionModel.get('confirmationNumber'),\n        promoCodes: _.pluck(transactionModel.get('promocodes'), 'code'),\n        products: transactionModel.get('products').map(product => {\n            return {\n                sku: product.get('id'),\n                name: product.get('name'),\n                price: product.get('rate'),\n                quantity: product.get('quantity'),\n                options: product.get('options')\n            };\n        })\n    };\n    return Utils.deepCopy(normalizedTransaction);\n}\n\nfunction normalizeItem(productModel): ProductViewInfo {\n    const item = productModel.get('item');\n    const itemThumbnail = item.get('_thumbnail');\n    const normalizedItem: ProductViewInfo = {\n        internalId: item.get('internalid'),\n        isBackorderable: item.get('isbackorderable'),\n        isInStock: item.get('isinstock'),\n        name: item.get('_name'),\n        price: item.get('_price'),\n        quantityAvailable: item.get('quantityavailable'),\n        sku: item.get('_sku'),\n        thumbnail: itemThumbnail && itemThumbnail.url ? itemThumbnail.url : '',\n        urlComponent: item.get('_url')\n    };\n    return Utils.deepCopy(normalizedItem);\n}\n\nconst EVENT_DATA_NORMALIZER_MAP = {\n    trackPageview: normalizePageView,\n    trackAddToCart: normalizeCartLine,\n    trackCartUpdate: normalizeCartLines,\n    trackTransaction: normalizeTransaction,\n    trackProductView: normalizeItem\n};\n\nexport function getNormalizer(event: string): Function {\n    return EVENT_DATA_NORMALIZER_MAP[event];\n}\n"]}