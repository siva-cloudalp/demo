{"version":3,"sources":["OrderWizard.Module.MultiShipTo.Package.List.ts"],"names":[],"mappings":"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","file":"OrderWizard.Module.MultiShipTo.Package.List.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"OrderWizard.Module.MultiShipTo.Package.List\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/UnderscoreExtended.d.ts\" />\n\nimport * as _ from 'underscore';\nimport * as order_wizard_msr_package_list_tpl from 'order_wizard_msr_package_list.tpl';\nimport * as order_wizard_msr_package_details_cell_tpl from 'order_wizard_msr_package_details_cell.tpl';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { WizardStepModule } from '../../Wizard/JavaScript/Wizard.StepModule';\n\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport OrderWizardModuleMultiShipToPackageDetails = require('./OrderWizard.Module.MultiShipTo.Package.Details');\nimport TransactionLineCollection = require('../../../Commons/Transaction/JavaScript/Transaction.Line.Collection');\nimport TransactionShipmethodCollection = require('../../../Commons/Transaction/JavaScript/Transaction.Shipmethod.Collection');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\n// @class OrderWizard.Module.MultiShipTo.Packages @extend Wizard.Module\nexport = WizardStepModule.extend({\n    template: order_wizard_msr_package_list_tpl,\n\n    events: {\n        'click [data-action=\"remove-item\"]': 'removeItemHandle',\n        'click [data-action=\"items-expander\"]': 'expandCollapsePackage'\n    },\n\n    initialize: function() {\n        WizardStepModule.prototype.initialize.apply(this, arguments);\n        const self = this;\n        this.wizard.model.on('multishipto-address-applied', function() {\n            self.render();\n        });\n        this.wizard.model.on('ismultishiptoUpdated', _.bind(this.render, this));\n        this.expanded_packages = [];\n    },\n\n    isActive: function() {\n        return (\n            this.wizard.model.get('ismultishipto') && this.wizard.model.shippingAddressIsRequired()\n        );\n    },\n\n    // Return the array of line set with the same address id\n    getLinesForAddressId: function(address_id) {\n        return this.wizard.model.get('lines').groupBy(function(line) {\n            return line.get('shipaddress');\n        })[address_id];\n    },\n\n    // Conserve the state (expanded/collapsed) of each package when re-rendering\n    expandCollapsePackage: function(e) {\n        const package_id = jQuery(e.target)\n            .closest('[data-address-id]')\n            .data('address-id');\n        const package_index = _.indexOf(this.expanded_packages, package_id);\n        !~package_index\n            ? this.expanded_packages.push(package_id)\n            : this.expanded_packages.splice(package_index, 1);\n    },\n\n    // Handle the remove click event, and delegate the real logic to the father view\n    removeItemHandle: function(e) {\n        this.clearGeneralMessages();\n        const $selected_button = jQuery(e.target);\n        const selected_item_id = $selected_button.data('item-id');\n\n        this.removeItem(selected_item_id);\n    },\n\n    // Mange the action of removing an item from a package, which means unset the shipaddress property of the item\n    removeItem: function(item_id) {\n        const self = this;\n        const { model } = this.wizard;\n        const selected_item = model.get('lines').get(item_id);\n        const package_address_id = selected_item.get('shipaddress');\n\n        selected_item.unset('shipaddress');\n\n        model.save().then(function() {\n            if (!self.getLinesForAddressId(package_address_id)) {\n                self.wizard.options.profile\n                    .get('addresses')\n                    .get(package_address_id)\n                    .set('check', false);\n                self.expanded_packages.splice(\n                    _.indexOf(self.expanded_packages, +package_address_id),\n                    1\n                );\n                self.showGeneralMessage(Utils.translate('Shipment has no more items'), false);\n            }\n            self.render();\n            model.trigger('multishipto-line-updated');\n        });\n    },\n\n    childViews: {\n        'Packages.Collection': function() {\n            return new BackboneCollectionView({\n                collection: this.getPackages(),\n                childView: OrderWizardModuleMultiShipToPackageDetails,\n                cellTemplate: order_wizard_msr_package_details_cell_tpl,\n                viewsPerRow: 1,\n                childViewOptions: {\n                    application: this.wizard.application,\n                    wizard: this.wizard\n                }\n            });\n        }\n    },\n\n    // @method getPackages Returns the lists of packages (items grouped by address) created\n    // @return {Backbone.Collection<MultiShipTo.Package>}\n    getPackages: function() {\n        const result = [];\n        let package_item;\n        let package_address;\n        const self = this;\n        const items_with_address = _.filter(this.wizard.model.getShippableLines(), function(\n            line: any\n        ) {\n            return !!line.get('shipaddress');\n        });\n        const items_per_address = _.groupBy(items_with_address, function(line) {\n            return line.get('shipaddress');\n        });\n        const addresses = this.wizard.options.profile.get('addresses');\n        const shipping_methods = this.wizard.model.get('multishipmethods');\n\n        _.each(_.keys(items_per_address), function(address_id) {\n            package_address = addresses.get(address_id);\n\n            // @class MultiShipTo.Package @extend Backbone.Model\n            package_item = new Backbone.Model({\n                // @property {Transaction.Line.Collection} lines\n                lines: new TransactionLineCollection(items_per_address[address_id]),\n                // @property {Address.Model} address\n                address: package_address,\n                // @property {OrderShipmethod.Collection} shippingMethods\n                shippingMethods: new TransactionShipmethodCollection(shipping_methods[address_id]),\n                // @property {String} packageTitle\n                packageTitle:\n                    package_address.get('fullname') + ' - ' + package_address.get('addr1'),\n                // @property {Boolean} isPackageExpanded\n                isPackageExpanded: _(self.expanded_packages).indexOf(+address_id) >= 0\n            });\n\n            result.push(package_item);\n        });\n        return result;\n    },\n    render: function() {\n        this._render();\n    }\n});\n"]}