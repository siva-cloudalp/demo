{"version":3,"sources":["ReturnAuthorization.Form.Item.Actions.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAWF,0EAA0E;IAC1E,IAAM,sCAAsC,GAAQ,YAAY,CAAC,MAAM,CAAC;QACpE,QAAQ,EAAE,0CAA0C;QAEpD,UAAU,EAAE;YACR,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,6BAAa,CAAC,GAAG,CAAC,6BAA6B,EAAE,EAAE,CAAC,EAAE,UAC1E,MAAW;gBAEX,OAAO,MAAM,CAAC,KAAK,CAAC;YACxB,CAAC,CAAC,CAAC;QACP,CAAC;QAED,gFAAgF;QAChF,UAAU,EAAE;YACR,IAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEtD,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAS,MAAW;gBACpD,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,EAAE,KAAK,cAAc,CAAC,EAAE,CAAC;YACxD,CAAC,CAAC,CAAC;YACH,4DAA4D;YAC5D,OAAO;gBACH,yBAAyB;gBACzB,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,mCAAmC;gBACnC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC;gBACvC,kCAAkC;gBAClC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM;gBAClC,4CAA4C;gBAC5C,qBAAqB,EAAE,CAAC,CAAC,cAAc,CAAC,OAAO;gBAC/C,oEAAoE;gBACpE,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,gCAAgC;gBAChC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC;gBACxC,oDAAoD;gBACpD,6BAA6B,EAAE,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,CAAC;aACpE,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,sCAAsC,CAAC","file":"ReturnAuthorization.Form.Item.Actions.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ReturnAuthorization.Form.Item.Actions.View\"/>\n// @module ReturnAuthorization.Form.Item.Actions.View\n\nimport * as _ from 'underscore';\nimport * as return_authorization_form_item_actions_tpl from 'return_authorization_form_item_actions.tpl';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class ReturnAuthorization.Form.Item.Actions.View @extend Backbone.View\nconst ReturnAuthorizationFormItemActionsView: any = BackboneView.extend({\n    template: return_authorization_form_item_actions_tpl,\n\n    initialize: function() {\n        this.reasons = _.sortBy(Configuration.get('returnAuthorization.reasons', []), function(\n            reason: any\n        ) {\n            return reason.order;\n        });\n    },\n\n    // @method getContext @return ReturnAuthorization.Form.Item.Actions.View.Context\n    getContext: function() {\n        const current_reason = this.model.get('reason') || {};\n\n        this.reasons = _.each(this.reasons, function(reason: any) {\n            reason.isSelected = reason.id === current_reason.id;\n        });\n        // @class ReturnAuthorization.Form.Item.Actions.View.Context\n        return {\n            // @property {Model} line\n            line: this.model,\n            // @property {Boolean} isLineActive\n            isLineActive: this.model.get('checked'),\n            // @property {Boolean} showReasons\n            showReasons: !!this.reasons.length,\n            // @property {Boolean} isOtherReasonSelected\n            isOtherReasonSelected: !!current_reason.isOther,\n            // @property {Array<{isSelected:Boolean,reasonText:String}>} reasons\n            reasons: this.reasons,\n            // @property {String} textReason\n            textReason: this.model.get('textReason'),\n            // @property {Boolean} activeLinesLengthGreaterThan1\n            activeLinesLengthGreaterThan1: this.options.activeLinesLength > 1\n        };\n    }\n});\n\nexport = ReturnAuthorizationFormItemActionsView;\n"]}