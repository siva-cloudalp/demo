{"version":3,"sources":["RequestQuoteWizard.Module.Comments.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAUF,OAAS,oCAAgB,CAAC,MAAM,CAAC;QAC7B,gCAAgC;QAChC,QAAQ,EAAE,uCAAuC;QAEjD,4BAA4B;QAC5B,MAAM,EAAE;YACJ,gDAAgD,EAAE,wBAAwB;SAC7E;QAED,mFAAmF;QACnF,mBAAmB;QACnB,YAAY,EAAE;YACV,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;QAC7E,CAAC;QAED,qGAAqG;QACrG,gGAAgG;QAChG,iBAAiB;QACjB,sBAAsB,EAAE;YACpB,IAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,0CAA0C,CAAC,CAAC,GAAG,EAAE,CAAC;YACtE,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAElC,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,EAAE;gBACrB,IAAI,CAAC,CAAC,CAAC,0CAA0C,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;aACjF;QACL,CAAC;QAED,yDAAyD;QACzD,6BAA6B;QAC7B,MAAM,EAAE;YACJ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,0BAA0B,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;YACxE,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC,CAAC;QAED,qBAAqB;QACrB,uDAAuD;QACvD,UAAU,EAAE;YACR,oDAAoD;YACpD,OAAO;gBACH,gCAAgC;gBAChC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC1D,2BAA2B;gBAC3B,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE;gBACtB,0BAA0B;gBAC1B,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC;gBACnC,iCAAiC;gBACjC,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY;gBACvC,kCAAkC;gBAClC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC;gBACxE,+BAA+B;gBAC/B,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE;aACjC,CAAC;YACF,4CAA4C;QAChD,CAAC;KACJ,CAAC,CAAC","file":"RequestQuoteWizard.Module.Comments.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"RequestQuoteWizard.Module.Comments\"/>\n\nimport * as _ from 'underscore';\nimport * as requestquote_wizard_module_comments_tpl from 'requestquote_wizard_module_comments.tpl';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { WizardStepModule } from '../../Wizard/JavaScript/Wizard.StepModule';\n\n// @class RequestQuoteWizard.Module.Comments @extend Wizard.Module\nexport = WizardStepModule.extend({\n    // @property {Function} template\n    template: requestquote_wizard_module_comments_tpl,\n\n    // @property {Object} events\n    events: {\n        'keyup [data-action=\"validate-textarea-length\"]': 'validateTextareaLength'\n    },\n\n    // @method getMaxLength Auxiliary method to return the max allowed character length\n    // @return {Number}\n    getMaxLength: function() {\n        return _.isNumber(this.options.maxLength) ? this.options.maxLength : 999;\n    },\n\n    // @method validateTextareaLength Auxiliary function to control the max length on the text are on IE8\n    // It doesnt return anything as it will set the new string when the value exceed the max allowed\n    // @return {Void}\n    validateTextareaLength: function() {\n        const text = this.$('[data-action=\"validate-textarea-length\"]').val();\n        const limit = this.getMaxLength();\n\n        if (text.length > limit) {\n            this.$('[data-action=\"validate-textarea-length\"]').val(text.substr(0, limit));\n        }\n    },\n\n    // @method submit Set the memo of the current transaction\n    // @returns {jQuery.Deferred}\n    submit: function() {\n        this.wizard.model.set('memo', this.$('[data-type=\"memo-input\"]').val());\n        return jQuery.Deferred().resolve();\n    },\n\n    // @method getContext\n    // @return {RequestQuoteWizard.Module.Comments.Context}\n    getContext: function() {\n        // @class RequestQuoteWizard.Module.Comments.Context\n        return {\n            // @property {Boolean} showTitle\n            showTitle: !!(!this.options.hide_title && this.getTitle()),\n            // @property {String} title\n            title: this.getTitle(),\n            // @property {String} memo\n            memo: this.wizard.model.get('memo'),\n            // @property {Boolean} isReadOnly\n            isReadOnly: !!this.options.is_read_only,\n            // @property {Boolean} hideContent\n            hideContent: this.options.is_read_only && !this.wizard.model.get('memo'),\n            // @property {Number} maxLength\n            maxLength: this.getMaxLength()\n        };\n        // @class RequestQuoteWizard.Module.Comments\n    }\n});\n"]}