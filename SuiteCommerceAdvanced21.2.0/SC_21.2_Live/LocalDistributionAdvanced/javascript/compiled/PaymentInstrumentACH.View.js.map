{"version":3,"sources":["PaymentInstrumentACH.View.ts"],"names":[],"mappings":"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","file":"PaymentInstrumentACH.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PaymentInstrumentACH.View\"/>\n\nimport * as _ from 'underscore';\nimport * as paymentinstrument_ach_tpl from 'paymentinstrument_ach.tpl';\nimport { View } from '../../../Commons/Core/JavaScript/View';\nimport { PaymentInstrumentACHModel } from './PaymentInstrumentACH.Model';\nimport { PaymentInstrumentACHCollection } from './PaymentInstrumentACH.Collection';\nimport { CollectionEventsDefinitionACH } from '../../../ServiceContract/SC/PaymentInstrumentACH/PaymentInstrumentACH';\n\ninterface PaymentInstrumentACHViewContext {\n    achId: number | string;\n    showACHImage: boolean;\n    paymentMethodImageUrl: string;\n    paymentName: string;\n    endingAccount: string;\n    bankName: string;\n    showSelect: boolean;\n    selectMessage: string;\n    isSelected: boolean | string;\n    showSelector: boolean;\n    ownerName: string;\n    customerConsent: string;\n    showActions: boolean;\n    limit: string;\n    accountType: string;\n    routingNumber: string;\n    isNewPaymentMethod: boolean;\n}\n\nexport interface PaymentInstrumentACHViewOptions {\n    collection?: PaymentInstrumentACHCollection;\n    showActions?: boolean;\n    hideSelector?: boolean;\n    selectedACHId?: any;\n    showSelect?: boolean;\n    selectMessage?: string;\n    model?: PaymentInstrumentACHModel;\n    viewsPerRow?: number;\n    childViewOptions?: object;\n}\n\nexport class PaymentInstrumentACHView extends View<\n    PaymentInstrumentACHViewContext,\n    CollectionEventsDefinitionACH<PaymentInstrumentACHCollection>\n> {\n    private readonly options: PaymentInstrumentACHViewOptions;\n    private model: PaymentInstrumentACHModel;\n    protected template = paymentinstrument_ach_tpl;\n\n    public constructor(options: PaymentInstrumentACHViewOptions) {\n        super();\n        this.options = options;\n        this.model = options.model;\n    }\n\n    public getContext(): PaymentInstrumentACHViewContext {\n        const accountType = this.model.getAccountType ? this.model.getAccountType() : '';\n\n        const icon =\n            this.model.get('paymentmethod').imagesrc && this.model.get('paymentmethod').imagesrc[0];\n        const isSelected =\n            this.options.hideSelector ||\n            this.model.get('internalid') === this.options.selectedACHId;\n        const mask = this.model.get('mask');\n        const bankName = this.model.get('bankname')\n            ? this.model.get('bankname')\n            : this.model.get('routingnumber');\n\n        return {\n            // @property {String} achId\n            achId: this.model.get('internalid'),\n            // @property {String} showACHImage\n            showACHImage: !!icon,\n            // @property {String} paymentMethodImageUrl\n            paymentMethodImageUrl: icon || '',\n            // @property {String} paymentName\n            paymentName: this.model.get('paymentmethod').name,\n            // @property {String} endingAccount\n            endingAccount: mask.substring(mask.length - 4) || '',\n            // @property {String} bankName\n            bankName: bankName,\n            // @property {Boolean} showDefaults\n            showSelect: !!this.options.showSelect,\n            // @property {String} selectMessage\n            selectMessage: this.options.selectMessage,\n            // @property {Boolean} isSelected\n            isSelected: isSelected,\n            // @property {Boolean} showActions\n            showActions: !!this.options.showActions,\n            // @property {Boolean} showSelector\n            showSelector: !this.options.hideSelector,\n            // @property {String} ownerName\n            ownerName: this.model.get('ownername'),\n            // @property {String} customerConsent\n            customerConsent: this.model.get('customerconsent'),\n            // @property {String} limit\n            limit: this.model.get('limit'),\n            // @property {String} accountType\n            accountType: accountType,\n            // @property {String} routingNumber\n            routingNumber: this.model.get('routingnumber'),\n            // @property {Boolean} isNewPaymentMethod\n            isNewPaymentMethod: this.model.get('internalid') < 0\n        };\n    }\n}\n"]}