{"version":3,"sources":["OrderWizard.Module.CartSummary.ts"],"names":[],"mappings":"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","file":"OrderWizard.Module.CartSummary.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"OrderWizard.Module.CartSummary\"/>\n\nimport * as _ from 'underscore';\nimport * as order_wizard_cart_summary_tpl from 'order_wizard_cart_summary.tpl';\nimport * as cart_summary_gift_certificate_cell_tpl from 'order_wizard_cartitems_module.tpl';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { WizardStepModule } from '../../Wizard/JavaScript/Wizard.StepModule';\n\nimport CartPromocodeListView = require('../../../Commons/Cart/JavaScript/Cart.Promocode.List.View');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport GlobalViewsFormatPaymentMethodView = require('../../../Commons/GlobalViews/JavaScript/GlobalViews.FormatPaymentMethod.View');\nimport LiveOrderModel = require('../../../Commons/LiveOrder/JavaScript/LiveOrder.Model');\n\n// @class OrderWizard.Module.CartSummary @extends Wizard.Module\nexport = WizardStepModule.extend({\n    // @property {Function} template\n    template: order_wizard_cart_summary_tpl,\n\n    // @property {String} className\n    className: 'OrderWizard.Module.CartSummary',\n\n    // @property {Object} attributes\n    attributes: {\n        id: 'order-wizard-layout',\n        class: 'order-wizard-layout'\n    },\n\n    // @method initialize\n    initialize: function initialize() {\n        WizardStepModule.prototype.initialize.apply(this, arguments);\n        const self = this;\n        // on change model we need to refresh summary\n        this.wizard.model.on('change:summary change:paymentmethods', function() {\n            // This is an ugly hack to solve the case when the change event trigger first\n            // than the confirmation and the lines are converted to collections and models\n            if (\n                !_.isArray(self.wizard.model.get('lines')) &&\n                self.wizard.model.get('confirmation') &&\n                _.isObject(self.wizard.model.get('confirmation').attributes)\n            ) {\n                self.render();\n            }\n        });\n\n        const suitetaxes = Configuration.get('siteSettings.isSuiteTaxEnabled');\n\n        if (suitetaxes && this.options.isConfirmation) {\n            this.wizard.model.on('change:suitetaxes', function() {\n                self.render();\n            });\n        }\n    },\n\n    isActive: function isActive(): boolean {\n        return this.options.isConfirmation\n            ? this.wizard.model.get('confirmation').get('internalid')\n            : true;\n    },\n\n    // @method render\n    // @return {Void}\n    render: function render() {\n        if (this.state === 'present') {\n            this._render();\n            this.trigger('ready', true);\n        }\n    },\n\n    // @property {Object} childViews\n    childViews: {\n        GiftCertificates: function() {\n            return new BackboneCollectionView({\n                collection:\n                    this.wizard.model.get('paymentmethods').where({ type: 'giftcertificate' }) ||\n                    [],\n                cellTemplate: cart_summary_gift_certificate_cell_tpl,\n                viewsPerRow: 1,\n                childView: GlobalViewsFormatPaymentMethodView,\n                rowTemplate: null\n            });\n        },\n        CartPromocodeListView: function() {\n            const self = this;\n            const promocodeListView = new CartPromocodeListView({\n                model: this.wizard.model,\n                hideRemovePromocodeButton: false\n            });\n\n            promocodeListView.on('removing_promocode', function() {\n                self.trigger('change_enable_continue', false);\n            });\n\n            promocodeListView.on('remove_promocode_finished', function() {\n                self.trigger('change_enable_continue', true);\n            });\n\n            if (this._isReadFromConfirmation()) {\n                promocodeListView.setOptions({\n                    model: this._getModel(),\n                    isReadOnly: true\n                });\n            }\n\n            return promocodeListView;\n        }\n    },\n    _isReadFromConfirmation: function() {\n        const confirmation = this.wizard.model.get('confirmation');\n        // You need to read from confirmation from the wizards (checkout) that have\n        // the isExternalCheckout and the return value is true (when returning from an external payment method)\n        // Other wizards, like QuoteToSalesOrder, does not make the confirmation hack\n        const read_from_confirmation =\n            confirmation && confirmation.get('internalid') && this.wizard.isExternalCheckout;\n\n        return read_from_confirmation;\n    },\n\n    // @method getShowShippingCost\n    // @returns {boolean}\n    getShowShippingCost: function(confirmation): boolean {\n        const confirmation_lines = confirmation && confirmation.get('lines');\n\n        if (confirmation_lines.length) {\n            const pickup_lines = confirmation_lines.filter(function(model) {\n                return (\n                    model.get('fulfillmentChoice') && model.get('fulfillmentChoice') === 'pickup'\n                );\n            });\n\n            const non_shippable_lines = confirmation_lines.filter(function(model) {\n                return !model.get('item').get('_isfulfillable');\n            });\n\n            return confirmation_lines.length - non_shippable_lines.length - pickup_lines.length > 0;\n        }\n        return this.wizard.model.getIfThereAreDeliverableItems();\n    },\n\n    // @method getShowPickupCost\n    // @returns {boolean}\n    getShowPickupCost: function(confirmation): boolean {\n        const confirmation_lines = confirmation && confirmation.get('lines');\n\n        if (confirmation_lines.length) {\n            return !!confirmation_lines.find(function(model) {\n                return (\n                    model.get('fulfillmentChoice') && model.get('fulfillmentChoice') === 'pickup'\n                );\n            });\n        }\n        return !!this.wizard.model.getPickupInStoreLines().length;\n    },\n\n    _getModel: function() {\n        if (this._isReadFromConfirmation()) {\n            const wizard_confirmation = this.wizard.model.get('confirmation');\n            const internalid = wizard_confirmation.get('internalid');\n            if (internalid) {\n                wizard_confirmation.set('internalid', internalid.toString());\n            }\n            return wizard_confirmation;\n        }\n        return this.wizard.model;\n    },\n    // @method getContext\n    // @returns {OrderWizard.Module.CartSummary.Context}\n    getContext: function getContext() {\n        const model = this._getModel();\n        const summary = model.get('summary') || {};\n        const item_count = LiveOrderModel.countItems(model.get('lines'));\n        const confirmation = this.wizard.model.get('confirmation');\n\n        // @class OrderWizard.Module.CartSummary.Context\n        return {\n            model: model,\n            // @property {Number} itemCount\n            itemCount: item_count,\n            // @property {Boolean} itemCountGreaterThan1\n            itemCountGreaterThan1: item_count > 1,\n            // @property {Array} giftCertificates\n            giftCertificates: model.get('paymentmethods').where({ type: 'giftcertificate' }) || [],\n            // @property {Boolean} showGiftCertificates\n            showGiftCertificates: !!summary.giftcertapplied,\n            // @property {Boolean} showDiscount\n            showDiscount: !!summary.discounttotal,\n            // @property {Boolean} showHandlingCost\n            showHandlingCost: !!summary.handlingcost,\n            // @property {Boolean} showShippingCost\n            showShippingCost: this.getShowShippingCost(confirmation),\n            // @property {Boolean} showPickupCost\n            showPickupCost: this.getShowPickupCost(confirmation),\n            // @property {Boolean} showRemovePromocodeButton\n            showRemovePromocodeButton: !!this.options.allow_remove_promocode,\n            // @property {Boolean} showWarningMessage\n            showWarningMessage: !!this.options.warningMessage,\n            // @property {String} warningMessage\n            warningMessage: this.options.warningMessage,\n            // @property {Boolean} showEditCartMST\n            showEditCartMST: this.wizard.isMultiShipTo() && !this.options.isConfirmation,\n            // @property {String} taxLabel\n            taxLabel: Configuration.get('summaryTaxLabel')\n                ? Configuration.get('summaryTaxLabel')\n                : 'Tax Total',\n            // @property {String} suiteTaxesEnabled\n            suiteTaxesEnabled: !!this.wizard.model.get('suitetaxes'),\n            // @property {String} suiteTaxes\n            suiteTaxes: this.wizard.model.get('suitetaxes')\n        };\n        // @class OrderWizard.Module.CartSummary\n    }\n});\n"]}