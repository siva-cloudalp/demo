{"version":3,"sources":["jQuery.scStickyButton.js"],"names":[],"mappings":"AAAA;;;;;EAKE;AAEF;;;;;;EAME;AAEF,MAAM,CAAC,uBAAuB,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,UAAS,MAAM,EAAE,KAAK;IACvE,IAAI,aAAa,CAAC;IAClB,IAAM,cAAc,GAAG,EAAE,CAAC;IAE1B,MAAM,CAAC,EAAE,CAAC,cAAc,GAAG;QACvB,IAAI,QAAQ,EAAE,EAAE;YACZ,IAAI,CAAC,IAAI,CAAC,CAAC;YACX,gFAAgF;YAChF,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,6BAA6B,EAAE,mBAAmB,CAAC,CAAC;SAC3E;QAED,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC;IAEF,SAAS,QAAQ;QACb,IAAM,cAAc,GAAG,KAAK,CAAC,gBAAgB,EAAE,CAAC;QAChD,IAAM,gBAAgB,GAAG,GAAG,CAAC;QAE7B,OAAO,cAAc,GAAG,gBAAgB,CAAC;IAC7C,CAAC;IAED,mFAAmF;IACnF,SAAS,IAAI,CAAC,MAAM;QAChB,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QAE/B,qHAAqH;QACrH,IAAM,YAAY,GAAG,MAAM,CAAC,6CAA6C,CAAC,CAAC,MAAM,CAC7E,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CACtD,CAAC;QACF,aAAa;aACR,IAAI,CAAC,uCAAuC,CAAC;aAC7C,MAAM,EAAE;aACR,MAAM,CAAC,YAAY,CAAC,CAAC;QAE1B,oCAAoC;QACpC,SAAS,EAAE,CAAC;IAChB,CAAC;IAED,sDAAsD;IACtD,SAAS,mBAAmB;QACxB,IAAM,mBAAmB,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;QACzD,IAAM,UAAU,GAAG,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACrD,IAAM,cAAc,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC;QAE9C,IAAI,kBAAkB,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpF,IAAI,CAAC,UAAU,IAAI,mBAAmB,IAAI,kBAAkB,EAAE;YAC1D,OAAO,EAAE,CAAC;SACb;aAAM,IAAI,UAAU,IAAI,mBAAmB,IAAI,kBAAkB,EAAE;YAChE,SAAS,EAAE,CAAC;SACf;IACL,CAAC;IAED,SAAS,OAAO;QACZ,IAAM,KAAK,GAAG,aAAa;aACtB,MAAM,EAAE;aACR,IAAI,CAAC,gCAAgC,CAAC;aACtC,KAAK,EAAE,CAAC;QACb,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC1B,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,SAAS,SAAS;QACd,IAAM,KAAK,GAAG,aAAa;aACtB,MAAM,EAAE;aACR,IAAI,CAAC,gCAAgC,CAAC;aACtC,KAAK,EAAE,CAAC;QACb,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAC7B,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;AACL,CAAC,CAAC,CAAC","file":"jQuery.scStickyButton.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/*\n@module jQueryExtras\n#jQuery.scStickyButton\nA jQuery plugin that implements a sticky button behavior. Usage:\n\n\tthis.$el.find('[data-action=\"sticky\"]').scStickyButton()\n*/\n\ndefine('jQuery.scStickyButton', ['jQuery', 'Utils'], function(jQuery, Utils) {\n    let sticky_button;\n    const padding_offset = 20;\n\n    jQuery.fn.scStickyButton = function() {\n        if (canStick()) {\n            init(this);\n            // try to update the button position on every scroll, touch start and touch move\n            jQuery(document).on('scroll touchstart touchmove', checkStickyPosition);\n        }\n\n        return this;\n    };\n\n    function canStick() {\n        const viewport_width = Utils.getViewportWidth();\n        const mobile_width_max = 768;\n\n        return viewport_width < mobile_width_max;\n    }\n\n    // initialize the plugin generating required markup and setting the event listeners\n    function init(sticky) {\n        sticky_button = jQuery(sticky);\n\n        // wrap the original button with a clone into a container. This achieves de desired behavior while scrolling the page\n        const button_clone = jQuery('<div class=\"sticky-button-container-clone\">').append(\n            sticky_button.clone(true).removeAttr('data-action')\n        );\n        sticky_button\n            .wrap('<div class=\"sticky-button-container\">')\n            .parent()\n            .append(button_clone);\n\n        // initialize with \"unsticked\" state\n        unStickIt();\n    }\n\n    // checks if the button should be sticked or unsticked\n    function checkStickyPosition() {\n        const document_scroll_top = jQuery(document).scrollTop();\n        const is_sticked = sticky_button.hasClass('sticked');\n        const current_offset = sticky_button.offset();\n        \n        let current_offset_top = current_offset ? (current_offset.top - padding_offset) : 0;\n\n        if (!is_sticked && document_scroll_top >= current_offset_top) {\n            stickIt();\n        } else if (is_sticked && document_scroll_top <= current_offset_top) {\n            unStickIt();\n        }\n    }\n\n    function stickIt() {\n        const clone = sticky_button\n            .parent()\n            .find('.sticky-button-container-clone')\n            .first();\n        clone.addClass('sticked');\n        sticky_button.addClass('sticked');\n    }\n\n    function unStickIt() {\n        const clone = sticky_button\n            .parent()\n            .find('.sticky-button-container-clone')\n            .first();\n        clone.removeClass('sticked');\n        sticky_button.removeClass('sticked');\n    }\n});\n"]}