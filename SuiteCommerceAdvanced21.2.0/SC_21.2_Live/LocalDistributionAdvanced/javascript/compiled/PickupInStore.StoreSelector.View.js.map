{"version":3,"sources":["PickupInStore.StoreSelector.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAaF,IAAM,8BAA8B,GAAQ,YAAY,CAAC,MAAM,CAAC;QAC5D,gCAAgC;QAChC,QAAQ,EAAE,kCAAkC;QAE5C,2BAA2B;QAC3B,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC;QAEtC,qBAAqB;QACrB,yEAAyE;QACzE,UAAU,EAAE,SAAS,UAAU,CAAC,OAAO;YACnC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEzD,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;YACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YACjC,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAC/C,yCAAyC,CAC5C,CAAC;YACF,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAE7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;YAChD,IAAI,CAAC,gBAAgB,GAAG,IAAI,sBAAsB,EAAE,CAAC;QACzD,CAAC;QAED,qCAAqC;QACrC,eAAe,EAAE,SAAS,eAAe;YACrC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;QACzC,CAAC;QAED,oCAAoC;QACpC,UAAU,EAAE;YACR,WAAW,EAAE;gBACT,OAAO,IAAI,sBAAsB,CAAC;oBAC9B,UAAU,EAAE,IAAI,CAAC,gBAAgB;oBACjC,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,aAAa,EAAE,IAAI,CAAC,aAAa;oBACjC,YAAY,EAAE,4BAAY,CAAC,WAAW,EAAE;oBACxC,aAAa,EAAE,CAAC,KAAK,CAAC,aAAa,EAAE;oBACrC,cAAc,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,KAAK,QAAQ;iBACxD,CAAC,CAAC;YACP,CAAC;YAED,SAAS,EAAE;gBACP,OAAO,IAAI,kCAAkC,CAAC;oBAC1C,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;oBACvC,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,aAAa,EAAE,IAAI,CAAC,aAAa;oBACjC,YAAY,EAAE,4BAAY,CAAC,WAAW,EAAE;oBACxC,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;iBACtB,CAAC,CAAC;YACP,CAAC;SACJ;KACJ,CAAC,CAAC;IAEH,OAAS,8BAA8B,CAAC","file":"PickupInStore.StoreSelector.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PickupInStore.StoreSelector.View\"/>\n\nimport * as pickup_in_store_store_selector_tpl from 'pickup_in_store_store_selector.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\n\nimport StoreLocatorSearchView = require('../../StoreLocator/JavaScript/StoreLocator.Search.View');\nimport PickupInStoreStoreSelectorListView = require('./PickupInStore.StoreSelector.List.View');\nimport StoreLocatorCollection = require('../../StoreLocator/JavaScript/StoreLocator.Collection');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\nconst PickupInStoreStoreSelectorView: any = BackboneView.extend({\n    // @property {Function} template\n    template: pickup_in_store_store_selector_tpl,\n\n    // @property {String} title\n    title: Utils.translate('Select Store'),\n\n    // @method initialize\n    // @param {PickupInStore.StoreSelector.View.InitializeParameters} options\n    initialize: function initialize(options) {\n        BackboneView.prototype.initialize.apply(this, arguments);\n\n        this.model = options.model;\n        this.application = options.application;\n        this.item = this.model.getItem();\n        this.item_pickup_in_store_locations = this.item.get(\n            '_quantityavailableforstorepickup_detail'\n        );\n        this.source = options.source;\n\n        this.reference_map = this.options.reference_map;\n        this.store_collection = new StoreLocatorCollection();\n    },\n\n    // @property {method} focusFirstInput\n    focusFirstInput: function focusFirstInput() {\n        return !this.store_collection.length;\n    },\n\n    // @property {ChildViews} childViews\n    childViews: {\n        StoreSearch: function() {\n            return new StoreLocatorSearchView({\n                collection: this.store_collection,\n                application: this.application,\n                reference_map: this.reference_map,\n                profileModel: ProfileModel.getInstance(),\n                alwaysVisible: !Utils.isPhoneDevice(),\n                useGeolocation: window.location.protocol === 'https:'\n            });\n        },\n\n        StoreList: function() {\n            return new PickupInStoreStoreSelectorListView({\n                store_collection: this.store_collection,\n                application: this.application,\n                reference_map: this.reference_map,\n                profileModel: ProfileModel.getInstance(),\n                model: this.model,\n                source: this.source\n            });\n        }\n    }\n});\n\nexport = PickupInStoreStoreSelectorView;\n"]}