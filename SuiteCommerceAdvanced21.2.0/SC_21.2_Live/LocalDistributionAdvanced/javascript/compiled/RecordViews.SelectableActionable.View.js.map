{"version":3,"sources":["RecordViews.SelectableActionable.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAQF,wEAAwE;IACxE,IAAM,mCAAmC,GAAQ,kCAAe,CAAC,MAAM,CAAC;QACpE,gCAAgC;QAChC,QAAQ,EAAE,qCAAqC;QAE/C,qBAAqB;QACrB,oEAAoE;QACpE,iBAAiB;QACjB,UAAU,EAAE;YACR,kCAAe,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAChE,CAAC;QAED,0GAA0G;QAC1G,UAAU,EAAE;YACR,aAAa,EAAE;gBACX,IAAM,cAAc,GAAG,CAAC,CAAC,MAAM,CAC3B;oBACI,KAAK,EAAE,IAAI,CAAC,KAAK;iBACpB,EACD,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,EAAE,CACnC,CAAC;gBACF,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;gBAErC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;YACpC,CAAC;SACJ;QAED,6EAA6E;QAC7E,UAAU,EAAE;YACR,uDAAuD;YACvD,OAAO;gBACH,2EAA2E;gBAC3E,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,wBAAwB;gBACxB,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;gBAEjB,gCAAgC;gBAChC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;gBACpC,+BAA+B;gBAC/B,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACpC,gCAAgC;gBAChC,gBAAgB,EAAE,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;oBAC1D,CAAC,CAAC,KAAK;oBACP,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB;gBAErC,gCAAgC;gBAChC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE;gBAC9C,kCAAkC;gBAClC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBAEtE,yBAAyB;gBACzB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC;gBAC1B,2BAA2B;gBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;gBAE9B,qDAAqD;gBACrD,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE;aACnC,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,mCAAmC,CAAC;;AAE7C,0DAA0D;AAC1D,2EAA2E;AAC3E,mCAAmC;AACnC,uCAAuC;AACvC,6FAA6F;AAE7F,wFAAwF;AACxF,wBAAwB;AACxB,gCAAgC;AAChC,6BAA6B;AAC7B,qDAAqD;AACrD,2BAA2B;AAC3B,yBAAyB;AACzB,gCAAgC;AAChC,qDAAqD","file":"RecordViews.SelectableActionable.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"RecordViews.SelectableActionable.View\"/>\n\nimport * as _ from 'underscore';\nimport * as recordviews_selectable_actionable_tpl from 'recordviews_selectable_actionable.tpl';\nimport { RecordViewsView } from './RecordViews.View';\n\n// @class RecordViews.SelectableActionable.View @extend RecordViews.View\nconst RecordViewsSelectableActionableView: any = RecordViewsView.extend({\n    // @property {Function} template\n    template: recordviews_selectable_actionable_tpl,\n\n    // @method initialize\n    // @param {RecordViews.SelectableActionable.View.Initialize} options\n    // @return {Void}\n    initialize: function() {\n        RecordViewsView.prototype.initialize.apply(this, arguments);\n    },\n\n    // @property {Object} childViews Override the base property by adding a default Action.View composite View\n    childViews: {\n        'Action.View': function() {\n            const action_options = _.extend(\n                {\n                    model: this.model\n                },\n                this.options.actionOptions || {}\n            );\n            const view = this.options.actionView;\n\n            return new view(action_options);\n        }\n    },\n\n    // @method getContext @return {RecordViews.SelectableActionable.View.Context}\n    getContext: function() {\n        // @class RecordViews.SelectableActionable.View.Context\n        return {\n            // @property {RecordViews.SelectableActionable.View.Initialize.Model} model\n            model: this.model,\n            // @property {String} id\n            id: this.model.id,\n\n            // @property {Boolean} isChecked\n            isChecked: !!this.model.get('check'),\n            // @property {Boolean} isActive\n            isActive: !!this.model.get('active'),\n            // @property {Boolean} isChecked\n            checkboxIsHidden: _.isUndefined(this.options.checkboxIsHidden)\n                ? false\n                : !!this.options.checkboxIsHidden,\n\n            // @property {String} actionType\n            actionType: this.model.get('actionType') || '',\n            // @property {Boolean} isNavigable\n            isNavigable: !!(this.options.navigable || this.model.get('navigable')),\n\n            // @property {String} url\n            url: this.model.get('url'),\n            // @property {String} title\n            title: this.model.get('title'),\n\n            // @property {Array<RecordViews.View.Column>} columns\n            columns: this.normalizeColumns()\n        };\n    }\n});\n\nexport = RecordViewsSelectableActionableView;\n\n// @class RecordViews.SelectableActionable.View.Initialize\n// @property {RecordViews.SelectableActionable.View.Initialize.Model} model\n// @property {Object} actionOptions\n// @property {Backbone.View} actionView\n// @property {Boolean} navigable This value will takes precedence over the value of the model\n\n// @class RecordViews.SelectableActionable.View.Initialize.Model @extends Backbone.Model\n// @property {String} id\n// @property {Boolean} isChecked\n// @property {Boolean} active\n// @property {String?} actionType Default value is ''\n// @property {String} title\n// @property {String} url\n// @property {Boolean} navigable\n// @property {Array<RecordViews.View.Column>} columns\n"]}