{"version":3,"sources":["CMSadapter.Impl.CustomContentType.ts"],"names":[],"mappings":"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","file":"CMSadapter.Impl.CustomContentType.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CMSadapter.Impl.CustomContentType\"/>\n\nimport * as _ from 'underscore';\n\n/*\n@module CMSadapter\n@class CMSadapterImpl.CustomContentType the class that has the core integration using the CMS API.\n*/\n\nfunction AdapterCustomContentType(application, CMS) {\n    this.CMS = CMS;\n    this.application = application;\n    this.CMSadapterComponent = application.getComponent('CMS');\n\n    this.listenForCMS();\n}\n\n_.extend(AdapterCustomContentType.prototype, {\n    listenForCMS: function listenForCMS() {\n        // CMS listeners - CMS tells us to do something, could fire anytime.\n        const self = this;\n\n        self.CMS.on('page:content:set', function(promise, ccts, contentContext) {\n            const pageType = self.application.getComponent('PageType');\n\n            if (pageType._validateCurrentContext(contentContext)) {\n                self.CMSadapterComponent.setRawCCTs(\n                    _.map(ccts, function(cct: any) {\n                        return {\n                            id: cct.type,\n                            instance_id: cct.instance_id,\n                            selector: { 'data-cms-area': cct.context.area },\n                            settings: cct.settings,\n                            render_settings: {\n                                position: cct.context.sequence,\n                                classes: cct.classes\n                            }\n                        };\n                    })\n                );\n            }\n\n            promise.resolve();\n        });\n\n        self.CMS.on('content:types:get', function(promise) {\n            const content_types = _.map(self.CMSadapterComponent.getContentIds(), function(cct_id) {\n                return { type: cct_id };\n            });\n\n            promise.resolve(content_types);\n        });\n\n        self.CMS.on('content:add', function(promise, cct) {\n            const content = {\n                id: cct.type,\n                instance_id: cct.instance_id,\n                selector: { 'data-cms-area': cct.context.area },\n                settings: cct.settings,\n                render_settings: {\n                    position: cct.context.sequence,\n                    classes: cct.classes\n                }\n            };\n\n            self.CMSadapterComponent.addContent(\n                content.id,\n                content.instance_id,\n                content.selector,\n                content.settings,\n                content.render_settings\n            ).then(promise.resolve, promise.reject);\n        });\n\n        self.CMS.on('content:update', function(promise, cct) {\n            const content = {\n                id: cct.type,\n                instance_id: cct.instance_id,\n                selector: { 'data-cms-area': cct.context.area },\n                settings: cct.settings,\n                render_settings: {\n                    position: cct.context.sequence,\n                    classes: cct.classes\n                }\n            };\n\n            self.CMSadapterComponent.updateContent(\n                content.id,\n                content.instance_id,\n                content.selector,\n                content.settings,\n                content.render_settings\n            ).then(promise.resolve, promise.reject);\n        });\n\n        self.CMS.on('content:remove', function(promise, cct) {\n            self.CMSadapterComponent.removeContent(cct.instance_id, true).then(\n                promise.resolve,\n                promise.reject\n            );\n        });\n    }\n});\n\nexport = AdapterCustomContentType;\n"]}