{"version":3,"sources":["Notifications.Order.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAcF,yDAAyD;IACzD,IAAM,sBAAsB,GAAQ,YAAY,CAAC,MAAM,CAAC;QACpD,QAAQ,EAAE,uBAAuB;QAEjC,UAAU,EAAE;YACR,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,WAAW,EAAE,CAAC;YAE1C,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAE5D,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,4BAA4B,EAAE,IAAI,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;YAEpF,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAEhC,IAAI,CAAC,EAAE,CAAC,0BAA0B,EAAE;gBAChC,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBACzB,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAClB;wBACI,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG;qBACnC,EACD,GAAG,CACN,CAAC;oBAEF,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;iBACnC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,2BAA2B,EAAE,UAAS,YAAY;YAC9C,IAAM,SAAS,GAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;gBAC7D,UAAU,EAAE,YAAY;aAC3B,CAAC,CAAC;YAEH,OAAO,SAAS,CAAC,YAAY,CAAC;QAClC,CAAC;QACD,oCAAoC;QACpC,UAAU,EAAE;YACR,yBAAyB,EAAE;gBACvB,IAAM,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,UAAS,SAAS;oBAC9E,OAAa,SAAU,CAAC,YAAY,KAAK,IAAI,CAAC;gBAClD,CAAC,CAAC,CAAC;gBAEH,IAAI,UAAU,CAAC,MAAM,EAAE;oBACnB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBAE/B,OAAO,IAAI,sBAAsB,CAAC;wBAC9B,UAAU,EAAE,UAAU;wBACtB,WAAW,EAAE,CAAC;wBACd,SAAS,EAAE,gCAAgC;wBAC3C,gBAAgB,EAAE;4BACd,WAAW,EAAE,IAAI,CAAC,KAAK;yBAC1B;qBACJ,CAAC,CAAC;iBACN;YACL,CAAC;SACJ;QAED,8DAA8D;QAC9D,UAAU,EAAE;YACR,0CAA0C;YAC1C,OAAO,EAAE,CAAC;QACd,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,sBAAsB,CAAC","file":"Notifications.Order.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Notifications.Order.View\"/>\n// @module Notifications.Order.View\n\nimport * as _ from 'underscore';\nimport * as notifications_order_tpl from 'notifications_order.tpl';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\n\nimport NotificationsOrderPromocodesView = require('./Notifications.Order.Promocodes.View');\nimport LiveOrderModel = require('../../../Commons/LiveOrder/JavaScript/LiveOrder.Model');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\n\n// @class Notifications.Order.View @extends Backbone.View\nconst NotificationsOrderView: any = BackboneView.extend({\n    template: notifications_order_tpl,\n\n    initialize: function() {\n        this.model = LiveOrderModel.getInstance();\n\n        this.model.on('change', this.render, this);\n        this.model.get('lines').on('add remove', this.render, this);\n\n        this.model.on('promocodeNotificationShown', this.removePromocodeNotification, this);\n\n        this.notification_shown = false;\n\n        this.on('afterCompositeViewRender', function() {\n            if (this.notification_shown) {\n                jQuery('body').animate(\n                    {\n                        scrollTop: this.$el.offset().top\n                    },\n                    600\n                );\n\n                this.notification_shown = false;\n            }\n        });\n    },\n\n    removePromocodeNotification: function(promocode_id) {\n        const promocode: any = _.findWhere(this.model.get('promocodes'), {\n            internalid: promocode_id\n        });\n\n        delete promocode.notification;\n    },\n    // @property {ChildViews} childViews\n    childViews: {\n        'Promocode.Notifications': function() {\n            const promotions = _.filter(this.model.get('promocodes') || [], function(promocode) {\n                return (<any>promocode).notification === true;\n            });\n\n            if (promotions.length) {\n                this.notification_shown = true;\n\n                return new BackboneCollectionView({\n                    collection: promotions,\n                    viewsPerRow: 1,\n                    childView: NotificationsOrderPromocodesView,\n                    childViewOptions: {\n                        parentModel: this.model\n                    }\n                });\n            }\n        }\n    },\n\n    // @method getContext @return Notifications.Order.View.Context\n    getContext: function() {\n        // @class Notifications.Order.View.Context\n        return {};\n    }\n});\n\nexport = NotificationsOrderView;\n"]}