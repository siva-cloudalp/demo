{"version":3,"sources":["StoreLocator.List.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAYF,sDAAsD;IACtD,IAAM,oBAAoB,GAAQ,YAAY,CAAC,MAAM,CAAC;QAClD,QAAQ,EAAE,sBAAsB;QAEhC,MAAM,EAAE;YACJ,cAAc,EAAE,mBAAmB;SACtC;QAED,qBAAqB;QACrB,UAAU,EAAE,SAAS,UAAU,CAAC,OAAO;YACnC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;YAE3C,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;YAE/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;QACpC,CAAC;QAED,4BAA4B;QAC5B,iBAAiB;QACjB,iBAAiB,EAAE,SAAS,iBAAiB;YACzC,IACI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,oBAAoB,EAAE;gBACvD,CAAC,KAAK,CAAC,aAAa,EAAE;gBACtB,CAAC,KAAK,CAAC,cAAc,EAAE,EACzB;gBACE,IAAM,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;oBAClD,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC;iBACzC,CAAC,CAAC;gBAEH,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACrE;QACL,CAAC;QAED,6DAA6D;QAC7D,UAAU,EAAE,SAAS,UAAU;YAC3B,wCAAwC;YACxC,OAAO;gBACH,iCAAiC;gBACjC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC;gBACjC,qCAAqC;gBACrC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC;gBACzC,oCAAoC;gBACpC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC;gBAC5C,oCAAoC;gBACpC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC;gBACxC,+BAA+B;gBAC/B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC;gBACrC,6BAA6B;gBAC7B,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,0CAA0C;gBAC1C,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,gCAAgC;gBAChC,UAAU,EAAE,6BAAa,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc;aAC3F,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,oBAAoB,CAAC","file":"StoreLocator.List.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"StoreLocator.List.View\"/>\n// @module StoreLocator.List.View\n\nimport * as _ from 'underscore';\nimport * as store_locator_list_tpl from 'store_locator_list.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class StoreLocator.List.View @extend Backbone.View\nconst StoreLocatorListView: any = BackboneView.extend({\n    template: store_locator_list_tpl,\n\n    events: {\n        'mouseover li': 'openMapInfoWindow'\n    },\n\n    // @method initialize\n    initialize: function initialize(options) {\n        this.reference_map = options.reference_map;\n\n        this.index = options.index + 1;\n\n        this.events = this.events || {};\n    },\n\n    // @method openMapInfoWindow\n    // @return {void}\n    openMapInfoWindow: function openMapInfoWindow() {\n        if (\n            this.reference_map.configuration.openPopupOnMouseOver() &&\n            !Utils.isPhoneDevice() &&\n            !Utils.isTabletDevice()\n        ) {\n            const marker = _.findWhere(this.reference_map.points, {\n                store_id: this.model.get('internalid')\n            });\n\n            this.reference_map.showInfoWindow(marker, this.model, this.index);\n        }\n    },\n\n    // @method getContext @returns StoreLocator.List.View.Context\n    getContext: function getContext() {\n        // @Class StoreLocator.List.View.Context\n        return {\n            // @property {{String}} storeName\n            storeName: this.model.get('name'),\n            // @property {{String}} storeDistance\n            storeDistance: this.model.get('distance'),\n            // @property {{String}} distanceUnit\n            distanceUnit: this.model.get('distanceunit'),\n            // @property {{String}} storeAddress\n            storeAddress: this.model.get('address1'),\n            // @property {{String}} storeId\n            storeId: this.model.get('internalid'),\n            // @property {{Number}} index\n            index: this.index,\n            // @property {{StoreLocation.Model}} model\n            model: this.model,\n            // @property {String} touchpoint\n            touchpoint: Configuration.get('siteSettings.isHttpsSupported') ? 'home' : 'storelocator'\n        };\n    }\n});\n\nexport = StoreLocatorListView;\n"]}