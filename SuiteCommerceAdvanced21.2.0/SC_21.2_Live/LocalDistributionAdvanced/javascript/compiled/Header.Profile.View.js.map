{"version":3,"sources":["Header.Profile.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAeF,OAAS,YAAY,CAAC,MAAM,CAAC;QACzB,QAAQ,EAAE,kBAAkB;QAE5B,UAAU,EAAE;YACR,IAAM,IAAI,GAAG,IAAI,CAAC;YAClB,4BAAY,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC;gBAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE;gBACvB,KAAK,CAAC,QAAQ,CAAC,mCAAmC,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;QACP,CAAC;QAED,UAAU,EAAE;YACR,uBAAuB,EAAE;gBACrB,OAAO,IAAI,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrD,CAAC;SACJ;QAED,2DAA2D;QAC3D,UAAU,EAAE;YACR,IAAM,OAAO,GAAG,4BAAY,CAAC,WAAW,EAAE,CAAC;YAC3C,IAAM,UAAU,GACZ,CAAC,KAAK,CAAC,iBAAiB,CAAC,6BAAa,EAAE,gCAAgC,EAAE,IAAI,CAAC;gBAC/E,4BAAY,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,KAAK,UAAU,CAAC;YACrD,IAAM,YAAY,GACd,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,GAAG;gBAC9B,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,KAAK,GAAG;oBAChC,6BAAa,CAAC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAC,CAAC;gBACjE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC;YAEnC,qCAAqC;YACrC,OAAO;gBACH,uCAAuC;gBACvC,gBAAgB,EAAE,CAAC,UAAU,IAAI,YAAY;gBAC7C,oCAAoC;gBACpC,aAAa,EAAE,CAAC,UAAU,IAAI,CAAC,YAAY;gBAC3C,sCAAsC;gBACtC,eAAe,EAAE,UAAU;gBAC3B,wCAAwC;gBACxC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB;gBACnD,iCAAiC;gBACjC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;gBACnE,gCAAgC;gBAChC,SAAS,EAAE,6BAAa,CAAC,mBAAmB,EAAE,KAAK,UAAU;gBAC7D,mCAAmC;gBACnC,YAAY,EACR,6BAAa,CAAC,mBAAmB,EAAE,KAAK,UAAU;oBAClD,6BAAa,CAAC,mBAAmB,EAAE,KAAK,UAAU;aACzD,CAAC;QACN,CAAC;KACJ,CAAC,CAAC","file":"Header.Profile.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Header.Profile.View\"/>\n\nimport * as header_profile_tpl from 'header_profile.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../../Commons/Utilities/JavaScript/Configuration';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\n\nimport HeaderMenuMyAccountView = require('./Header.Menu.MyAccount.View');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @module Header\n\n// @class Header.Profile.View\nexport = BackboneView.extend({\n    template: header_profile_tpl,\n\n    initialize: function() {\n        const self = this;\n        ProfileModel.getPromise().done(function() {\n            self.render();\n        });\n\n        this.on('afterViewRender', function() {\n            Utils.ellipsis('.header-profile-loading-indicator');\n        });\n    },\n\n    childViews: {\n        'Header.Menu.MyAccount': function() {\n            return new HeaderMenuMyAccountView(this.options);\n        }\n    },\n\n    // @method getContext @return {Header.Profile.View.Context}\n    getContext: function() {\n        const profile = ProfileModel.getInstance();\n        const is_loading =\n            !Utils.getPathFromObject(Configuration, 'performance.waitForUserProfile', true) &&\n            ProfileModel.getPromise().state() !== 'resolved';\n        const is_logged_in =\n            (profile.get('isLoggedIn') === 'T' ||\n                (profile.get('isRecognized') === 'T' &&\n                    Configuration.get('header.showRecognizedShopper', true))) &&\n            profile.get('isGuest') === 'F';\n\n        // @class Header.Profile.View.Context\n        return {\n            // @property {Boolean} showExtendedMenu\n            showExtendedMenu: !is_loading && is_logged_in,\n            // @property {Boolean} showLoginMenu\n            showLoginMenu: !is_loading && !is_logged_in,\n            // @property {Boolean} showLoadingMenu\n            showLoadingMenu: is_loading,\n            // @property {Boolean} showMyAccountMenu\n            showMyAccountMenu: !!this.options.showMyAccountMenu,\n            // @property {String} displayName\n            displayName: profile.get('firstname') || profile.get('companyname'),\n            // @property {Boolean} showLogin\n            showLogin: Configuration.getRegistrationType() !== 'disabled',\n            // @property {Boolean} showRegister\n            showRegister:\n                Configuration.getRegistrationType() === 'optional' ||\n                Configuration.getRegistrationType() === 'required'\n        };\n    }\n});\n"]}