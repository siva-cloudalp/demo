{"version":3,"sources":["PageType.Component.ts"],"names":[],"mappings":"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","file":"PageType.Component.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PageType.Component\"/>\n\nimport * as _ from 'underscore';\nimport { Loggers } from '../../Loggers/JavaScript/Loggers';\nimport { PageTypeCollection } from './PageType.Collection';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { NavigationLoggerOptionalsOptions } from '../../../Advanced/Loggers.SCA/JavaScript/Loggers.Appender.Sensors';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nimport { SCBaseComponent } from '../../SC/JavaScript/SC.BaseComponent';\n\nimport PageTypeRouter = require('./PageType.Router');\n\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n// import { PageTypeModel } from './PageType.Model';\n\n// @module PageType.Component\n/* interface PageType {\n\tname: string\n\tdisplayName: string\n\ttemplate: string\n}*/\ninterface PageContext {\n    context: any;\n    data: { promiseCMS: any; rendered: boolean; timeoutId: number };\n}\n\nfunction checkNavigationSearchResults(options, result) {\n    let optionsExist = false;\n    const url_options = Utils.parseUrlOptions(window.location.search);\n    if (url_options && url_options.keywords) {\n        optionsExist = true;\n        options.searchQuery = url_options.keywords.toString();\n        options.searchPageNumber = 1;\n        options.searchResultCount = 0;\n        if (url_options.page) {\n            options.searchPageNumber = parseInt(url_options.page.toString(), 10);\n        }\n        if (result.model && result.model.get('items')) {\n            options.searchResultCount = result.model.get('items').length;\n        }\n    }\n    return optionsExist;\n}\n\nfunction checkNavigationItem(options, result) {\n    let optionsExist = false;\n    let itemId = 0;\n    if (result.model && result.model.get('item') && result.model.get('item').id) {\n        itemId = result.model.get('item').id;\n    }\n    if (itemId) {\n        optionsExist = true;\n        options.itemId = itemId;\n    }\n    return optionsExist;\n}\n\nexport = function PageTypeComponentGenerator(application) {\n    const Router = new PageTypeRouter(application);\n    const CMSReady = jQuery.Deferred();\n    let CMS;\n    const routes = {};\n    const pages = {};\n    const allPageTypes = {};\n\n    const templates = {};\n    const types = {};\n    let lastContext: PageContext = {\n        context: {},\n        data: {\n            promiseCMS: jQuery.Deferred(),\n            rendered: false,\n            timeoutId: 0\n        }\n    };\n\n    Backbone.on('cms:loaded', function(cms) {\n        CMS = cms;\n        CMSReady.resolve();\n    });\n\n    CMSReady.done(function() {\n        CMS.on('page:content:set', function(_promise, _ccts, contentContext) {\n            const fullContext = PageTypeComponent._validateCurrentContext(contentContext);\n\n            if (fullContext) {\n                const { data } = fullContext;\n\n                if (data.rendered) {\n                    const cctComponent = PageTypeComponent.application.getComponent('CMS');\n\n                    cctComponent.addContents();\n                } else if (data.timeoutId) {\n                    clearTimeout(data.timeoutId);\n                }\n\n                data.promiseCMS.resolve();\n            }\n        });\n    });\n\n    var PageTypeComponent = SCBaseComponent.extend({\n        componentName: 'PageType',\n\n        application: application,\n\n        pageTypes: new PageTypeCollection(\n            (SC.ENVIRONMENT.PageTypes && SC.ENVIRONMENT.PageTypes.pageTypes) || []\n        ),\n\n        _validateCurrentContext: function _validateCurrentContext(context) {\n            const contextLast: any = lastContext.context;\n\n            if (contextLast.path === context.path) {\n                return lastContext;\n            }\n            return null;\n        },\n\n        _getPage: function _getPage(url) {\n            return pages[url];\n        },\n\n        _addPage: function _addPage(page, type, url) {\n            if (type && url) {\n                if (!routes[type]) {\n                    routes[type] = [];\n                }\n\n                if (_.indexOf(routes[type], url) === -1) {\n                    routes[type].push(url);\n                }\n\n                pages[url] = page;\n            }\n        },\n\n        _addRoute: function _addRoute(options) {\n            _.each(options.routes, function(route: string) {\n                if (route[0] === '/') {\n                    route = route.substr(1);\n                }\n\n                Router.route(route, options.type);\n            });\n        },\n        _getPageType: function _getPageType(name) {\n            return this.pageTypes.find(pageType => pageType.get('name') === name);\n        },\n\n        _updatePageTypes: function _updatePageTypes() {\n            this.pageTypes.fetch().done(() => {\n                const { context } = lastContext;\n                Backbone.history.navigate(context.path, { trigger: false });\n                Backbone.history.loadUrl(context.path);\n            });\n        },\n\n        getPageTypes: function getPageTypes() {\n            const data = {\n                layouts: templates,\n                types: {}\n            };\n\n            _.each(types, function(value: any, key) {\n                if (value.registered) {\n                    data.types[key] = value;\n                }\n            });\n\n            return data;\n        },\n\n        getContext: function getContext() {\n            return Utils.deepCopy(lastContext.context);\n        },\n\n        registerTemplate: function registerTemplate(templateData) {\n            const { template } = templateData;\n\n            if (!templates[template.name]) {\n                templates[template.name] = {\n                    name: template.displayName,\n                    thumbnail: template.thumbnail\n                };\n            }\n\n            _.each(templateData.pageTypes, function(pageType: any) {\n                if (!types[pageType]) {\n                    types[pageType] = {\n                        supportedLayoutIds: []\n                    };\n                }\n\n                if (_.indexOf(types[pageType].supportedLayoutIds, template.name) === -1) {\n                    types[pageType].supportedLayoutIds.push(template.name);\n                }\n            });\n        },\n\n        _CmsViewPromises: function _CmsViewPromises(options) {\n            const url =\n                (Backbone.history.fragment && Backbone.history.fragment.split('?')[0]) ||\n                Backbone.history.location.hash;\n            const path = Utils.correctURL(url);\n\n            const context = {\n                path: options.path || path,\n                site_id: options.site_id || Configuration.get('siteSettings.siteid'),\n                page_type: options.page_type || '',\n                page_type_display_name: options.page_type || ''\n            };\n            const pageTypeInfo = this._getPageType(options.page_type);\n\n            if (pageTypeInfo) {\n                context.page_type_display_name = pageTypeInfo.get('displayName');\n            }\n\n            const data = {\n                promiseCMS: jQuery.Deferred(),\n                rendered: false,\n                timeoutId: 0\n            };\n\n            lastContext = {\n                context: context,\n                data: data\n            };\n\n            const self = this;\n            const { view } = options;\n\n            const promise = jQuery.Deferred();\n\n            let promiseView = view ? jQuery.Deferred().resolve() : jQuery.Deferred().reject();\n\n            if (view && view.beforeShowContent) {\n                promiseView = view.beforeShowContent();\n            }\n\n            if (!Configuration.get('cms.useCMS')) {\n                data.promiseCMS.resolve();\n            } else {\n                CMSReady.done(function() {\n                    self.application.getLayout().once('beforeAppendView', function() {\n                        if (self._validateCurrentContext(context) && !data.rendered) {\n                            data.rendered = true;\n                        }\n                    });\n\n                    const specialPageTypes = ['expired_link', 'internal-error', 'page-not-found'];\n\n                    if (specialPageTypes.indexOf(context.page_type) === -1) {\n                        CMS.trigger('app:page:changed', context);\n                    }\n\n                    promiseView.done(function() {\n                        data.timeoutId = setTimeout(function() {\n                            if (self._validateCurrentContext(context)) {\n                                data.rendered = true;\n                                data.promiseCMS.resolve();\n                            } else {\n                                data.promiseCMS.reject();\n                            }\n                        }, Configuration.get('cms.contentWait', 200));\n                    });\n                });\n            }\n\n            jQuery\n                .when(data.promiseCMS, promiseView)\n                .done(function() {\n                    promise.resolve();\n                })\n                .fail(function(promiseError) {\n                    promise.reject(promiseError);\n                });\n\n            return promise;\n        },\n\n        registerPageType: function registerPageType(pagetype) {\n            if (pagetype.name && pagetype.view) {\n                allPageTypes[pagetype.name] = pagetype;\n            }\n\n            if (pagetype.name && pagetype.routes && !pagetype.view && allPageTypes[pagetype.name]) {\n                pagetype.view = allPageTypes[pagetype.name].view;\n            }\n\n            const callback = function() {\n                const loggers = Loggers.getLogger();\n                loggers.start('Navigation');\n\n                let view;\n\n                if (pagetype.view) {\n                    let url = Backbone.history.fragment;\n                    url = url.split('?')[0]; // remove options\n                    const page = pages[url];\n\n                    const options: any = _.extend({}, pagetype.options || {}, {\n                        application: application,\n                        container: application,\n                        routerArguments: arguments\n                    });\n\n                    if (page) {\n                        // adapt to a acceptable format for extensibility layer\n                        options.pageInfo = {\n                            name: page.get('name'),\n                            url: page.get('urlPath'),\n                            header: page.get('page_header'),\n                            title: page.get('page_title'),\n                            fields: page.get('fields')\n                        };\n                    }\n\n                    view = new pagetype.view(options);\n                } else if (pagetype.callback) {\n                    view = pagetype.callback.apply(arguments);\n                }\n\n                const data = {\n                    view: view,\n                    page_type: pagetype.name\n                };\n\n                PageTypeComponent._CmsViewPromises(data).done(function() {\n                    view._pagetype = true;\n\n                    const showContentPromise = view.showContent();\n                    showContentPromise &&\n                        showContentPromise.done(result => {\n                            const cctComponent = application.getComponent('CMS');\n                            cctComponent.addContents();\n\n                            const options: Partial<NavigationLoggerOptionalsOptions> = {};\n                            if (pagetype.name === 'ProductDetails.Full.View') {\n                                checkNavigationItem(options, result);\n                            } else if (pagetype.name === 'facet-browse') {\n                                checkNavigationSearchResults(options, result);\n                            }\n                            if (view.inModal) {\n                                options.displayedInModal = true;\n                            }\n                            loggers.endLast('Navigation', options);\n                            if (Configuration.get('cms.useCMS')) {\n                                CMS.trigger('app:page:rendered');\n                            }\n                        });\n                });\n            };\n\n            if (pagetype.routes) {\n                _.each(pagetype.routes, function(route: string) {\n                    if (route[0] === '/') {\n                        route = route.substr(1);\n                    }\n\n                    Router.route(route, callback);\n                });\n            } else {\n                Router[pagetype.name] = callback;\n\n                if (routes[pagetype.name]) {\n                    let route: string;\n\n                    while ((route = routes[pagetype.name].pop())) {\n                        if (route[0] === '/') {\n                            route = route.substr(1);\n                        }\n\n                        Router.route(route, pagetype.name);\n                    }\n                }\n            }\n\n            if (!types[pagetype.name]) {\n                types[pagetype.name] = {\n                    supportedLayoutIds: []\n                };\n            }\n\n            types[pagetype.name].registered = true;\n\n            if (pagetype.defaultTemplate) {\n                templates[pagetype.defaultTemplate.name] = {\n                    name: pagetype.defaultTemplate.displayName,\n                    thumbnail: pagetype.defaultTemplate.thumbnail\n                };\n\n                types[pagetype.name].defaultLayoutId = pagetype.defaultTemplate.name;\n                types[pagetype.name].supportedLayoutIds.push(pagetype.defaultTemplate.name);\n            }\n        }\n    });\n\n    return PageTypeComponent;\n};\n"]}