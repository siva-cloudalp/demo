{"version":3,"sources":["Notifications.Profile.View.ts"],"names":[],"mappings":"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","file":"Notifications.Profile.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Notifications.Profile.View\"/>\n// @module Notifications.Profile.View\n\nimport * as notifications_profile_tpl from 'notifications_profile.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { GlobalViewsMessageView } from '../../GlobalViews/JavaScript/GlobalViews.Message.View';\nimport { ProfileModel } from '../../Profile/JavaScript/Profile.Model';\n\nimport Session = require('../../../Commons/Session/JavaScript/Session');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class Notifications.Profile.View @extends Backbone.View\nconst NotificationsProfileView: any = BackboneView.extend({\n    template: notifications_profile_tpl,\n\n    initialize: function() {},\n\n    render: function() {\n        this.model = ProfileModel.getInstance();\n\n        if (Session.get('email_change_verification', false)) {\n            this.message = {\n                text:\n                    SC.SESSION.email_change_verification === 'true'\n                        ? `${Utils.translate(\n                              'Your email has been changed successfully to <strong>'\n                          ) + this.model.get('email')}</strong>`\n                        : SC.SESSION.email_change_verification,\n                type: SC.SESSION.email_change_verification === 'true' ? 'success' : 'error'\n            };\n            delete SC.SESSION.email_change_verification;\n        } else if (SC.ENVIRONMENT.email_verification_error) {\n            this.message = {\n                text: Utils.translate(\n                    'The validation process has failed. Please login into your account and click on the validation link again.'\n                ),\n                type: 'error'\n            };\n            delete SC.ENVIRONMENT.email_verification_error;\n        } else if (SC.ENVIRONMENT.password_reset_invalid_error) {\n            this.message = {\n                text: Utils.translate(\n                    'Your reset password link is invalid. Request a new one using the Forgot Password link.'\n                ),\n                type: 'error'\n            };\n            delete SC.ENVIRONMENT.password_reset_invalid_error;\n        } else if (SC.ENVIRONMENT.password_reset_expired_error) {\n            this.message = {\n                text: Utils.translate(\n                    'Your reset password link has expired. Request a new one using the Forgot Password link.'\n                ),\n                type: 'error'\n            };\n            delete SC.ENVIRONMENT.password_reset_expired_error;\n        } else if (SC.ENVIRONMENT.reset_password_confirmation_email) {\n            this.message = {\n                text: Utils.translate(\n                    'Please check your email and get instructions on how to reset your password.'\n                ),\n                type: 'success'\n            };\n            delete SC.ENVIRONMENT.reset_password_confirmation_email;\n        } else if (SC.ENVIRONMENT.updated_password_confirmation) {\n            this.message = {\n                text: Utils.translate('Your password has been reset.'),\n                type: 'success'\n            };\n            delete SC.ENVIRONMENT.updated_password_confirmation;\n        }\n\n        this._render();\n    },\n\n    // @property {ChildViews} childViews\n    childViews: {\n        'ProfileChanges.Notifications': function() {\n            if (this.message) {\n                return new GlobalViewsMessageView({\n                    message: this.message.text,\n                    type: this.message.type,\n                    closable: true\n                });\n            }\n        }\n    },\n\n    // @method getContext @return Notifications.Order.View.Context\n    getContext: function() {\n        // @class Notifications.Order.View.Context\n        return {};\n    }\n});\n\nexport = NotificationsProfileView;\n"]}