{"version":3,"sources":["Loggers.Appender.Dummy.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;IAMF;QAGI;YACI,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC/C,CAAC;QAED,oCAAK,GAAL;YACI,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,mCAAI,GAAJ,UAAK,IAAI;YACL,OAAO,CAAC,IAAI,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC;QAED,oCAAK,GAAL,UAAM,IAAI;YACN,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAC;QACxD,CAAC;QAED,oCAAK,GAAL,UAAM,MAAc;YAChB,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,QAAQ,GAAG,MAAM,CAAC,CAAC;YAC/D,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;QACjD,CAAC;QAED,kCAAG,GAAH,UAAI,YAAY,EAAE,QAAQ;YACtB,IAAM,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;YACtD,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,MAAM,GAAG,YAAY,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;QAC1F,CAAC;QAEM,gCAAW,GAAlB;YACI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE;gBAChC,oBAAoB,CAAC,QAAQ,GAAG,IAAI,oBAAoB,EAAE,CAAC;aAC9D;YAED,OAAO,oBAAoB,CAAC,QAAQ,CAAC;QACzC,CAAC;QACL,2BAAC;IAAD,CApCA,AAoCC,IAAA;IApCY,oDAAoB","file":"Loggers.Appender.Dummy.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Loggers.Appender.Dummy\"/>\n\nimport { LoggersAppender } from './Loggers.Appender';\n\nexport class LoggersAppenderDummy implements LoggersAppender {\n    private static instance: LoggersAppenderDummy;\n\n    protected constructor() {\n        console.log('LoggersAppenderDummy - Init');\n    }\n\n    ready(): boolean {\n        return true;\n    }\n\n    info(data) {\n        console.info('LoggersAppenderDummy - Info', data);\n    }\n\n    error(data) {\n        console.error('LoggersAppenderDummy - Error', data);\n    }\n\n    start(action: string) {\n        console.log('LoggersAppenderDummy - Start', 'start ' + action);\n        return { start: Date.now(), action: action };\n    }\n\n    end(startOptions, _options) {\n        const time = (Date.now() - startOptions.start) / 1000;\n        console.log('LoggersAppenderDummy - End', 'end ' + startOptions.action + ': ' + time);\n    }\n\n    static getInstance() {\n        if (!LoggersAppenderDummy.instance) {\n            LoggersAppenderDummy.instance = new LoggersAppenderDummy();\n        }\n\n        return LoggersAppenderDummy.instance;\n    }\n}\n"]}