{"version":3,"sources":["Location.Model.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAOF,IAAM,aAAa,GAAQ,mBAAmB,CAAC,MAAM,CAAC;QAClD,6BAA6B;QAC7B,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC,8BAA8B,CAAC;QAE7D,KAAK,EAAE,SAAS,KAAK,CAAC,QAAQ;YAC1B,IAAM,oBAAoB,GAAG,QAAQ,CAAC,oBAAoB,CAAC;YAE3D,IAAI,oBAAoB,IAAI,oBAAoB,KAAK,GAAG,EAAE;gBACtD,IAAM,wBAAwB,GAAG,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBAEhE,IAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC/B,IAAM,IAAI,GAAG;oBACT,QAAQ;oBACR,QAAQ;oBACR,SAAS;oBACT,WAAW;oBACX,UAAU;oBACV,QAAQ;oBACR,UAAU;iBACb,CAAC;gBAEF,IAAI,WAAW,CAAC,MAAM,EAAE,KAAK,wBAAwB,CAAC,MAAM,EAAE,EAAE;oBAC5D,QAAQ,CAAC,aAAa,GAAG,OAAO,CAAC;iBACpC;qBAAM,IAAI,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,wBAAwB,CAAC,MAAM,EAAE,EAAE;oBACvE,QAAQ,CAAC,aAAa,GAAG,UAAU,CAAC;iBACvC;qBAAM;oBACH,QAAQ,CAAC,aAAa,GAAG,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC,CAAC;iBACpE;aACJ;YAED,OAAO,QAAQ,CAAC;QACpB,CAAC;QAED,QAAQ,EAAE,SAAS,QAAQ;YACvB,OAAO,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACxC,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,aAAa,CAAC","file":"Location.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Location.Model\"/>\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport BackboneCachedModel = require('../../../Commons/BackboneExtras/JavaScript/Backbone.CachedModel');\n\nconst LocationModel: any = BackboneCachedModel.extend({\n    // @property {String} urlRoot\n    urlRoot: Utils.getAbsoluteUrl('services/Location.Service.ss'),\n\n    parse: function parse(response) {\n        const nextPickupCutOffTime = response.nextpickupcutofftime;\n\n        if (nextPickupCutOffTime && nextPickupCutOffTime !== ' ') {\n            const nextPickupCutOffTimeDate = new Date(nextPickupCutOffTime);\n\n            const currentDate = new Date();\n            const days = [\n                'sunday',\n                'monday',\n                'tuesday',\n                'wednesday',\n                'thursday',\n                'friday',\n                'saturday'\n            ];\n\n            if (currentDate.getDay() === nextPickupCutOffTimeDate.getDay()) {\n                response.nextpickupday = 'today';\n            } else if (currentDate.getDay() + 1 === nextPickupCutOffTimeDate.getDay()) {\n                response.nextpickupday = 'tomorrow';\n            } else {\n                response.nextpickupday = days[nextPickupCutOffTimeDate.getDay()];\n            }\n        }\n\n        return response;\n    },\n\n    toString: function toString() {\n        return this.get('internalid') || '';\n    }\n});\n\nexport = LocationModel;\n"]}