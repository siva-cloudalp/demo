{"version":3,"sources":["Profile.EmailPreferences.View.ts"],"names":[],"mappings":"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","file":"Profile.EmailPreferences.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Profile.EmailPreferences.View\"/>\n\nimport * as _ from 'underscore';\nimport * as profile_emailpreferences_tpl from 'profile_emailpreferences.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { ProfileModel } from './Profile.Model';\n\nimport { GlobalViewsMessageView } from '../../GlobalViews/JavaScript/GlobalViews.Message.View';\n\nimport BackboneFormView = require('../../Backbone.FormView/JavaScript/Backbone.FormView');\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\n// @class Profile.EmailPreferences.View @extends Backbone.View\nconst ProfileEmailPreferencesView: any = BackboneView.extend({\n    template: profile_emailpreferences_tpl,\n    title: Utils.translate('Email Preferences'),\n    page_header: Utils.translate('Email Preferences'),\n    attributes: {\n        id: 'EmailPreferences',\n        class: 'ProfileEmailPreferencesView'\n    },\n    events: {\n        'submit form': 'save',\n        'change form:has([data-action=\"reset\"])': 'toggleReset',\n        'click [data-action=\"reset\"]': 'resetForm',\n        'keyup form:has([data-action=\"reset\"])': 'toggleReset',\n        'change [data-type=\"emailsubscribe-checkbox\"]': 'emailSubscribeChange'\n    },\n\n    initialize: function() {\n        this.model = ProfileModel.getInstance();\n        BackboneFormView.add(this);\n        this.useLayoutError = true;\n        this.model.on('save', this.showSuccess, this);\n    },\n\n    // @method getSelectedMenu\n    getSelectedMenu: function() {\n        return 'emailpreferences';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return {\n            text: this.title,\n            href: 'emailpreferences'\n        };\n    },\n\n    showSuccess: function() {\n        if (this.$savingForm) {\n            const global_view_message = new GlobalViewsMessageView({\n                message: Utils.translate('Email Preferences successfully saved!'),\n                type: 'success',\n                closable: true\n            });\n\n            this.showContent().then(function() {\n                this.$('[data-type=\"alert-placeholder\"]').append(\n                    global_view_message.render().$el.html()\n                );\n            });\n        }\n    },\n\n    save: function(e) {\n        e.preventDefault();\n\n        const $target = jQuery(e.target);\n        const props = (<any>$target).serializeObject();\n        const subscriptions_by_id = {};\n        const campaignsubscriptions = this.model.get('campaignsubscriptions');\n\n        // generate an object with the subscriptions and it's corresponding value\n        _.each(props, function(val, key: any) {\n            if (~key.indexOf('subscription-')) {\n                subscriptions_by_id[key.replace('subscription-', '')] = val === 'T';\n            }\n        });\n\n        _.each(campaignsubscriptions, function(subscription: any) {\n            subscription.subscribed = subscriptions_by_id[subscription.internalid];\n        });\n\n        const fixed_props = {\n            campaignsubscriptions: campaignsubscriptions,\n            emailsubscribe: props.emailsubscribe === 'T'\n        };\n\n        this.saveForm(e, this.model, fixed_props);\n    },\n\n    resetForm: function(e) {\n        e.preventDefault();\n        this.showContent();\n    },\n\n    // if the user doesn't want email notifications we disable all the campaign's checkboxes\n    emailSubscribeChange: function(e) {\n        const disabled = jQuery(e.target).prop('checked');\n\n        this.$('[data-type=\"subscription-checkbox\"]').prop('disabled', !disabled);\n    },\n\n    // @method getContext @return Profile.EmailPreferences.View.Context\n    getContext: function() {\n        const campaign_subscriptions = this.model.get('campaignsubscriptions') || [];\n\n        // @class Profile.EmailPreferences.View.Context\n        return {\n            // @property {String} pageHeader\n            pageHeader: this.page_header,\n            // @property {Array} subscriptions\n            subscriptions: campaign_subscriptions,\n            // @property {Boolean} isEmailSuscribe\n            isEmailSuscribe: this.model.get('emailsubscribe') === 'T',\n            // @property {Boolean} campaignSubscriptions\n            campaignSubscriptions: !!(\n                Configuration.get('siteSettings.campaignsubscriptions') &&\n                campaign_subscriptions.length\n            ),\n            // @property {Boolean} showBackToAccount\n            showBackToAccount: Configuration.get('siteSettings.sitetype') === 'STANDARD'\n        };\n    }\n});\n\nexport = ProfileEmailPreferencesView;\n"]}