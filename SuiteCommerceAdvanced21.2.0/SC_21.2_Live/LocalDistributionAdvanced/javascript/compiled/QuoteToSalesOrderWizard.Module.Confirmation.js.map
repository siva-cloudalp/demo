{"version":3,"sources":["QuoteToSalesOrderWizard.Module.Confirmation.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAYF,OAAS,oCAAgB,CAAC,MAAM,CAAC;QAC7B,gCAAgC;QAChC,QAAQ,EAAE,kDAAkD;QAE5D,uIAAuI;QACvI,iBAAiB;QACjB,OAAO,EAAE;YACL,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC5E,6FAA6F;YAC7F,IAAM,OAAO,GAAG,KAAK,CAAC,cAAc,CAAO,QAAQ,CAAC,OAAQ,CAAC,QAAQ,EAAE;gBACnE,YAAY,EAAE,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC;aAC/C,CAAC,CAAC;YAEH,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE;gBAC/B,OAAO,EAAE,KAAK;aACjB,CAAC,CAAC;QACP,CAAC;QAED,qBAAqB;QACrB,oDAAoD;QACpD,UAAU,EAAE;YACR,iDAAiD;YACjD,OAAO;gBACH,2CAA2C;gBAC3C,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,6BAA6B;gBAC7B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC;gBACzD,iCAAiC;gBACjC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACzD,iCAAiC;gBACjC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,UAAU;gBACjE,mCAAmC;gBACnC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK;oBACxD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK;oBAC/C,CAAC,CAAC,6BAAa,CAAC,GAAG,CAAC,oBAAoB,EAAE,EAAE,CAAC;gBACjD,mCAAmC;gBACnC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK;oBACxD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK;oBAC/C,CAAC,CAAC,6BAAa,CAAC,GAAG,CAAC,oBAAoB,EAAE,EAAE,CAAC;gBACjD,gCAAgC;gBAChC,UAAU,EAAE,6BAAa,CAAC,GAAG,CAAC,kBAAkB,EAAE,EAAE,CAAC;aACxD,CAAC;YACF,qDAAqD;QACzD,CAAC;KACJ,CAAC,CAAC","file":"QuoteToSalesOrderWizard.Module.Confirmation.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"QuoteToSalesOrderWizard.Module.Confirmation\"/>\n\nimport * as quote_to_salesorder_wizard_module_confirmation_tpl from 'quote_to_salesorder_wizard_module_confirmation.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { WizardStepModule } from '../../Wizard/JavaScript/Wizard.StepModule';\n\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\n// @class QuoteToSalesOrderWizard.Module.Confirmation @extends Wizard.Module\nexport = WizardStepModule.extend({\n    // @property {Function} template\n    template: quote_to_salesorder_wizard_module_confirmation_tpl,\n\n    // @method present Override default implementation so when the modules is being rendered we set the salesorderid parameter into the url\n    // @return {Void}\n    present: function() {\n        const confirmation = this.model.get('confirmation') || new Backbone.Model();\n        // store current order id in the hash so it is available even when the checkout process ends.\n        const newHash = Utils.addParamsToUrl((<any>Backbone.history).fragment, {\n            salesorderid: confirmation.get('internalid')\n        });\n\n        Backbone.history.navigate(newHash, {\n            trigger: false\n        });\n    },\n\n    // @method getContext\n    // @return {OrderWizard.Module.Confirmation.Context}\n    getContext: function() {\n        // @class OrderWizard.Module.Confirmation.Context\n        return {\n            // property {QuoteToSalesOrder.Model} model\n            model: this.model,\n            // @property {String} orderId\n            orderId: this.model.get('confirmation').get('internalid'),\n            // @property {String} orderNumber\n            orderNumber: this.model.get('confirmation').get('tranid'),\n            // @property {Boolen} hasSalesrep\n            hasSalesrep: !!this.model.get('quoteDetails').salesrep.internalid,\n            // @property {String} salesrepPhone\n            salesrepPhone: this.model.get('quoteDetails').salesrep.phone\n                ? this.model.get('quoteDetails').salesrep.phone\n                : Configuration.get('quote.defaultPhone', ''),\n            // @property {String} salesrepEmail\n            salesrepEmail: this.model.get('quoteDetails').salesrep.email\n                ? this.model.get('quoteDetails').salesrep.email\n                : Configuration.get('quote.defaultEmail', ''),\n            // @property {String} disclaimer\n            disclaimer: Configuration.get('quote.disclaimer', '')\n        };\n        // @class QuoteToSalesOrderWizard.Module.Confirmation\n    }\n});\n"]}