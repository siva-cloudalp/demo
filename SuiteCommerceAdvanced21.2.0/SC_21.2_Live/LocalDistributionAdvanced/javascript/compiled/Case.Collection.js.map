{"version":3,"sources":["Case.Collection.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;;;;;;;;;;;;;;IAwCF;QAAoC,kCAInC;QAWG,wBAAmB,MAAwB,EAAE,OAAe;YAAzC,uBAAA,EAAA,WAAwB;YAA3C,YACI,kBAAM,MAAM,EAAE,OAAO,CAAC,SAEzB;YAbM,SAAG,GAAG,cAAc,OAAA,KAAK,CAAC,cAAc,CAAC,kBAAkB,EAAE,IAAI,CAAC,EAA9C,CAA8C,CAAC;YAEnE,uBAAiB,GAAW,CAAC,CAAC;YAE9B,oBAAc,GAAW,CAAC,CAAC;YAE3B,WAAK,GAAqB,sBAAS,CAAC;YAMvC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;QACzB,CAAC;QAEM,6BAAI,GAAX,UACI,MAA2B,EAC3B,KAAW,EACX,OAA6B;YAHjC,iBAcC;YATG,OAAO,iBAAM,IAAI,YAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,MAAM,CAAC;gBAC7C,IAAI;oBACA,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE;wBAChB,KAAI,CAAC,QAAQ,GAAG,iBAAM,KAAK,YAAE,CAAC;qBACjC;iBACJ;gBAAC,OAAO,CAAC,EAAE;oBACR,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;iBAC9C;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,8BAAK,GAAZ,UAAa,MAAmB,EAAE,OAA8B;YAC5D,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;gBAC5D,IAAI,CAAC,QAAQ,GAAG,iBAAM,KAAK,WAAE,CAAC;aACjC;YACD,OAAO,iBAAM,KAAK,YAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACxC,CAAC;QAES,8BAAK,GAAf,UAAgB,QAAkC;YAC9C,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,iBAAiB,CAAC;YACpD,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;YAC9C,OAAO,QAAQ,CAAC,OAAO,CAAC;QAC5B,CAAC;QAEM,+BAAM,GAAb,UAAc,OAAmB;YAC7B,IAAM,MAAM,GACR,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;YAE9E,iBAAM,KAAK,YAAC;gBACR,IAAI,EAAE;oBACF,MAAM,EAAE,MAAM;oBACd,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK;oBACxB,KAAK,EAAE,OAAO,CAAC,KAAK;oBACpB,IAAI,EAAE,OAAO,CAAC,IAAI;iBACrB;gBACD,KAAK,EAAE,IAAI;gBACX,QAAQ,EAAE,OAAO,CAAC,QAAQ;aAC7B,CAAC,CAAC;QACP,CAAC;QACL,qBAAC;IAAD,CAhEA,AAgEC,CAhEmC,uBAAU,GAgE7C;IAhEY,wCAAc","file":"Case.Collection.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Case.Collection\"/>\n// @Typescript-full\n\nimport * as _ from 'underscore';\nimport { CaseModel } from './Case.Model';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport {\n    Collection,\n    CollectionEventsDefinition\n} from '../../../Commons/Core/JavaScript/Collection';\n\nimport { Case } from '../../../ServiceContract/SC/Case/Case';\nimport { PaginationResponse } from '../../../ServiceContract/SC/PaginationResponse';\n\nimport * as Backbone from '../../../Commons/Core/JavaScript/backbone/BackboneExtras';\n\ninterface CaseUpdate {\n    filter: {\n        filter: Function;\n        name: string;\n        selected: boolean;\n        value: string;\n    };\n    killerId: string;\n    order: number;\n    page: number;\n    range: {\n        from: number | undefined;\n        to: number | undefined;\n    };\n    sort: {\n        name: string;\n        selected: boolean;\n        value: string;\n    };\n}\n\nexport class CaseCollection extends Collection<\n    CaseModel,\n    PaginationResponse<Case>,\n    CollectionEventsDefinition<CaseCollection, PaginationResponse<Case>>\n> {\n    public url = (): string => Utils.getAbsoluteUrl('services/Case.ss', true);\n\n    public totalRecordsFound: number = 0;\n\n    public recordsPerPage: number = 0;\n\n    public model: typeof CaseModel = CaseModel;\n\n    public original: CaseCollection | null;\n\n    public constructor(models: CaseModel[] = [], options?: never) {\n        super(models, options);\n        this.original = null;\n    }\n\n    public sync(\n        method: Backbone.SyncMethod,\n        model: this,\n        options: Backbone.SyncOptions\n    ): JQuery.jqXHR<PaginationResponse<Case>> {\n        return super.sync(method, model, options).always(() => {\n            try {\n                if (!this.original) {\n                    this.original = super.clone();\n                }\n            } catch (e) {\n                console.error('Error cloning collection.');\n            }\n        });\n    }\n\n    public reset(models: CaseModel[], options?: Backbone.Silenceable): CaseModel[] {\n        if (!this.original && (_.isArray(models) && models.length > 0)) {\n            this.original = super.clone();\n        }\n        return super.reset(models, options);\n    }\n\n    protected parse(response: PaginationResponse<Case>): Case[] {\n        this.totalRecordsFound = response.totalRecordsFound;\n        this.recordsPerPage = response.recordsPerPage;\n        return response.records;\n    }\n\n    public update(options: CaseUpdate): void {\n        const filter: string | undefined =\n            options.filter && options.filter.value ? options.filter.value : undefined;\n\n        super.fetch({\n            data: {\n                filter: filter,\n                sort: options.sort.value,\n                order: options.order,\n                page: options.page\n            },\n            reset: true,\n            killerId: options.killerId\n        });\n    }\n}\n"]}