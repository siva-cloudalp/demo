{"version":3,"sources":["OrderHistory.List.View.ts"],"names":[],"mappings":"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","file":"OrderHistory.List.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"OrderHistory.List.View\"/>\n\nimport * as _ from 'underscore';\nimport * as order_history_list_tpl from 'order_history_list.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { ListHeaderView } from '../../../Commons/ListHeader/JavaScript/ListHeader.View';\nimport { GlobalViewsPaginationView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.Pagination.View';\nimport { GlobalViewsShowingCurrentView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.ShowingCurrent.View';\n\nimport OrderHistoryListTrackingNumberView = require('./OrderHistory.List.Tracking.Number.View');\nimport TransactionListView = require('../../../Commons/Transaction/JavaScript/Transaction.List.View');\nimport OrderHistoryCollection = require('./OrderHistory.Collection');\nimport RecordViewsActionableView = require('../../RecordViews/JavaScript/RecordViews.Actionable.View');\nimport Handlebars = require('../../../Commons/Utilities/JavaScript/Handlebars');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\n\n// @class OrderHistory.List.View view list of orders @extend Backbone.View\nconst OrderHistoryListView: any = TransactionListView.extend({\n    // @property {Function} template\n    template: order_history_list_tpl,\n    // @property {String} title\n    title: Utils.translate('Purchase History'),\n    // @property {String} className\n    className: 'OrderListView',\n    // @property {String} page_header\n    page_header: Utils.translate('Purchase History'),\n    // @property {Object} attributes\n    attributes: {\n        id: 'PurchaseHistory',\n        class: 'OrderListView'\n    },\n    // @property {Object} events\n    events: {\n        'click [data-action=\"navigate\"]': 'navigateToOrder'\n    },\n    // @method getSelectedMenu\n    getSelectedMenu: function() {\n        return 'purchases';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return {\n            text: this.title,\n            href: '/purchases'\n        };\n    },\n    // @method initialize\n    initialize: function(options) {\n        this.application = options.application;\n        if (Backbone.history.fragment.indexOf('open-purchases') === 0) {\n            this.collection = new OrderHistoryCollection([], {\n                filters: 'status:open'\n            });\n            this.activeTab = 'open';\n        } else if (Backbone.history.fragment.indexOf('instore-purchases') === 0) {\n            this.collection = new OrderHistoryCollection([], {\n                filters: 'origin:instore'\n            });\n            this.activeTab = 'instore';\n        } else {\n            this.collection = new OrderHistoryCollection();\n            this.activeTab = 'all';\n        }\n        this.isSCISIntegrationEnabled = Configuration.get(\n            'siteSettings.isSCISIntegrationEnabled',\n            false\n        );\n\n        const isoDate = Utils.dateToString(new Date());\n\n        this.rangeFilterOptions = {\n            fromMin: '1800-01-02',\n            fromMax: isoDate,\n            toMin: '1800-01-02',\n            toMax: isoDate\n        };\n\n        this.listenCollection();\n\n        // Manages sorting and filtering of the collection\n        this.listHeader = new ListHeaderView({\n            view: this,\n            application: this.application,\n            collection: this.collection,\n            sorts: this.sortOptions,\n            rangeFilter: 'date',\n            rangeFilterLabel: Utils.translate('From'),\n            hidePagination: true,\n            allowEmptyBoundaries: true\n        });\n        this.collection.on('reset', this.showContent, this);\n    },\n    // @method navigateToOrder\n    navigateToOrder: function(e) {\n        // ignore clicks on anchors and buttons\n        if (Utils.isTargetActionable(e)) {\n            return;\n        }\n\n        if (!jQuery(e.target).closest('[data-type=\"accordion\"]').length) {\n            const order_id = jQuery(e.target)\n                .closest('[data-id]')\n                .data('id');\n            const recordtype = jQuery(e.target)\n                .closest('[data-record-type]')\n                .data('record-type');\n            Backbone.history.navigate(`#purchases/view/${recordtype}/${order_id}`, {\n                trigger: true\n            });\n        }\n    },\n    // @method listenCollection\n    listenCollection: function() {\n        this.setLoading(true);\n\n        this.collection.on({\n            request: jQuery.proxy(this, 'setLoading', true),\n            reset: jQuery.proxy(this, 'setLoading', false)\n        });\n    },\n    // @method setLoading\n    setLoading: function(value) {\n        this.isLoading = value;\n    },\n    // @property {Array} sortOptions\n    // Array of default sort options\n    // sorts only apply on the current collection\n    // which might be a filtered version of the original\n    sortOptions: [\n        {\n            value: 'trandate,internalid',\n            name: Utils.translate('Sort By Date'),\n            selected: true\n        },\n        {\n            value: 'tranid',\n            name: Utils.translate('Sort By Number')\n        },\n        {\n            value: 'amount',\n            name: Utils.translate('Sort By Amount')\n        }\n    ],\n    // @property {Object} childViews\n    childViews: {\n        ListHeader: function() {\n            return this.listHeader;\n        },\n        'GlobalViews.Pagination': function() {\n            return new GlobalViewsPaginationView(\n                _.extend(\n                    {\n                        totalPages: Math.ceil(\n                            this.collection.totalRecordsFound / this.collection.recordsPerPage\n                        )\n                    },\n                    Configuration.defaultPaginationSettings\n                )\n            );\n        },\n        'GlobalViews.ShowCurrentPage': function() {\n            return new GlobalViewsShowingCurrentView({\n                items_per_page: this.collection.recordsPerPage,\n                total_items: this.collection.totalRecordsFound,\n                total_pages: Math.ceil(\n                    this.collection.totalRecordsFound / this.collection.recordsPerPage\n                )\n            });\n        },\n        'Order.History.Results': function() {\n            return this._resultsView;\n        }\n    },\n    _buildResultsView: function() {\n        const self = this;\n        let selectedColumns = [];\n\n        if (!Configuration.get().transactionListColumns.enableOrderHistory) {\n            selectedColumns.push({ label: 'Date', id: 'trandate', type: 'date' });\n            selectedColumns.push({\n                label: 'Amount',\n                name: 'amount',\n                id: 'amount_formatted',\n                type: 'currency'\n            });\n\n            if (self.isSCISIntegrationEnabled) {\n                selectedColumns.push({ label: 'Origin', id: 'origin' });\n            } else {\n                selectedColumns.push({ label: 'Status', id: 'status', type: 'status' });\n            }\n        } else {\n            selectedColumns = Configuration.get().transactionListColumns.orderHistory;\n        }\n\n        const records_collection = new Backbone.Collection(\n            this.collection.map(function(order) {\n                const model = new Backbone.Model({\n                    title: new Handlebars.SafeString(\n                        Utils.translate('<span class=\"tranid\">$(0)</span>', order.get('tranid'))\n                    ),\n                    touchpoint: 'customercenter',\n                    detailsURL: `/purchases/view/${order.get('recordtype')}/${order.get(\n                        'internalid'\n                    )}`,\n                    recordType: order.get('recordtype'),\n                    id: order.get('internalid'),\n                    internalid: order.get('internalid'),\n                    trackingNumbers: order.get('trackingnumbers'),\n                    columns: self._buildColumns(selectedColumns, order)\n                });\n                return model;\n            })\n        );\n\n        return new BackboneCollectionView({\n            childView: RecordViewsActionableView,\n            collection: records_collection,\n            viewsPerRow: 1,\n            childViewOptions: {\n                actionView: OrderHistoryListTrackingNumberView,\n                actionOptions: {\n                    showContentOnEmpty: true,\n                    contentClass: '',\n                    collapseElements: true\n                }\n            }\n        });\n    },\n\n    // @method getContext @return OrderHistory.List.View.Context\n    getContext: function() {\n        this._resultsView = this._buildResultsView();\n        let columns = [];\n        if (this._resultsView.collection.length > 0) {\n            columns = this._resultsView.collection.at(0).get('columns');\n        }\n        // @class OrderHistory.List.View.Context\n        return {\n            // @property {String} pageHeader\n            pageHeader: this.page_header,\n            // @property {Boolean} collectionLengthGreaterThan0\n            collectionLengthGreaterThan0: this.collection.length > 0,\n            // @property {Boolean} isLoading\n            isLoading: this.isLoading,\n            // @property {Boolean} showPagination\n            showPagination: !!(this.collection.totalRecordsFound && this.collection.recordsPerPage),\n            // @property {Boolean} showBackToAccount\n            showBackToAccount: Configuration.get('siteSettings.sitetype') === 'STANDARD',\n            // @property {Boolean} isSCISIntegrationEnabled\n            isSCISIntegrationEnabled: this.isSCISIntegrationEnabled,\n            // @property {Boolean} allIsActive\n            allIsActive: this.activeTab === 'all',\n            // @property {Boolean} openIsActive\n            openIsActive: this.activeTab === 'open',\n            // @property {Boolean} inStoreIsActive\n            inStoreIsActive: this.activeTab === 'instore',\n            // @property {Array<{}>} columns\n            columns: columns\n        };\n    }\n});\n\nexport = OrderHistoryListView;\n"]}