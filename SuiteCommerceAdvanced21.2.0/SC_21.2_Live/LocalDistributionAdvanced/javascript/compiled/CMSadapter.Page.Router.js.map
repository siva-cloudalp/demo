{"version":3,"sources":["CMSadapter.Page.Router.ts"],"names":[],"mappings":"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","file":"CMSadapter.Page.Router.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CMSadapter.Page.Router\"/>\n\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport CMSadapterLandingView = require('./CMSadapter.Landing.View');\n\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneModel = require('../../../Commons/BackboneExtras/JavaScript/Backbone.Model');\n\n// @module CMSadapter\n\n// @class CMSadapter.Page.Router\nfunction CMSadapterPageRouter(application, collection) {\n    this.application = application;\n    this.allPages = collection;\n    this.enhancedPages = new Backbone.Collection();\n    this.initRouter();\n}\n\nCMSadapterPageRouter.prototype._addEnhancedPage = function _addEnhancedPage(page) {\n    const url = page.get('urlPath') || page.get('url');\n    const enhancedPage = this.enhancedPages.find(function(page) {\n        return page.get('urlPath') === url || page.get('url') === url;\n    });\n\n    if (enhancedPage) {\n        this.enhancedPages.remove(enhancedPage);\n    }\n\n    this.enhancedPages.add(page);\n};\n\nCMSadapterPageRouter.prototype.initRouter = function initRouter() {\n    const pageType = this.application.getComponent('PageType');\n    const self = this;\n\n    this.allPages.each(function(page) {\n        if (page.get('type') === 1) {\n            const type = page.get('pageTypeName') || 'cms-landing-page';\n            const url = page.get('urlPath') || page.get('url');\n\n            pageType._addPage(page, type, url);\n        } else {\n            self._addEnhancedPage(page);\n        }\n    });\n\n    pageType.registerPageType({\n        name: 'cms-landing-page',\n        view: CMSadapterLandingView,\n        defaultTemplate: {\n            name: 'cms_landing_page.tpl',\n            displayName: 'Landing Pages Default',\n            thumbnail: Utils.getThemeAbsoluteUrlOfNonManagedResources(\n                'img/default-layout-cms-landing.png'\n            )\n        }\n    });\n};\n\n// @method getPageForFragment\n// A handcrafted method for getting the page model given a url.\nCMSadapterPageRouter.prototype.getPageForFragment = function getPageForFragment() {\n    const pageType = this.application.getComponent('PageType');\n    let fragment = Backbone.history.fragment || '/';\n\n    fragment = fragment.split('?')[0] || '/'; // remove options\n\n    let page = pageType._getPage(fragment);\n\n    if (!page) {\n        page = this.enhancedPages.find(function(page) {\n            return page.get('urlPath') === fragment || page.get('url') === fragment;\n        });\n    }\n\n    return page;\n};\n\nCMSadapterPageRouter.prototype.addLandingRoute = function addLandingRoute(page, _originalUrl) {\n    const pageType = this.application.getComponent('PageType');\n    const type = page.pageTypeName || 'cms-landing-page';\n    const url = page.urlPath || page.url;\n    const model = new BackboneModel(page);\n\n    if (model.get('type') === 1) {\n        pageType._addPage(model, type, url);\n\n        pageType.registerPageType({\n            name: type || 'cms-landing-page',\n            routes: [url, url + '?*options']\n        });\n    } else {\n        this._addEnhancedPage(model);\n    }\n};\n\nexport = CMSadapterPageRouter;\n"]}