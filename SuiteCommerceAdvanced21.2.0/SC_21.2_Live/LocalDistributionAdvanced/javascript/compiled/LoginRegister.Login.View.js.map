{"version":3,"sources":["LoginRegister.Login.View.ts"],"names":[],"mappings":"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","file":"LoginRegister.Login.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"LoginRegister.Login.View\"/>\n\nimport * as _ from 'underscore';\nimport '../../../Commons/jQueryExtras/JavaScript/jQuery.serializeObject';\nimport * as login_tpl from 'login_register_login.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { ResponseError } from '../../../Commons/Backbone.FormView/JavaScript/Backbone.FormView.Type';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { GlobalViewsMessageView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.Message.View';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\n\nimport Tracker = require('../../../Commons/Tracker/JavaScript/Tracker');\nimport Session = require('../../../Commons/Session/JavaScript/Session');\nimport AccountLoginModel = require('../../Account/JavaScript/Account.Login.Model');\nimport LoginRegisterUtils = require('./LoginRegister.Utils');\nimport LiveOrderModel = require('../../../Commons/LiveOrder/JavaScript/LiveOrder.Model');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport BackboneFormView = require('../../../Commons/Backbone.FormView/JavaScript/Backbone.FormView');\n\n// @class LoginRegister.Login.View Implements the login experience UI @extend BackboneView\nconst LoginRegisterLoginView: any = BackboneView.extend({\n    template: login_tpl,\n\n    attributes: {\n        id: 'login'\n    },\n\n    title: Utils.translate('Log in'),\n\n    events: {\n        'submit form': 'submitForm',\n        'click [data-action=\"register-now\"]': 'skipLoginCloseModal',\n        'click [data-action=\"forgot-password\"]': 'forgotPasswordHandler'\n    },\n\n    bindings: {\n        '[name=\"email\"]': 'email',\n        '[name=\"password\"]': 'password'\n    },\n\n    initialize: function(options) {\n        this.application = options.application;\n        this.parentView = options.parentView;\n        this.model = new AccountLoginModel();\n        this.timedout =\n            options.timedout || Utils.getParameterByName(window.location.href, 'timeout') === 'T';\n        // on save we redirect the user out of the login page as we know there hasn't been an error\n        this.model.on('save', _.bind(this.redirect, this));\n        BackboneFormView.add(this);\n    },\n\n    transformResponseText: (response: ResponseError): void => {\n        response.responseText = _.unescape(response.responseText);\n    },\n\n    submitForm: function(e, model, props) {\n        e.preventDefault();\n\n        const self = this;\n        const data = (<any>jQuery(e.target).closest('form')).serializeObject();\n\n        return this.cancelableTrigger('before:LoginRegister.login', data).then(function() {\n            self.saveForm(e, model, props);\n        });\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        const promise = jQuery.Deferred();\n        const profileModel = ProfileModel.getInstance();\n\n        if (profileModel.get('isLoggedIn') === 'T' && profileModel.get('isGuest') === 'F') {\n            Backbone.history.navigate('', { trigger: true });\n\n            promise.reject();\n        } else {\n            promise.resolve();\n        }\n\n        return promise;\n    },\n\n    // @method forgotPasswordHandler handles the 'forgot-password' redirection\n    forgotPasswordHandler: function() {\n        LoginRegisterUtils.skipLoginCloseModal();\n        Backbone.history.navigate('#forgot-password', { trigger: true });\n    },\n\n    childViews: {\n        GlobalMessageSessionTimeout: function() {\n            return new GlobalViewsMessageView({\n                message: Utils.translate('Your session has timed out. Please log in again.'),\n                type: 'error',\n                closable: false\n            });\n        }\n    },\n\n    // @method skipLoginCloseModal\n    skipLoginCloseModal: LoginRegisterUtils.skipLoginCloseModal,\n\n    render: function(...args) {\n        const { checkoutApp } = this.application.getConfig();\n        BackboneView.prototype.render.apply(this, args);\n        if (this.$containerModal && checkoutApp.skipLogin) {\n            this.$('[data-action=\"forgot-password\"]').attr('data-toggle', 'show-in-modal');\n        }\n    },\n\n    // @method trackEvent tracks the 'sing-in' event using the global Tracker\n    // instance @param {Function} callback\n    trackEvent: function(callback: Function) {\n        Tracker.getInstance().trackLogin({\n            category: 'Checkout - User Interaction',\n            action: 'Login',\n            callback: callback\n        });\n    },\n\n    // @method redirect Redirects the user after successful login taking into account redirect parameters (origin and origin_hash).\n    // @param {Object} response The HTTP response data object, response of the login service.\n    redirect: function(context, response) {\n        const url_options = Utils.parseUrlOptions(window.location.search);\n        const { touchpoints } = response;\n        const isPasswordReset = url_options.passwdret;\n        const self = this;\n\n        // Track Login Event\n        this.trackEvent(function() {\n            if (\n                !isPasswordReset &&\n                (url_options.is === 'checkout' || url_options.origin === 'checkout')\n            ) {\n                self.refreshApplication(response);\n            } else {\n                // if we know from which touchpoint the user is coming from\n                if (url_options.origin && touchpoints[url_options.origin]) {\n                    // we save the URL to that touchpoint\n                    let url = touchpoints[url_options.origin];\n                    // if there is an specific hash\n                    if (url_options.origin_hash) {\n                        // we add it to the URL as a fragment\n                        url = Utils.addParamsToUrl(url, { fragment: url_options.origin_hash });\n                    }\n\n                    window.location.href = url;\n                } else {\n                    // We've got to disable passwordProtectedSite feature if customer registration is disabled.\n                    if (\n                        Configuration.getRegistrationType() !== 'disabled' &&\n                        SC.ENVIRONMENT.siteSettings.siteloginrequired === 'T'\n                    ) {\n                        window.location.href = touchpoints.home;\n                    } else {\n                        // otherwise we need to take it to the customer center\n                        window.location.href = touchpoints.customercenter;            \n                    }\n                }\n            }\n        });\n    },\n\n    // @method refreshApplication login and checkout are unified in the same ssp so after user logs in we want to refresh the UI without having to refresh the entire\n    // Remember that the new user can be associated to other language/currency so we must refresh all the application.\n    // The easy and safer way would be refreshing the page.\n    // @param {LoginRegister.LoginResponseData} the JSON object containing the login service response data\n    refreshApplication: function(response) {\n        const current_language = Session.get('language.locale');\n        const { application } = this;\n\n        // @class LoginRegister.LoginResponseData\n        // @property language {locale:String} language\n        if (\n            response.language &&\n            response.language.locale &&\n            current_language !== response.language.locale\n        ) {\n            window.location.href = response.touchpoints.checkout;\n        } else {\n            const profile_model = ProfileModel.getInstance();\n\n            // @property {String} user serialized JSON user information\n            response.user && profile_model.set(response.user);\n            // @property {String} cart serialized JSON cart information\n            response.cart && LiveOrderModel.getInstance().set(response.cart);\n            // @property {String} address serialized JSON addresses information\n            response.address && profile_model.get('addresses').reset(response.address);\n            // @property {String} credit-card serialized JSON creditcards information\n            response.paymentmethod &&\n                profile_model.get('paymentmethods').reset(response.paymentmethod);\n            // @property {core:String} currency\n            response.currency &&\n                response.currency.code &&\n                Session.set('currency', response.currency);\n            // @property {Object} touchpoints\n            if (response.touchpoints) {\n                application.setConfig('siteSettings.touchpoints', response.touchpoints);\n            }\n\n            application.setConfig('currentTouchpoint', 'checkout');\n            Backbone.history.navigate('', { trigger: true });\n        }\n        // @class LoginRegister.Login.View\n    },\n\n    // @method getContext @return {LoginRegister.Login.View.Context}\n    getContext: function() {\n        const url_options = Utils.parseUrlOptions(window.location.search);\n        const { checkoutApp } = this.application.getConfig();\n        // @class LoginRegister.Login.View.Context\n        return {\n            // @property {Boolean} isRedirect\n            isRedirect: !!(url_options.is !== 'checkout' && url_options.origin !== 'checkout'),\n            // @property {Boolean} hasAutoFocus\n            hasAutoFocus: url_options.is !== 'register' && Utils.isDesktopDevice(),\n            // @property {Boolean} isUserSessionTimedOut\n            isUserSessionTimedOut: url_options.timedout === 'T' || this.timedout,\n            // @property {Boolean} isSkipLogin\n            isSkipLogin: !!(this.$containerModal && checkoutApp.skipLogin)\n        };\n    }\n    // @class LoginRegister.Login.View\n});\n\nexport = LoginRegisterLoginView;\n"]}