{"version":3,"sources":["Logger.Appender.Sensor.DataContractVersion.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;IAMF,IAAM,kBAAkB,GAAG,mDAAmD,CAAC;IAC/E,SAAS,0BAA0B,CAAC,MAAc;QAC9C,OAAO,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAI,MAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;IACvD,CAAC;IACD,SAAgB,mBAAmB;QAC/B,IAAM,aAAa,GAAW,yBAAW,CAAC,KAAK,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC;QACvF,IAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAEtD,IAAI,KAAK,EAAE;YACP,IAAI,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9E,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;gBACV,YAAY,IAAI,0BAA0B,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACxD;iBAAM;gBACH,YAAY,IAAI,IAAI,CAAC;aACxB;YACD,OAAO,EAAE,mBAAmB,EAAE,QAAQ,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC;SAC9D;QACD,MAAM,IAAI,KAAK,CACX,yHACsE,CACzE,CAAC;IACN,CAAC;IAjBD,kDAiBC","file":"Logger.Appender.Sensor.DataContractVersion.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Logger.Appender.Sensor.DataContractVersion\"/>\n\nimport { Environment } from '../../../Commons/Core/JavaScript/Environment';\n\nconst bundleVersionRegex = /^(\\d{4})\\.([1|2])\\.([0-9]{1,2})(\\.([0-9]{1,2}))?$/;\nfunction normilizeToTwoDigitsNumber(number: string) {\n    return number.length === 1 ? `0${number}` : number;\n}\nexport function dataContractVersion(): { dataContractVersion: number } {\n    const bundleVersion: string = Environment.getSC().ENVIRONMENT.RELEASE_METADATA.version;\n    const match = bundleVersion.match(bundleVersionRegex);\n\n    if (match) {\n        let dataContract = match[1] + match[2] + normilizeToTwoDigitsNumber(match[3]);\n        if (match[5]) {\n            dataContract += normilizeToTwoDigitsNumber(match[5]);\n        } else {\n            dataContract += '00';\n        }\n        return { dataContractVersion: parseInt(dataContract, 10) };\n    }\n    throw new Error(\n        `Bundle version must match with pattern: \n            [\\\\d{4}].[1 or 2].[number 0-99][optional .][optional number 0-99]`\n    );\n}\n"]}