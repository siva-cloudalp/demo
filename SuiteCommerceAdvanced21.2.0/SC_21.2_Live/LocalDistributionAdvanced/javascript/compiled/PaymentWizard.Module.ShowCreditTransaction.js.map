{"version":3,"sources":["PaymentWizard.Module.ShowCreditTransaction.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAYF,0EAA0E;IAC1E,IAAM,wCAAwC,GAAQ,oCAAgB,CAAC,MAAM,CAAC;QAC1E,QAAQ,EAAE,iDAAiD;QAE3D,SAAS,EAAE,4CAA4C;QAEvD,UAAU,EAAE,UAAS,OAAO;YACxB,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,gBAAgB,CAAC;YACjD,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,qBAAqB,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;QAC9E,CAAC;QAED,MAAM,EAAE;YACJ,IAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAE3D,IAAI,YAAY,EAAE;gBACd,IAAI,CAAC,UAAU,GAAG,IAAI,2BAA2B,CAC7C,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE;oBAC/E,KAAK,EAAE,IAAI;iBACd,CAAC,CACL,CAAC;aACL;iBAAM;gBACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB,CACtD,IAAI,CAAC,gBAAgB,KAAK,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAC9D,CAAC;aACL;YAED,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;QACL,CAAC;QAED,kFAAkF;QAClF,UAAU,EAAE;YACR,IAAM,WAAW,GACb,IAAI,CAAC,gBAAgB,KAAK,QAAQ;gBAC9B,CAAC,CAAC,yBAAyB;gBAC3B,CAAC,CAAC,0BAA0B,CAAC;YACrC,IAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC;gBACzD,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC;gBACpD,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzC,IAAM,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAS,WAAW;gBACjE,sEAAsE;gBACtE,OAAO;oBACH,0BAA0B;oBAC1B,IAAI,EAAE,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC;oBAC7B,4BAA4B;oBAC5B,MAAM,EAAE,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC;oBAC9D,qCAAqC;oBACrC,eAAe,EAAE,WAAW,CAAC,GAAG,CAAC,kBAAkB,CAAC;oBACpD,wBAAwB;oBACxB,EAAE,EAAE,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC;iBACpC,CAAC;YACN,CAAC,CAAC,CAAC;YAEH,4DAA4D;YAC5D,OAAO;gBACH,8CAA8C;gBAC9C,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,KAAK,QAAQ;gBAC3D,oCAAoC;gBACpC,cAAc,EAAE,eAAe;gBAC/B,+FAA+F;gBAC/F,YAAY,EAAE,oBAAoB;gBAClC,0CAA0C;gBAC1C,mBAAmB,EAAE,KAAK,CAAC,cAAc,EAAE,IAAI,KAAK,CAAC,eAAe,EAAE;aACzE,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,wCAAwC,CAAC","file":"PaymentWizard.Module.ShowCreditTransaction.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PaymentWizard.Module.ShowCreditTransaction\"/>\n\nimport * as _ from 'underscore';\nimport * as payment_wizard_show_credit_transaction_module_tpl from 'payment_wizard_show_credit_transaction_module.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { WizardStepModule } from '../../Wizard/JavaScript/Wizard.StepModule';\n\nimport CreditTransactionCollection = require('./PaymentWizard.CreditTransaction.Collection');\n\n// @class PaymentWizard.Module.ShowCreditTransaction @extend Wizard.Module\nconst PaymentWizardModuleShowCreditTransaction: any = WizardStepModule.extend({\n    template: payment_wizard_show_credit_transaction_module_tpl,\n\n    className: 'PaymentWizard.Module.ShowCreditTransaction',\n\n    initialize: function(options) {\n        this.transaction_type = options.transaction_type;\n        this.wizard = options.wizard;\n        this.wizard.model.on('change:confirmation', jQuery.proxy(this, 'render'));\n    },\n\n    render: function() {\n        const confirmation = this.wizard.model.get('confirmation');\n\n        if (confirmation) {\n            this.collection = new CreditTransactionCollection(\n                _.where(confirmation[this.transaction_type === 'credit' ? 'credits' : 'deposits'], {\n                    apply: true\n                })\n            );\n        } else {\n            this.collection = this.wizard.model.getAppliedTransactions(\n                this.transaction_type === 'credit' ? 'credits' : 'deposits'\n            );\n        }\n\n        if (this.collection.length) {\n            this._render();\n        }\n    },\n\n    // @method getContext @return {PaymentWizard.Module.ShowCreditTransaction.Context}\n    getContext: function() {\n        const total_field =\n            this.transaction_type === 'credit'\n                ? 'credits_total_formatted'\n                : 'deposits_total_formatted';\n        const total_formatted = this.wizard.model.get('confirmation')\n            ? this.wizard.model.get('confirmation')[total_field]\n            : this.wizard.model.get(total_field);\n        const transactions_to_show = this.collection.map(function(transaction) {\n            // @class PaymentWizard.Module.ShowCreditTransaction.TransactionObject\n            return {\n                // @property {String} type\n                type: transaction.get('type'),\n                // @property {String} number\n                number: transaction.get('tranid') || transaction.get('refnum'),\n                // @property {String} amountFormatted\n                amountFormatted: transaction.get('amount_formatted'),\n                // @property {String} id\n                id: transaction.get('internalid')\n            };\n        });\n\n        // @class PaymentWizard.Module.ShowCreditTransaction.Context\n        return {\n            // @property {Boolean} isTransactionTypeCredit\n            isTransactionTypeCredit: this.transaction_type === 'credit',\n            // @property {String} totalFormatted\n            totalFormatted: total_formatted,\n            // @property {Array<PaymentWizard.Module.ShowCreditTransaction.TransactionObject>} transactions\n            transactions: transactions_to_show,\n            // @property {Boolean} showOpenedAccordion\n            showOpenedAccordion: Utils.isTabletDevice() || Utils.isDesktopDevice()\n        };\n    }\n});\n\nexport = PaymentWizardModuleShowCreditTransaction;\n"]}