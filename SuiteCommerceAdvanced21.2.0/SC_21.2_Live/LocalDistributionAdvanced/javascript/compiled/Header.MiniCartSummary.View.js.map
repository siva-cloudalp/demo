{"version":3,"sources":["Header.MiniCartSummary.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAcF,OAAS,YAAY,CAAC,MAAM,CAAC;QACzB,QAAQ,EAAE,4BAA4B;QAEtC,UAAU,EAAE;YACR,IAAM,IAAI,GAAG,IAAI,CAAC;YAElB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;gBAC3B,IAAM,IAAI,GAAG,cAAc,CAAC,WAAW,EAAE,CAAC;gBAC1C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,CACvB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,EACnC,UAAS,IAAI,EAAE,QAAgB;oBAC3B,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC9C,CAAC,EACD,CAAC,CACJ,CAAC;gBAEF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC;gBAC7C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,MAAM,EAAE,CAAC;gBAEd,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;oBACd,IAAI,CAAC,MAAM,EAAE,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE;gBACvB,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC,QAAQ,CAAC,yCAAyC,CAAC,CAAC;YAChF,CAAC,CAAC,CAAC;QACP,CAAC;QAED,4DAA4D;QAC5D,UAAU,EAAE;YACR,6CAA6C;YAC7C,OAAO;gBACH,iCAAiC;gBACjC,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,qCAAqC;gBACrC,cAAc,EAAE,IAAI,CAAC,cAAc;gBACnC,gCAAgC;gBAChC,SAAS,EAAE,IAAI,CAAC,SAAS;aAC5B,CAAC;QACN,CAAC;KACJ,CAAC,CAAC","file":"Header.MiniCartSummary.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Header.MiniCartSummary.View\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as header_mini_cart_summary_tpl from 'header_mini_cart_summary.tpl';\n\nimport LiveOrderModel = require('../../../Commons/LiveOrder/JavaScript/LiveOrder.Model');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @module Header\n\n// @class Header.MiniCartSummary.View @extends Backbone.View\nexport = BackboneView.extend({\n    template: header_mini_cart_summary_tpl,\n\n    initialize: function() {\n        const self = this;\n\n        this.itemsInCart = 0;\n        this.showPluraLabel = true;\n        this.isLoading = true;\n\n        LiveOrderModel.loadCart().done(function() {\n            const cart = LiveOrderModel.getInstance();\n            self.itemsInCart = _.reduce(\n                cart.get('lines').pluck('quantity'),\n                function(memo, quantity: string) {\n                    return memo + (parseFloat(quantity) || 1);\n                },\n                0\n            );\n\n            self.showPluraLabel = self.itemsInCart !== 1;\n            self.isLoading = false;\n            self.render();\n\n            cart.on('change', function() {\n                self.render();\n            });\n        });\n\n        this.on('afterViewRender', function() {\n            self.isLoading && Utils.ellipsis('.header-mini-cart-summary-cart-ellipsis');\n        });\n    },\n\n    // @method getContext @return {Header.MiniCart.View.Context}\n    getContext: function() {\n        // @class Header.MiniCartSummary.View.Context\n        return {\n            // @property {Number} itemsInCart\n            itemsInCart: this.itemsInCart,\n            // @property {Boolean} showPluraLabel\n            showPluraLabel: this.showPluraLabel,\n            // @property {Boolean} isLoading\n            isLoading: this.isLoading\n        };\n    }\n});\n"]}