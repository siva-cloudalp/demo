{"version":3,"sources":["RequestQuoteWizard.Module.Items.Line.Quantity.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAUF,OAAS,YAAY,CAAC,MAAM,CAAC;QACzB,gCAAgC;QAChC,QAAQ,EAAE,kDAAkD;QAE5D,4BAA4B;QAC5B,MAAM,EAAE;YACJ,4BAA4B,EAAE,aAAa;YAC3C,6BAA6B,EAAE,aAAa;YAC5C,qCAAqC,EAAE,gBAAgB;YACvD,uCAAuC,EAAE,eAAe;SAC3D;QAED,2EAA2E;QAC3E,gDAAgD;QAChD,0BAA0B;QAC1B,iBAAiB;QACjB,aAAa,EAAE,UAAS,CAAC;YACrB,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,EAAE;gBAClB,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;aACvB;QACL,CAAC;QAED,gEAAgE;QAChE,0BAA0B;QAC1B,iBAAiB;QACjB,WAAW,EAAE,UAAS,CAAC;YACnB,CAAC,CAAC,cAAc,EAAE,CAAC;YAEnB,IAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;YAEnF,IAAI,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAExD,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;QAED,4DAA4D;QAC5D,0BAA0B;QAC1B,iBAAiB;QACjB,WAAW,EAAE,UAAS,CAAC;YACnB,CAAC,CAAC,cAAc,EAAE,CAAC;YAEnB,IAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;YAEnF,IAAI,WAAW,EAAE;gBACb,IAAI,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBAExD,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB;QACL,CAAC;QAED,2FAA2F;QAC3F,0BAA0B;QAC1B,iBAAiB;QACjB,cAAc,EAAE,CAAC,CAAC,QAAQ,CAAC;YACvB,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC,EAAE,GAAG,CAAC;QAEP,sEAAsE;QACtE,iBAAiB;QACjB,WAAW,EAAE;YACT,IAAM,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,GAAG,EAAE,CAAC;YAClE,IAAI,YAAY,CAAC;YACjB,IAAI,QAAQ,GAAG,QAAQ,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;YAE1C,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;gBAC5C,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC;oBAC3D,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;wBAClE,IAAI,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAE1D,qEAAqE;gBACrE,sFAAsF;gBACtF,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;gBACvD,uDAAuD;gBACvD,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACrC,kFAAkF;gBAClF,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,EAAE,YAAY,CAAC,eAAe,CAAC,CAAC;gBAC/D,qEAAqE;gBAErE,sBAAsB;gBACtB,QAAQ,GAAG,CAAC;oBACR,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC;oBACxD,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;aAChE;iBAAM;gBACH,IAAI,CAAC,MAAM,EAAE,CAAC;aACjB;QACL,CAAC;QAED,qBAAqB;QACrB,uEAAuE;QACvE,UAAU,EAAE;YACR,IAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;YAE9E,oEAAoE;YACpE,OAAO;gBACH,2CAA2C;gBAC3C,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,4BAA4B;gBAC5B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC;gBACpC,4CAA4C;gBAC5C,qBAAqB,EACjB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,gBAAgB,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC;gBACtF,0CAA0C;gBAC1C,mBAAmB,EAAE,gBAAgB,GAAG,CAAC;gBACzC,sCAAsC;gBACtC,eAAe,EAAE,gBAAgB;aACpC,CAAC;YACF,4DAA4D;QAChE,CAAC;KACJ,CAAC,CAAC","file":"RequestQuoteWizard.Module.Items.Line.Quantity.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"RequestQuoteWizard.Module.Items.Line.Quantity.View\"/>\n\nimport * as _ from 'underscore';\nimport * as requestquote_wizard_module_items_line_quantity_tpl from 'requestquote_wizard_module_items_line_quantity.tpl';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class RequestQuoteWizard.Module.Items.Line.Quantity.View @extend Backbone.View\nexport = BackboneView.extend({\n    // @property {Function} template\n    template: requestquote_wizard_module_items_line_quantity_tpl,\n\n    // @property {Object} events\n    events: {\n        'click [data-action=\"plus\"]': 'addQuantity',\n        'click [data-action=\"minus\"]': 'subQuantity',\n        'change [data-type=\"quantity-input\"]': 'changeQuantity',\n        'keypress [data-type=\"quantity-input\"]': 'submitOnEnter'\n    },\n\n    // @method prevent redirect to the account overview on Submit the form when\n    // user presses enter in the quantity input text\n    // @param {jQuery.Event} e\n    // @return {Void}\n    submitOnEnter: function(e) {\n        if (e.keyCode === 13) {\n            e.preventDefault(e);\n        }\n    },\n\n    // @method addQuantity Add 1 the current to quantity-input field\n    // @param {jQuery.Event} e\n    // @return {Void}\n    addQuantity: function(e) {\n        e.preventDefault();\n\n        const newQuantity = parseInt(this.$('[data-type=\"quantity-input\"]').val(), 10) + 1;\n\n        this.$('[data-type=\"quantity-input\"]').val(newQuantity);\n\n        this.setQuantity();\n    },\n\n    // @method subQuantity Subtracts 1 from quantity-input field\n    // @param {jQuery.Event} e\n    // @return {Void}\n    subQuantity: function(e) {\n        e.preventDefault();\n\n        const newQuantity = parseInt(this.$('[data-type=\"quantity-input\"]').val(), 10) - 1;\n\n        if (newQuantity) {\n            this.$('[data-type=\"quantity-input\"]').val(newQuantity);\n\n            this.setQuantity();\n        }\n    },\n\n    // @method changeQuantity Debounce callings to setQuantity function to prevent losing focus\n    // @param {jQuery.Event} e\n    // @return {Void}\n    changeQuantity: _.debounce(function() {\n        this.setQuantity();\n    }, 500),\n\n    // @method setQuantity Updates the model quantity and the input field.\n    // @return {Void}\n    setQuantity: function() {\n        const str_quantity = this.$('[data-type=\"quantity-input\"]').val();\n        let line_pricing;\n        let quantity = parseInt(str_quantity, 10);\n\n        if (!_.isNaN(quantity) && _.isNumber(quantity)) {\n            quantity < this.model.get('item').get('_minimumQuantity', true) &&\n                ((quantity = this.model.get('item').get('_minimumQuantity', true)),\n                this.$('[data-type=\"quantity-input\"]').val(quantity));\n\n            // In order to properly render prices for items with quantity pricing\n            // 1) we set the quantity silent which avoids the re-render of the entire list of item\n            this.model.set('quantity', quantity, { silent: true });\n            // 2) with obtain the new pricing with the quantity set\n            line_pricing = this.model.getPrice();\n            // 3) We set the new rate_formatted which will trigger a change and so a re-render\n            this.model.set('rate_formatted', line_pricing.price_formatted);\n            // Please notice that the same is being done in the cart confirmation\n\n            // add attr disabled!!\n            quantity > 1\n                ? this.$('[data-action=\"minus\"]').removeAttr('disabled')\n                : this.$('[data-action=\"minus\"]').attr('disabled', true);\n        } else {\n            this.render();\n        }\n    },\n\n    // @method getContext\n    // @return {RequestQuoteWizard.Module.Items.Line.Quantity.View.Context}\n    getContext: function() {\n        const minimum_quantity = this.model.get('item').get('_minimumQuantity', true);\n\n        // @class RequestQuoteWizard.Module.Items.Line.Quantity.View.Context\n        return {\n            // @property {Transaction.Line.Model} model\n            model: this.model,\n            // @property {String} lineId\n            lineId: this.model.get('internalid'),\n            // @property {Boolean} isMinusButtonDisabled\n            isMinusButtonDisabled:\n                this.model.get('quantity') <= minimum_quantity || this.model.get('quantity') === 1,\n            // @property {Boolean} showMinimumQuantity\n            showMinimumQuantity: minimum_quantity > 1,\n            // @property {Integer} minimumQuantity\n            minimumQuantity: minimum_quantity\n        };\n        // @class RequestQuoteWizard.Module.Items.Line.Quantity.View\n    }\n});\n"]}