{"version":3,"sources":["SC.LayoutComponent.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAiBF,OAAS,SAAS,wBAAwB,CAAC,WAAgB;QACvD,IAAM,gBAAgB,GAAG,iBAAiB,CAAC,MAAM,CAAC;YAC9C,aAAa,EAAE,QAAQ;YAEvB,WAAW,EAAE,WAAW;YAExB,SAAS,EAAE,eAAe;YAE1B,YAAY,EAAE,eAAe;YAE7B,oBAAoB,EAAE,SAAS,oBAAoB;gBAC/C,OAAO,IAAI,CAAC;YAChB,CAAC;YAED,wBAAwB,EAAE,SAAS,wBAAwB;gBACvD,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,CAAC;YAED,8HAA8H;YAC9H,YAAY,EAAE,SAAS,YAAY,CAAC,SAAc,EAAE,gBAAqB;gBACrE,IAAM,SAAS,GAAG,EAAE,CAAC;gBACrB,IAAM,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAEnC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;gBAC1B,SAAS,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG;oBAC5B,oBAAoB,EAAE,gBAAgB;iBACzC,CAAC;gBAEF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;gBAE9C,OAAO,OAAO,CAAC;YACnB,CAAC;YAED,WAAW,EAAE,SAAS,WAAW,CAAC,IAAS,EAAE,OAAY;gBACrD,IAAI;oBACA,IAAI,IAAI,EAAE;wBACN,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;wBAExB,IAAI,OAAO,CAAC,WAAW,EAAE;4BACrB,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;yBAC1E;wBACD,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;qBAC7E;oBACD,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,0BAA0B,CAAC,CAAC;iBAClE;gBAAC,OAAO,KAAK,EAAE;oBACZ,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBAC1C;YACL,CAAC;SACJ,CAAC,CAAC;QAEH,OAAO,gBAAgB,CAAC;IAC5B,CAAC,CAAC;;AAEF,cAAc;AACd,6HAA6H;AAC7H,4HAA4H;AAC5H,kDAAkD;AAClD,0HAA0H;AAC1H,YAAY;AAEZ,iIAAiI;AACjI,uIAAuI;AACvI,YAAY","file":"SC.LayoutComponent.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/* jshint unused:false*/\n\n// @module ApplicationSkeleton\n/// <amd-module name=\"SC.LayoutComponent\"/>\n\nimport * as _ from 'underscore';\n\nimport * as jQuery from '../../Core/JavaScript/jQuery';\n\nimport SCVisualComponent = require('../../../Commons/SC/JavaScript/SC.VisualComponent');\n\n// @class LayoutComponent Allow users to manipulate views composition, bindings, events, template context, current view, exposing\n// interesting moments as events regarding navigation and application life cycle.\n// @extends SC.BaseComponent @public @extlayer\n\nexport = function LayoutComponentGenerator(application: any) {\n    const privateComponent = SCVisualComponent.extend({\n        componentName: 'Layout',\n\n        application: application,\n\n        ALL_VIEWS: 'Backbone.View',\n\n        DEFAULT_VIEW: 'Backbone.View',\n\n        _isViewFromComponent: function _isViewFromComponent() {\n            return true;\n        },\n\n        _getComponentIdentifiers: function _getComponentIdentifiers(): string[] {\n            return [this.ALL_VIEWS];\n        },\n\n        // @method addChildView Add a child view in the data-view 'data_view' passed as parameter in the default view of the component\n        addChildView: function addChildView(data_view: any, view_constructor: any) {\n            const generator = {};\n            const view_id = _.uniqueId('view');\n\n            generator[data_view] = {};\n            generator[data_view][view_id] = {\n                childViewConstructor: view_constructor\n            };\n\n            this.addChildViews(this.ALL_VIEWS, generator);\n\n            return view_id;\n        },\n\n        showContent: function showContent(view: any, options: any) {\n            try {\n                if (view) {\n                    options = options || {};\n\n                    if (options.showInModal) {\n                        return this.application.getLayout().showInModal(view, options.options);\n                    }\n                    return this.application.getLayout().showContent(view, options.dontScroll);\n                }\n                this._reportError('INVALID_PARAM', 'Missing \"view\" parameter');\n            } catch (error) {\n                return jQuery.Deferred().reject(error);\n            }\n        }\n    });\n\n    return privateComponent;\n};\n\n// @class View\n// A view is a visual unit which responsibility is to show a model instance in the DOM, event binding, view composition, etc.\n// IN SuiteCommerce, Views are implemented with [Backbonejs Backbone.View](http://backbonejs.org/#View). *View* here is just\n// a name to hide implementation specific details.\n// The applicaiotn's layout have a *currentView* that implements a main feature and usually correspond to a stateless url.\n// @extlayer\n\n// @class Backbone.View SuiteCommerce BackboneViews implement a View so if your extension implements a Backbone.View you can pass\n// such an instance to, for example, @?method setCurrentView @extends View. See [Backbonejs Backbone.View](http://backbonejs.org/#View)\n// @extlayer\n"]}