{"version":3,"sources":["CMSadapter.Impl.Core.v3.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IASF,IAAM,mBAAmB,GAAG,UAAS,WAAW,EAAE,GAAG;QACjD,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;IACpD,CAAC,CAAC;IACF,mBAAmB,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;IAE5E,mBAAmB,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI;QAC9C,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAClC,CAAC,CAAC;IAEF,mBAAmB,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY;QAC9D,oEAAoE;QACpE,IAAM,IAAI,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,UAAS,OAAO;YACtC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAS,OAAO;YAC5C,IAAM,MAAM,GAAQ,EAAE,CAAC;YAEvB,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YAC3D,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;YACtC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;YAE5B,IAAI,sDAAyB,EAAE;iBAC1B,KAAK,EAAE;iBACP,IAAI,CAAC,UAAA,UAAU;gBACZ,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC;YAChC,CAAC,CAAC;iBACD,IAAI,CAAC;gBACF,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;gBACpB,OAAO,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;YAClE,CAAC,CAAC;iBACD,MAAM,CAAC;gBACJ,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,mBAAmB,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,eAAe;QACpE,OAAO;YACH,iBAAiB,EAAE,IAAI;YACvB,iBAAiB,EAAE,IAAI;YACvB,qBAAqB,EAAE,6BAAa,CAAC,GAAG,CAAC,wBAAwB,EAAE,KAAK,CAAC;YACzE,QAAQ,EAAE;gBACN,cAAc;gBACd,YAAY;gBACZ,oBAAoB;gBACpB,cAAc;gBACd,WAAW;gBACX,gBAAgB;gBAChB,wBAAwB;gBACxB,0BAA0B;gBAC1B,wBAAwB;gBACxB,kBAAkB;gBAClB,uBAAuB;aAC1B;YACD,oBAAoB,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,CAAC;YAC5D,aAAa,EACT,EAAE;gBACF,EAAE,CAAC,WAAW;gBACd,EAAE,CAAC,WAAW,CAAC,eAAe;gBAC9B,EAAE,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM;SAC5C,CAAC;IACN,CAAC,CAAC;IAEF,OAAS,mBAAmB,CAAC","file":"CMSadapter.Impl.Core.v3.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CMSadapter.Impl.Core.v3\"/>\n\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { WebSiteConfigurationModel } from '../../WebSiteConfiguration/JavaScript/WebSiteConfiguration.Model';\n\nimport CMSadapterImplCore = require('./CMSadapter.Impl.Core');\n\nconst CMSadapterImplCore3 = function(application, CMS) {\n    CMSadapterImplCore.call(this, application, CMS);\n};\nCMSadapterImplCore3.prototype = Object.create(CMSadapterImplCore.prototype);\n\nCMSadapterImplCore3.prototype.init = function init() {\n    this.CMS.trigger('app:ready');\n};\n\nCMSadapterImplCore3.prototype.listenForCMS = function listenForCMS() {\n    // CMS listeners - CMS tells us to do something, could fire anytime.\n    const self = this;\n\n    self.CMS.on('config:get', function(promise) {\n        promise.resolve(self.getSetupOptions());\n    });\n\n    self.CMS.on('admin:config:get', function(promise) {\n        const config: any = {};\n\n        const pageType = self.application.getComponent('PageType');\n        config.page = pageType.getPageTypes();\n        pageType._updatePageTypes();\n\n        new WebSiteConfigurationModel()\n            .fetch()\n            .done(smtDomains => {\n                config.domains = smtDomains;\n            })\n            .fail(() => {\n                config.domains = [];\n                console.error('Could not get smt configured website domains');\n            })\n            .always(() => {\n                promise.resolve(config);\n            });\n    });\n};\n\nCMSadapterImplCore3.prototype.getSetupOptions = function getSetupOptions() {\n    return {\n        dontSpamConfigGet: true,\n        useSoftNavigation: true,\n        esc_to_login_disabled: Configuration.get('cms.escToLoginDisabled', false),\n        features: [\n            'landingPages',\n            'categories',\n            'customContentTypes',\n            'deCategories',\n            'pageTypes',\n            'layoutSelector',\n            'customerSegmentPreview',\n            'themeCustomizerSkinSaver',\n            'pageTypeLayoutSelector',\n            'cmsMultiLanguage',\n            'cmsMultiLanguagePages'\n        ],\n        app_content_override: ['html', 'image', 'text', 'merchzone'],\n        currentLocale:\n            SC &&\n            SC.ENVIRONMENT &&\n            SC.ENVIRONMENT.currentLanguage &&\n            SC.ENVIRONMENT.currentLanguage.locale\n    };\n};\n\nexport = CMSadapterImplCore3;\n"]}