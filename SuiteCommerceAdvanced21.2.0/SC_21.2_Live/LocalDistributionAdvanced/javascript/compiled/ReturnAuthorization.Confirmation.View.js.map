{"version":3,"sources":["ReturnAuthorization.Confirmation.View.ts"],"names":[],"mappings":"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","file":"ReturnAuthorization.Confirmation.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ReturnAuthorization.Confirmation.View\"/>\n// @module ReturnAuthorization.Confirmation.View\n\nimport * as return_authorization_confirmation_tpl from 'return_authorization_confirmation.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { AjaxRequestsKiller } from '../../../Commons/AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\n\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport { TransactionLineViewsCellNavigableView } from '../../../Commons/Transaction.Line.Views/JavaScript/Transaction.Line.Views.Cell.Navigable.View';\nimport ReturnAuthorizationModel = require('./ReturnAuthorization.Model');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class ReturnAuthorization.Confirmation.View @extend Backone.View\nexport type ReturnAuthorizationConfirmationView = any;\nexport const ReturnAuthorizationConfirmationView: any = BackboneView.extend({\n    template: return_authorization_confirmation_tpl,\n\n    title: Utils.translate('Request Return'),\n\n    page_header: Utils.translate('Confirmation'),\n\n    page_title: Utils.translate('Request Return'),\n\n    attributes: {\n        class: 'ReturnAuthorizationConfirmation'\n    },\n\n    initialize: function(options) {\n        this.application = options.application;\n        this.model = new ReturnAuthorizationModel({\n            internalid: options.routerArguments[1]\n        });\n    },\n    beforeShowContent: function beforeShowContent() {\n        return this.model.fetch({\n            data: {\n                internalid: this.options.routerArguments[1],\n                recordtype: this.options.routerArguments[0]\n            },\n            killerId: AjaxRequestsKiller.getKillerId()\n        });\n    },\n    childViews: {\n        'Items.Collection': function() {\n            return new BackboneCollectionView({\n                childView: TransactionLineViewsCellNavigableView,\n                collection: this.model.get('lines'),\n                viewsPerRow: 1,\n                childViewOptions: {\n                    detail1Title: Utils.translate('Qty:'),\n                    detail1: 'quantity',\n\n                    detail2Title: Utils.translate('Amount:'),\n                    detail2: 'amount_formatted',\n\n                    detail3: 'reason',\n\n                    ignorePriceVisibility: true\n                }\n            });\n        }\n    },\n\n    // @method getSelectedMenu\n    getSelectedMenu: function() {\n        return 'returns';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return {\n            text: this.title,\n            href: '/returns'\n        };\n    },\n\n    // @meth getContext @return ReturnAuthorization.Confirmation.View.Context\n    getContext: function() {\n        // @class ReturnAuthorization.Confirmation.View.Context\n        return {\n            // @property {ReturnAuthorization.Model} model\n            model: this.model,\n            // @property {String} pageTitle\n            pageTitle: this.page_title,\n            // @property {String} pageHeader\n            pageHeader: this.page_header,\n            // @property {String} internalId\n            internalId: this.model.get('internalid'),\n            // @property {String} modelTranId\n            modelTranId: this.model.get('createdform') ? this.model.get('createdform').name : '',\n            // @property {String} totalFormatted\n            totalFormatted: this.model.get('summary').total_formatted,\n            // @property {Number} linesLength\n            linesLength: this.model.get('lines').length,\n            // @property {Boolean} showComments\n            showComments: !!this.model.get('memo'),\n            // @property {Boolean} isElementCollapsed\n            isElementCollapsed: Configuration.get('sca.collapseElements')\n        };\n    }\n});\n"]}