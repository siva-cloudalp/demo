{"version":3,"sources":["CustomerPayment.Details.View.ts"],"names":[],"mappings":"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","file":"CustomerPayment.Details.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CustomerPayment.Details.View\"/>\n// @module CustomerPayment\n\nimport * as _ from 'underscore';\nimport * as customer_payment_details_tpl from 'customer_payment_details.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { RecordViewsView } from '../../RecordViews/JavaScript/RecordViews.View';\nimport { AjaxRequestsKiller } from '../../../Commons/AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\n\nimport GlobalViewsFormatPaymentMethodView = require('../../../Commons/GlobalViews/JavaScript/GlobalViews.FormatPaymentMethod.View');\nimport CustomerPaymentModel = require('./CustomerPayment.Model');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\n\nconst CustomerPaymentDetailsView: any = BackboneView.extend({\n    template: customer_payment_details_tpl,\n\n    title: Utils.translate('Payment Details'),\n\n    page_header: Utils.translate('Payment Details'),\n\n    attributes: {\n        id: 'PaymentDetail',\n        class: 'PaymentDetails'\n    },\n\n    initialize: function(options) {\n        const internalid = options.routerArguments[0];\n\n        this.model = new CustomerPaymentModel({ internalid: internalid });\n        this.model.on('change', this.showContent, this);\n\n        this.application = options.application;\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        return this.model.fetch({\n            killerId: AjaxRequestsKiller.getKillerId()\n        });\n    },\n\n    // @method getSelectedMenu\n    getSelectedMenu: function() {\n        return 'transactionhistory';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return [\n            {\n                text: Utils.translate('Transaction History'),\n                href: '/transactionhistory'\n            },\n            {\n                text: Utils.translate('Payment #$(0)', this.model.get('tranid')),\n                href: `/transactionhistory/customerpayment/${this.model.get('internalid')}`\n            }\n        ];\n    },\n\n    render: function() {\n        this.payment_method =\n            this.model.get('paymentmethods') &&\n            this.model.get('paymentmethods').findWhere({ primary: true });\n\n        BackboneView.prototype.render.apply(this, arguments);\n    },\n\n    childViews: {\n        'Invoices.Collection': function() {\n            const records_collection = new Backbone.Collection(\n                _.map(this.model.get('invoices'), function(invoice: any) {\n                    const model = new Backbone.Model({\n                        touchpoint: 'customercenter',\n                        title: invoice.refnum\n                            ? Utils.translate('Invoice #$(0)', invoice.refnum)\n                            : Utils.translate('Journal'),\n                        detailsURL: invoice.refnum ? `/invoices/${invoice.internalid}` : '',\n\n                        isNavigable: !!invoice.refnum,\n\n                        id: invoice.id,\n                        internalid: invoice.id,\n\n                        columns: [\n                            {\n                                label: Utils.translate('Date:'),\n                                type: 'date',\n                                name: 'date',\n                                value: invoice.applydate\n                            },\n                            {\n                                label: Utils.translate('Disc:'),\n                                type: 'discount',\n                                name: 'discount',\n                                value: invoice.disc_formatted\n                            },\n                            {\n                                label: Utils.translate('Amount:'),\n                                type: 'currency',\n                                name: 'amount',\n                                value: invoice.amount_formatted\n                            }\n                        ]\n                    });\n\n                    return model;\n                })\n            );\n\n            return new BackboneCollectionView({\n                childView: RecordViewsView,\n                collection: records_collection,\n                viewsPerRow: 1,\n                childViewOptions: {\n                    layoutColumns: 4\n                }\n            });\n        },\n        PaymentMethod: function() {\n            return new GlobalViewsFormatPaymentMethodView({ model: this.payment_method });\n        }\n    },\n\n    // @method getContext @return CustomerPayment.Details.View.Context\n    getContext: function() {\n        // @class CustomerPayment.Details.View.Context\n        return {\n            // @property {String} tranId\n            tranId: this.model.get('tranid'),\n            // @property {String} paymentFormatted\n            paymentFormatted: this.model.get('payment_formatted'),\n            // @property {String} tranDate\n            tranDate: this.model.get('trandate'),\n            // @property {String} status\n            status: this.model.get('status').internalid,\n            // @property {String} memo\n            memo: this.model.get('memo'),\n            // @property {Boolean} collapseElements\n            collapseElements: Configuration.get('sca.collapseElements'),\n            // @property {Boolean} showInvoices\n            showInvoices: !!(this.model.get('invoices') && this.model.get('invoices').length),\n            // @property {Boolean} showPaymentMethod\n            showPaymentMethod: !!(this.payment_method && this.payment_method.get('type')),\n            // @property {Boolean} showMemo\n            showMemo: !!this.model.get('memo'),\n            // @property {String} downloadPDFURL\n            downloadPDFURL: Utils.getDownloadPdfUrl({\n                asset: 'customer-payment-details',\n                id: this.model.get('internalid')\n            }),\n            // @property {Boolean} showOpenedAccordion\n            showOpenedAccordion: Utils.isTabletDevice() || Utils.isDesktopDevice(),\n            // @property {Boolean} showPaymentEventFail\n            showPaymentEventFail: this.model.get('paymenteventholdreason') === 'FORWARD_REQUESTED',\n            // @property {String} redirectUrl\n            redirectUrl: this.model.get('redirecturl')\n        };\n    }\n});\n\nexport = CustomerPaymentDetailsView;\n"]}