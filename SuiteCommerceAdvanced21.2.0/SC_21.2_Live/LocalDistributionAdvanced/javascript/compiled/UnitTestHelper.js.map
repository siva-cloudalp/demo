{"version":3,"sources":["UnitTestHelper.ts"],"names":[],"mappings":"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","file":"UnitTestHelper.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"UnitTestHelper\"/>\n/// <reference path=\"../../Utilities/JavaScript/GlobalDeclarations.d.ts\" />\n/// <reference path=\"../../Utilities/JavaScript/jasmine.d.ts\" />\n\nimport * as _ from 'underscore';\nimport '../../Utilities/JavaScript/jasmine2-typechecking-matchers';\nimport '../../BackboneExtras/JavaScript/Backbone.View';\nimport '../../BackboneExtras/JavaScript/Backbone.View.render';\nimport '../../BackboneExtras/JavaScript/Backbone.Model';\nimport '../../BackboneExtras/JavaScript/Backbone.View.Plugins';\nimport '../../Utilities/JavaScript/Utils';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nimport Backbone = require('../../Utilities/JavaScript/backbone.custom');\n\nexport = (function() {\n    /*\n\n    @class UnitTestHelper\n    Contains utilities for testing backbone models/validation, views/selectors/values, backbone routes amd general testing utilities\n    \n    In general you imput some data and some expectations in the form of strings/functions - this tool will automatically, for example, create the view with given model data,\n    render the view and assert over the output.\n\n    @constructor @param {UnitTestHelperConfig} options\n\n    @class UnitTestHelperConfig\n    @property {String} applicationName name of the application to be used. Default: testApplication + random number between 0 and 100\n    @property {SC.Configuration} applicationConfiguration - configuration of the application, default value: {}\n    @property {Boolean | Function} startApplication - option to start the application, if the option is a function, this function is used as callback when the application is started\n    @property {Array<Class>} mountModules List of modules that should be loaded when application start.\n    @property {Object} environment defines the object SC.ENVIRONMENT used for the tests, default value {}\n\n    */\n    const TestHelper = function(options) {\n        const self = this;\n        this.is_started = false;\n        this.layout;\n        this.initialization_completed = false;\n        this.options = options || {};\n\n        SC.ENVIRONMENT = SC.ENVIRONMENT || {};\n\n        if (SC.ENVIRONMENT) {\n            SC.ENVIRONMENT = _.extend(\n                SC.ENVIRONMENT,\n                this.options.environment ? this.options.environment : {}\n            );\n        }\n\n        SC.ENVIRONMENT.siteSettings = SC.ENVIRONMENT.siteSettings || {}; // add the baseUrl value if not defined, this value is used by Utils.js\n\n        SC.ENVIRONMENT.baseUrl = SC.ENVIRONMENT.baseUrl\n            ? SC.ENVIRONMENT.baseUrl\n            : '/test/app/{{file}}'; // create the application - if no name, using a random value.\n\n        this.application = SC.Application(\n            this.options.applicationName || 'testApplication' + '-' + _.random(0, 100)\n        );\n\n        _(Configuration).extend(this.options.applicationConfiguration || {});\n        if (!Configuration.siteSettings) {\n            Configuration.siteSettings = SC.ENVIRONMENT.siteSettings;\n        }\n\n        this.application.Configuration = Configuration;\n        if (this.options.startApplication) {\n            const modules =\n                this.options.mountModules && _.isArray(this.options.mountModules)\n                    ? this.options.mountModules\n                    : [];\n            jQuery(\n                this.application.start(modules, function() {\n                    self.application.getLayout().template =\n                        self.application.getLayout().template ||\n                        _.template('<div id=\"layout\"><div id=\"content\"></div></div>');\n\n                    self.application.getLayout().appendToDom(); // callback function.\n\n                    if (_.isFunction(self.options.startApplication)) {\n                        self.options.startApplication(self.application);\n                    }\n                    self.is_started = true;\n                })\n            );\n        } else {\n            this.is_started = true;\n        }\n    };\n\n    /*\n    @method testViewSelectors Example\n\n        var view = new MyView(...);\n\n        var data = [{name:'foo', age:1},...];\n        var asserts = [\n                {actual: function (view){ return view.getSome() == 2.3; }, operation:'toBeTruthy'}\n            ,   {selector:'input[name=\"name\"]', attribute:'val', operation:'toBe', result: data.fullname}\n            ,   {selector:'input[name=\"company\"]', attribute:'val', operation:'toBe', result: data.company}\n        ];\n\n        view.render();\n        helper.testViewSelectors(view, asserts, data, test_description);\n\n\n    @param {Backbone.View} view\n    @param {Array<UnitTestHelperViewAssert>} asserts\n\n    */\n    TestHelper.prototype.testViewSelectors = function(view, asserts, data, test_description) {\n        describe(test_description || 'Model ID: ' + (data.internalid || data.id), function() {\n            _.each(asserts, function(assert: any) {\n                if (!assert) {\n                    return;\n                }\n\n                let attribute;\n                let actual;\n\n                if (_.isFunction(assert.actual)) {\n                    actual = assert.actual(view);\n                } else {\n                    attribute = assert.attribute || 'text';\n\n                    if (attribute === 'checked') {\n                        actual = view.$(assert.selector).prop('checked');\n                    } else if (attribute === 'disabled') {\n                        actual = view.$(assert.selector).prop('disabled');\n                    } else if (attribute === 'href') {\n                        actual = view.$(assert.selector).attr('href');\n                    } else if (attribute.indexOf('data-') === 0) {\n                        actual = view.$(assert.selector).attr(attribute);\n                    } else {\n                        actual = view.$(assert.selector)[attribute]();\n                    }\n                }\n\n                let result = _.isFunction(assert.result) ? assert.result(data) : assert.result;\n                const is_not = assert.operation && assert.operation.indexOf('not.') === 0;\n                const operation =\n                    (assert.operation && assert.operation.replace('not.', '')) || 'toBe';\n                let description = _.isFunction(assert.actual)\n                    ? assert.actual.toString()\n                    : \"$('\" + assert.selector + \"').\" + attribute + '()';\n\n                description += is_not ? ' not ' : ' ';\n                description += operation + ' ';\n                description += _.isFunction(assert.result)\n                    ? assert.result.toString()\n                    : assert.hasOwnProperty('result')\n                    ? assert.result === ''\n                        ? \"''\"\n                        : assert.result\n                    : '';\n\n                if (attribute === 'text' || attribute === 'html') {\n                    result = result ? result + '' : result;\n                }\n\n                it(description, function() {\n                    const exp = is_not ? expect(actual).not : expect(actual);\n                    exp[operation](result);\n                });\n            });\n        });\n    }; /*\n    @method testRoute\n    @param {Backbone.Router} Router\n    @param {navigateTo:String, instanceName:String, instanceOf:Class} test\n    @param {Object} router_options\n    */\n\n    TestHelper.prototype.testRoute = function(Router, test, router_options) {\n        new Router(this.application, router_options || {});\n        const self = this;\n\n        try {\n            Backbone.history.start();\n        } catch (e) {\n            console.warn('Backbone.history has already been started');\n        }\n\n        it(\n            'when navigate to ' + test.navigateTo + ' the currentView must be ' + test.instanceName,\n            function() {\n                Backbone.history.navigate(test.navigateTo, { trigger: true });\n                expect(self.application.getLayout().currentView instanceof test.instanceOf).toBe(\n                    true\n                );\n            }\n        );\n\n        Backbone.history.stop();\n    }; /*\n    @method testModelValidations test that given Backbone.Model validation works as expected\n    @param {Backbone.Model} model\n    @param test @param {String} test_description\n    */\n\n    TestHelper.prototype.testModelValidations = function(model, test, test_description) {\n        const { result } = test;\n\n        describe(\n            test_description ||\n                'Model ID: ' +\n                    (model.internalid || model.id || model.get('id') || model.get('internalid')),\n            function() {\n                model = _.extend(model, Backbone.Validation.mixin);\n\n                _.each(result.invalidFields, function(invalidField) {\n                    it('the field ' + invalidField + ' should be invalid', function() {\n                        expect(model.isValid(invalidField)).toBe(false);\n                    });\n                });\n\n                _.each(result.validFields, function(validField) {\n                    it('the field ' + validField + ' should be valid', function() {\n                        expect(model.isValid(validField)).toBe(true);\n                    });\n                });\n            }\n        );\n    }; /*\n    @method testContext test given Backbone.View context object\n    @param {Bakcbone.View} view  @param {Object<String,Object>} tests\n    */\n\n    TestHelper.prototype.testContext = function(view, tests) {\n        it('view.getContext to be defined', function() {\n            expect(view.getContext).toBeDefined();\n        });\n\n        it('view.getContext to be a Function', function() {\n            (<any>expect(view.getContext)).toBeA(Function);\n        });\n\n        it('view.getContext() to be an Object', function() {\n            (<any>expect(view.getContext())).toBeAnObject();\n        });\n\n        const context = view.getContext ? view.getContext() : {};\n\n        _.each(context, function(value, key) {\n            const type = tests[key];\n\n            if (!type) {\n                return it('missing test for ' + key, function() {\n                    expect(undefined).toBeDefined();\n                });\n            }\n\n            if (_.isFunction(type)) {\n                if (type === Boolean) {\n                    it(key + ' is a Boolean', function() {\n                        expect(_.isBoolean(value)).toBe(true);\n                    });\n                } else if (type === String) {\n                    it(key + ' is a String', function() {\n                        expect(_.isString(value)).toBe(true);\n                    });\n                } else if (type === Number) {\n                    it(key + ' is a Number', function() {\n                        expect(_.isNumber(value)).toBe(true);\n                    });\n                } else {\n                    it(key + ' type is correct', function() {\n                        expect(value instanceof type).toBe(true);\n                    });\n                }\n            } else {\n                it(key + ' is type of ' + type, function() {\n                    expect(typeof value === type.toLowerCase()).toBe(true);\n                });\n            }\n\n            delete tests[key];\n        });\n\n        _.each(tests, function(value, key) {\n            it('context.' + key + ' is undefined', function() {\n                expect(undefined).toBeDefined();\n            });\n        });\n    };\n\n    return TestHelper;\n})();\n"]}