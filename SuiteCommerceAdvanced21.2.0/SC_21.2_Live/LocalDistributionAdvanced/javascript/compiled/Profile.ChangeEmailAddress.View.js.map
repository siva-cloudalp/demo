{"version":3,"sources":["Profile.ChangeEmailAddress.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAWF,gEAAgE;IAChE,IAAM,yBAAyB,GAAQ,YAAY,CAAC,MAAM,CAAC;QACvD,QAAQ,EAAE,wBAAwB;QAElC,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC;QAE5C,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC;QAEtC,MAAM,EAAE;YACJ,aAAa,EAAE,gBAAgB;SAClC;QAED,QAAQ,EAAE;YACN,2BAA2B,EAAE,kBAAkB;YAC/C,oBAAoB,EAAE,WAAW;YACjC,wBAAwB,EAAE,eAAe;SAC5C;QAED,UAAU,EAAE;YACR,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACzD,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;QAED,cAAc,EAAE;YACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,GAAG,EAAE,CAAC;YACpD,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACrD,CAAC;QAED,WAAW,EAAE,UAAS,WAAW;YAC7B,IAAM,mBAAmB,GAAG,IAAI,iDAAsB,CAAC;gBACnD,OAAO,EAAK,KAAK,CAAC,SAAS,CAAC,gDAAgD,CAAC;oBACzE,IAAI,CAAC,SAAS,cAAW;gBAC7B,IAAI,EAAE,SAAS;gBACf,QAAQ,EAAE,IAAI;aACjB,CAAC,CAAC;YAEH,WAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;QAC9D,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,yBAAyB,CAAC","file":"Profile.ChangeEmailAddress.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Profile.ChangeEmailAddress.View\"/>\nimport * as profile_change_email_tpl from 'profile_change_email.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\n\nimport { GlobalViewsMessageView } from '../../GlobalViews/JavaScript/GlobalViews.Message.View';\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport BackboneFormView = require('../../Backbone.FormView/JavaScript/Backbone.FormView');\n\n// @class Profile.ChangeEmailAddress.View @extends Backbone.View\nconst ProfileChangeEmailAddress: any = BackboneView.extend({\n    template: profile_change_email_tpl,\n\n    page_header: Utils.translate('Change Email'),\n\n    title: Utils.translate('Change Email'),\n\n    events: {\n        'submit form': 'saveFormCustom'\n    },\n\n    bindings: {\n        '[name=\"current_password\"]': 'current_password',\n        '[name=\"new_email\"]': 'new_email',\n        '[name=\"confirm_email\"]': 'confirm_email'\n    },\n\n    initialize: function() {\n        BackboneView.prototype.initialize.apply(this, arguments);\n        BackboneFormView.add(this);\n    },\n\n    saveFormCustom: function() {\n        this.new_email = this.$('[name=\"new_email\"]').val();\n        BackboneFormView.saveForm.apply(this, arguments);\n    },\n\n    showSuccess: function(placeholder) {\n        const global_view_message = new GlobalViewsMessageView({\n            message: `${Utils.translate('A confirmation email has been sent to <strong>') +\n                this.new_email}</strong>`,\n            type: 'success',\n            closable: true\n        });\n\n        placeholder.html(global_view_message.render().$el.html());\n    }\n});\n\nexport = ProfileChangeEmailAddress;\n"]}