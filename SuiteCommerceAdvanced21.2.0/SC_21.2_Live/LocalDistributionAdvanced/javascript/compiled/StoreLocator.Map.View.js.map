{"version":3,"sources":["StoreLocator.Map.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAUF,IAAM,mBAAmB,GAAQ,YAAY,CAAC,MAAM,CAAC;QACjD,QAAQ,EAAE,qBAAqB;QAE/B,qBAAqB;QACrB,UAAU,EAAE,SAAS,UAAU,CAAC,OAAO;YACnC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;YAEvC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC;YAE3C,4BAA4B;YAC5B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAE3B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACzC,CAAC;QAED,OAAO,EAAE,SAAS,OAAO;YACrB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACjB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;aAC5D;iBAAM,IAAI,IAAI,CAAC,KAAK,EAAE;gBACnB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;aACzD;YAED,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAChE,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC3B,CAAC;QAED,oBAAoB;QACpB,iBAAiB;QACjB,SAAS,EAAE,SAAS,SAAS;YACzB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAE5C,IAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;YAElD,IAAI,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;gBACxD,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;aACzD;iBAAM;gBACH,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACnD;YAED,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;gBACxB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC5D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC1C;QACL,CAAC;QACD,2BAA2B;QAC3B,iBAAiB;QACjB,gBAAgB,EAAE,SAAS,gBAAgB;YACvC,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QACxE,CAAC;QAED,iBAAiB;QACjB,MAAM,EAAE,SAAS,MAAM;YACnB,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,CAAC,OAAO,EAAE,CAAC;gBAEf,IAAM,MAAI,GAAG,IAAI,CAAC;gBAElB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;oBAC3B,MAAI,CAAC,OAAO,EAAE,CAAC;gBACnB,CAAC,CAAC,CAAC;aACN;QACL,CAAC;QAED,kBAAkB;QAClB,OAAO,EAAE,SAAS,OAAO;YACrB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAE1E,IAAI,IAAI,CAAC,KAAK,EAAE;gBACZ,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;gBACrD,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;iBAAM,IAAI,IAAI,CAAC,UAAU,EAAE;gBACxB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;gBACxD,IAAI,CAAC,SAAS,EAAE,CAAC;aACpB;YACD,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACnE,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,mBAAmB,CAAC","file":"StoreLocator.Map.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"StoreLocator.Map.View\"/>\n// @module StoreLocator.Map.View\n\nimport * as _ from 'underscore';\nimport * as store_locator_map_tpl from 'store_locator_map.tpl';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\nconst StoreLocatorMapView: any = BackboneView.extend({\n    template: store_locator_map_tpl,\n\n    // @method initialize\n    initialize: function initialize(options) {\n        this.application = options.application;\n\n        this.reference_map = options.reference_map;\n\n        // location model (optional)\n        this.model = options.model;\n\n        this.collection = options.collection;\n    },\n\n    destroy: function destroy() {\n        if (this.collection) {\n            this.collection.off('sync, reset', this.updateMap, this);\n        } else if (this.model) {\n            this.model.off('change', this.updateMapDetails, this);\n        }\n\n        this.reference_map.off('change:position', this.updateMap, this);\n        return this._destroy();\n    },\n\n    // @method updateMap\n    // @return {Void}\n    updateMap: function updateMap() {\n        this.reference_map.clearPointList(this.map);\n\n        const position = this.reference_map.getPosition();\n\n        if (position && _.size(position) && !position.refineSearch) {\n            this.reference_map.showMyPosition(position, this.map);\n        } else {\n            this.reference_map.centerMapToDefault(this.map);\n        }\n\n        if (this.collection.length) {\n            this.reference_map.showPointList(this.collection, this.map);\n            this.reference_map.fitBounds(this.map);\n        }\n    },\n    // @method updateMapDetails\n    // @return {Void}\n    updateMapDetails: function updateMapDetails() {\n        this.reference_map.showPointWithoutInfoWindow(this.model, this.map);\n    },\n\n    // @method render\n    render: function render() {\n        if (this.reference_map) {\n            this._render();\n\n            const self = this;\n\n            this.reference_map.load().done(function() {\n                self.mapInit();\n            });\n        }\n    },\n\n    // @method mapInit\n    mapInit: function mapInit() {\n        this.map = this.reference_map.showMap(this.$('[data-type=\"map\"]').get(0));\n\n        if (this.model) {\n            this.model.on('change', this.updateMapDetails, this);\n            this.updateMapDetails();\n        } else if (this.collection) {\n            this.collection.on('sync, reset', this.updateMap, this);\n            this.updateMap();\n        }\n        this.reference_map.on('change:position', this.updateMap, this);\n    }\n});\n\nexport = StoreLocatorMapView;\n"]}