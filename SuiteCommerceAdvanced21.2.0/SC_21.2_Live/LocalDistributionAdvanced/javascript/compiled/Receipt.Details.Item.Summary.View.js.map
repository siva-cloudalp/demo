{"version":3,"sources":["Receipt.Details.Item.Summary.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAWF,iEAAiE;IACjE,IAAM,6BAA6B,GAAQ,YAAY,CAAC,MAAM,CAAC;QAC3D,QAAQ,EAAE,gCAAgC;QAE1C,uEAAuE;QACvE,UAAU,EAAE;YACR,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;YAExB,mDAAmD;YACnD,OAAO;gBACH,yBAAyB;gBACzB,IAAI,EAAE,IAAI;gBACV,iCAAiC;gBACjC,cAAc,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,UAAU;gBAC/C,8BAA8B;gBAC9B,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;gBACnC,iCAAiC;gBACjC,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC;gBAC1C,qCAAqC;gBACrC,eAAe,EAAE,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBACnE,oCAAoC;gBACpC,cAAc,EAAE,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACvD,kCAAkC;gBAClC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;gBACnC,sCAAsC;gBACtC,eAAe,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC;aAC9C,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,6BAA6B,CAAC","file":"Receipt.Details.Item.Summary.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Receipt.Details.Item.Summary.View\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport * as receipt_details_tiem_summary_tpl from 'receipt_details_item_summary.tpl';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class Receipt.Details.Item.Summary.View @extend Backbone.View\nconst ReceiptDetailsItemSummaryView: any = BackboneView.extend({\n    template: receipt_details_tiem_summary_tpl,\n\n    // @method getContext @return Receipt.Details.Item.Summary.View.Context\n    getContext: function() {\n        const line = this.model;\n\n        // @class Receipt.Details.Item.Summary.View.Context\n        return {\n            // @property {Model} line\n            line: line,\n            // @property {Boolean} isDiscount\n            isDiscountType: line.get('type') === 'Discount',\n            // @property {Number} quantity\n            quantity: line.get('quantity') || 0,\n            // @property {Boolean} showAmount\n            showAmount: !!line.get('amount_formatted'),\n            // @property {String} amountFormatted\n            amountFormatted: Utils.formatCurrency(line.get('amount_formatted')),\n            // @property {String} totalFormatted\n            totalFormatted: Utils.formatCurrency(line.get('total')),\n            // @property {Boolean} hasDiscount\n            hasDiscount: !!line.get('discount'),\n            // @property {Boolean} showAmountLabel\n            showAmountLabel: !!line.get('amount_label')\n        };\n    }\n});\n\nexport = ReceiptDetailsItemSummaryView;\n"]}