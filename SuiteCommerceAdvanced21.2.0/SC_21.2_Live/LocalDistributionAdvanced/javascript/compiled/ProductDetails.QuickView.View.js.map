{"version":3,"sources":["ProductDetails.QuickView.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IASF,4FAA4F;IAC5F,IAAM,2BAA2B,GAAQ,sBAAsB,CAAC,MAAM,CAAC;QACnE,gCAAgC;QAChC,QAAQ,EAAE,6BAA6B;QAEvC,yFAAyF;QACzF,UAAU,EAAE;YACR,EAAE,EAAE,+BAA+B;YACnC,KAAK,EAAE,qBAAqB;YAC5B,wBAAwB,EAAE,+BAA+B;SAC5D;QAED,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,sBAAsB,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,CAAC;QAErE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,sBAAsB,CAAC,SAAS,CAAC,MAAM,EAAE;YAC1D,sCAAsC,EAAE,cAAc;SACzD,CAAC;QAEF,0DAA0D;QAC1D,0BAA0B;QAC1B,iBAAiB;QACjB,YAAY,EAAE,SAAS,YAAY,CAAC,CAAC;YACjC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QAC5D,CAAC;QAED,UAAU,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,sBAAsB,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE,CAAC;QAEzE,gFAAgF;QAChF,+DAA+D;QAC/D,uBAAuB,EAAE,SAAS,uBAAuB;YACrD,4DAA4D;YAC5D,OAAO;gBACH,8BAA8B;gBAC9B,OAAO,EAAE,IAAI;aAChB,CAAC;YACF,uCAAuC;QAC3C,CAAC;QAED,qBAAqB;QACrB,kDAAkD;QAClD,UAAU,EAAE;YACR,wFAAwF;YACxF,OAAO,CAAC,CAAC,MAAM,CAAC,sBAAsB,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;YACxF,uCAAuC;QAC3C,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,2BAA2B,CAAC","file":"ProductDetails.QuickView.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductDetails.QuickView.View\"/>\n\nimport * as _ from 'underscore';\nimport * as product_details_quickview_tpl from 'product_details_quickview.tpl';\n\nimport ProductDetailsBaseView = require('./ProductDetails.Base.View');\n\n// @class ProductDetails.QuickView.View Handles the PDP and quick view @extend Backbone.View\nconst ProductDetailsQuickViewView: any = ProductDetailsBaseView.extend({\n    // @property {Function} template\n    template: product_details_quickview_tpl,\n\n    // @property {Object} attributes List of HTML attributes applied by Backbone into the $el\n    attributes: {\n        id: 'ProductDetails.QuickView.View',\n        class: 'view product-detail',\n        'data-root-component-id': 'ProductDetails.QuickView.View'\n    },\n\n    bindings: _.extend({}, ProductDetailsBaseView.prototype.bindings, {}),\n\n    events: _.extend({}, ProductDetailsBaseView.prototype.events, {\n        'click [data-action=\"go-to-fullview\"]': 'goToFullView'\n    }),\n\n    // @method goToFullView Fix the url of the Full View link.\n    // @param {jQuery.Event} e\n    // @return {void}\n    goToFullView: function goToFullView(e) {\n        this.$(e.target).attr('href', this.model.generateURL());\n    },\n\n    childViews: _.extend({}, ProductDetailsBaseView.prototype.childViews, {}),\n\n    // @method getExtraChildrenOptions Allows adding extra option to the child view.\n    // @return {ProductDetails.QuickView.View.ExtraChildrenOptions}\n    getExtraChildrenOptions: function getExtraChildrenOptions() {\n        // @class ProductDetails.QuickView.View.ExtraChildrenOptions\n        return {\n            // @property {Boolean} isModal\n            isModal: true\n        };\n        // @class ProductDetails.QuickView.View\n    },\n\n    // @method getContext\n    // @return {ProductDetails.QuickView.View.Context}\n    getContext: function() {\n        // @class ProductDetails.QuickView.View.Context @extend ProductDetails.Base.View.Context\n        return _.extend(ProductDetailsBaseView.prototype.getContext.apply(this, arguments), {});\n        // @class ProductDetails.QuickView.View\n    }\n});\n\nexport = ProductDetailsQuickViewView;\n"]}