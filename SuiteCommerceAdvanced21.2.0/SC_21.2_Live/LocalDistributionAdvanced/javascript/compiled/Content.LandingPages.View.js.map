{"version":3,"sources":["Content.LandingPages.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAeF,uCAAuC;IACvC,IAAI,UAAU,GAAG,KAAK,CAAC;IACvB,IAAI;QACA,UAAU,GAAG,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;KACnD;IAAC,OAAO,CAAC,EAAE;QACR,kDAAkD;KACrD;IAED,mCAAmC;IACnC,mHAAmH;IACnH,sDAAsD;IACtD,IAAM,uBAAuB,GAAQ,YAAY,CAAC,MAAM,CAAC;QACrD,QAAQ,EACJ,6BAAa,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,gBAAgB;YACvD,CAAC,CAAC,2BAA2B;YAC7B,CAAC,CAAC,gBAAgB;QAE1B,KAAK,EAAE,EAAE;QAET,WAAW,EAAE,EAAE;QAEf,UAAU,EAAE;YACR,EAAE,EAAE,cAAc;YAClB,KAAK,EAAE,cAAc;SACxB;QAED,MAAM,EAAE,EAAE;QAEV,UAAU,EAAE,UAAS,OAAO;YACxB,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;YACvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC;YACzD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;QACvD,CAAC;QAED,iBAAiB,EAAE,SAAS,iBAAiB;YACzC,IAAM,IAAI,GAAG,IAAI,CAAC;YAClB,IAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAClC,IAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC;YACtC,IAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB;YAErD,UAAU,CAAC,QAAQ,CAAC,GAAG,GAAG,QAAQ,EAAE,UAAS,IAAI;gBAC7C,IAAI,IAAI,EAAE;oBACN,aAAa,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;oBAC/C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;oBAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,OAAO,CAAC,OAAO,EAAE,CAAC;iBACrB;qBAAM;oBACH,OAAO,CAAC,MAAM,EAAE,CAAC;oBACjB,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC;iBAC3C;YACL,CAAC,CAAC,CAAC;YAEH,OAAO,OAAO,CAAC;QACnB,CAAC;QAED,iFAAiF;QACjF,kBAAkB,EAAE;YAChB,IAAM,UAAU,GAAG,EAAE,CAAC;YAEtB,UAAU,CAAC,IAAI,CAAC;gBACZ,IAAI,EAAE,IAAI,CAAC,GAAG;gBACd,IAAI,EAAE,IAAI,CAAC,WAAW;aACzB,CAAC,CAAC;YAEH,OAAO,UAAU,CAAC;QACtB,CAAC;QAED,kEAAkE;QAClE,UAAU,EAAE;YACR,2CAA2C;YAC3C,OAAO;gBACH,8CAA8C;gBAC9C,uBAAuB,EAAE,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,OAAO;gBAC1D,gCAAgC;gBAChC,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,yCAAyC;gBACzC,kBAAkB,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;gBACzD,iCAAiC;gBACjC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC;aACxC,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,uBAAuB,CAAC","file":"Content.LandingPages.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Content.LandingPages.View\"/>\n\nimport * as landing_page_tpl from 'landing_page.tpl';\nimport * as landing_page_my_account_tpl from 'landing_page_my_account.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\n\nimport DataModels = require('./Content.DataModels');\nimport EnhancedViews = require('./Content.EnhancedViews');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\n// Categories is an optional dependency\nlet Categories = false;\ntry {\n    Categories = Utils.requireModules('Categories');\n} catch (e) {\n    // console.log('Couldn\\'t load Categories. ' + e);\n}\n\n// @class Content.LandingPages.View\n// Uses the Content.DataModels to connect to the servers. Tho' most of the content is driven by the content service\n// we need a view to extend upon @extend Backbone.View\nconst ContentLandingPagesView: any = BackboneView.extend({\n    template:\n        Configuration.get('currentTouchpoint') === 'customercenter'\n            ? landing_page_my_account_tpl\n            : landing_page_tpl,\n\n    title: '',\n\n    page_header: '',\n\n    attributes: {\n        id: 'landing-page',\n        class: 'landing-page'\n    },\n\n    events: {},\n\n    initialize: function(options) {\n        this.application = options.application;\n        this.options = options;\n        this.url = Backbone.history && Backbone.history.fragment;\n        this.options.layout = this.application.getLayout();\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        const self = this;\n        const promise = jQuery.Deferred();\n        const url = Backbone.history.fragment;\n        const page_url = url.split('?')[0]; // remove options\n\n        DataModels.loadPage('/' + page_url, function(page) {\n            if (page) {\n                EnhancedViews.overrideViewSettings(self, page);\n                self.page_header = page.get('pageheader');\n                self.page = page;\n                promise.resolve();\n            } else {\n                promise.reject();\n                self.application.getLayout().notFound();\n            }\n        });\n\n        return promise;\n    },\n\n    // @method getBreadcrumbPages It will try to figure the breadcrumb out of the url\n    getBreadcrumbPages: function() {\n        const breadcrumb = [];\n\n        breadcrumb.push({\n            href: this.url,\n            text: this.page_header\n        });\n\n        return breadcrumb;\n    },\n\n    // @method getContext @returns {Content.LandingPages.View.Context}\n    getContext: function() {\n        // @class Content.LandingPages.View.Context\n        return {\n            // @property {Boolean} pageHeaderAndNotInModal\n            pageHeaderAndNotInModal: this.page_header && !this.inModal,\n            // @property {String} pageHeader\n            pageHeader: this.page_header,\n            // @property {Boolean} pageAndPageContent\n            pageAndPageContent: this.page && this.page.get('content'),\n            // @property {String} pageContent\n            pageContent: this.page.get('content')\n        };\n    }\n});\n\nexport = ContentLandingPagesView;\n"]}