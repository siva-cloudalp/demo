{"version":3,"sources":["Subscriptions.AddOn.List.View.ts"],"names":[],"mappings":"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","file":"Subscriptions.AddOn.List.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Subscriptions.AddOn.List.View\"/>\n// @module Subscriptions\n\nimport * as _ from 'underscore';\nimport * as backbone_collection_view_row_tpl from 'backbone_collection_view_row.tpl';\nimport * as subscriptions_addons from 'subscriptions_addons.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { SubscriptionsModel } from './Subscriptions.Model';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\n\nimport SubscriptionsAddOnView = require('./Subscriptions.AddOn.View');\nimport { AjaxRequestsKiller } from '../../../Commons/AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\n\nimport { Loggers } from '../../../Commons/Loggers/JavaScript/Loggers';\n\nconst SubscriptionsAddOnListView = BackboneView.extend({\n    template: subscriptions_addons,\n\n    title: Utils.translate('My Subscriptions'),\n\n    page_header: Utils.translate('My Subscriptions'),\n\n    attributes: {\n        id: 'Subscriptions',\n        class: 'Subscriptions'\n    },\n\n    initialize: function(options) {},\n\n    beforeShowContent: function beforeShowContent() {\n        const promise = jQuery.Deferred();\n        const loggersActionId = Loggers.getLogger().start('SUBSCRIPTIONS_ADDONS_LIST');\n        if (!this.options.subscription) {\n            this.subscription = new SubscriptionsModel({\n                internalid: this.options.routerArguments[0]\n            });\n            const fetch = this.subscription\n                .fetch({ killerId: AjaxRequestsKiller.getKillerId() })\n                .done(() => {\n                    this.collection = this.subscription.get('nonIncludedLinesCollection');\n                    this.collection.add(this.subscription.get('optionalSubscriptionLines').models);\n                    this.collection = _.sortBy(this.collection.models, (model: any) =>\n                        model.getStatusLabel()\n                    );\n                    Loggers.getLogger().end(loggersActionId);\n                })\n                .always(() => promise.resolve());\n\n            return fetch;\n        }\n        this.subscription = this.options.subscription;\n        this.collection = this.subscription.get('nonIncludedLinesCollection');\n        return promise;\n    },\n\n    // @method getSelectedMenu @return {String}\n    getSelectedMenu: function() {\n        return 'subscriptions';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return [\n            {\n            text: this.title,\n                href: '/subscriptions-list'\n            },\n            {\n                text: this.subscription.get('name'),\n                href: `subscription/${this.subscription.get('internalid')}`\n            },\n            {\n                text: Utils.translate('Add-ons'),\n                href: `subscription/${this.subscription.get('internalid')}/addons`\n            }\n        ];\n    },\n\n    childViews: {\n        'Facets.Items': function() {\n            return new BackboneCollectionView({\n                childView: SubscriptionsAddOnView,\n                childViewOptions: {\n                    application: this.options.application,\n                    subscription: this.subscription\n                },\n                viewsPerRow: Utils.isPhoneDevice() ? 2 : 3,\n                collection: this.collection,\n                rowTemplate: backbone_collection_view_row_tpl\n            });\n        }\n    },\n\n    // @method getContext @return {Subscriptions.AddOn.List.View.Context}\n    getContext: function() {\n        // @class Subscriptions.AddOn.List.View.Context\n        return {\n            //  @property {String} pageHeader\n            pageHeader: this.subscription.get('name')\n        };\n    }\n});\n\nexport = SubscriptionsAddOnListView;\n"]}