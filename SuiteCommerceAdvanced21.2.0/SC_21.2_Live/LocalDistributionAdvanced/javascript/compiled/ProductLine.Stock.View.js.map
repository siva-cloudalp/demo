{"version":3,"sources":["ProductLine.Stock.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IASF,OAAS,YAAY,CAAC,MAAM,CAAC;QACzB,QAAQ,EAAE,sBAAsB;QAEhC,yFAAyF;QACzF,6DAA6D;QAC7D,iBAAiB;QACjB,UAAU,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC/C,CAAC;QAED,8EAA8E;QAC9E,iBAAiB;QACjB,OAAO,EAAE,SAAS,OAAO;YACrB,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACtD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAChD,CAAC;QAED,qBAAqB;QACrB,2CAA2C;QAC3C,UAAU,EAAE;YACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;YAE5C,wCAAwC;YACxC,OAAO;gBACH,4CAA4C;gBAC5C,qBAAqB,EAAE,CAAC,CAAC,CACrB,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,qBAAqB,CACtE;gBACD,6CAA6C;gBAC7C,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,gEAAgE;gBAChE,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,yCAAyC;gBACzC,kBAAkB,EACd,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC;oBACtE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB;gBACxC,4CAA4C;gBAC5C,qBAAqB,EAAE,IAAI,CAAC,UAAU,CAAC,qBAAqB;gBAC5D,oCAAoC;gBACpC,aAAa,EAAE,IAAI;aACtB,CAAC;YACF,gCAAgC;QACpC,CAAC;KACJ,CAAC,CAAC;;AAEH,mDAAmD;AACnD,oEAAoE","file":"ProductLine.Stock.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductLine.Stock.View\"/>\n\nimport * as product_line_stock_tpl from 'product_line_stock.tpl';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class ProductLine.Stock.View @extends Backbone.View\nexport = BackboneView.extend({\n    template: product_line_stock_tpl,\n\n    // @method initialize Override default method to attach model's change event to re-render\n    // @param {ProductLine.Stock.View.Initialize.options} options\n    // @return {Void}\n    initialize: function() {\n        this.model.on('change', this.render, this);\n    },\n\n    // @method destroy Override default method to detach from model's change event\n    // @return {Void}\n    destroy: function destroy() {\n        BackboneView.prototype.destroy.apply(this, arguments);\n        this.model.off('change', this.render, this);\n    },\n\n    // @method getContext\n    // @return {ProductLine.Stock.View.Context}\n    getContext: function() {\n        this.stock_info = this.model.getStockInfo();\n\n        // @class ProductLine.Stock.View.Context\n        return {\n            // @property {Boolean} showOutOfStockMessage\n            showOutOfStockMessage: !!(\n                !this.stock_info.isInStock && this.stock_info.showOutOfStockMessage\n            ),\n            // @property {Item.Model.StockInfo} stockInfo\n            stockInfo: this.stock_info,\n            // @property {Item.Model|Transaction.Line.Model|Item.Model model\n            model: this.model,\n            // @property {Boolean} showInStockMessage\n            showInStockMessage:\n                !(!this.stock_info.isInStock && this.stock_info.showOutOfStockMessage) &&\n                !!this.stock_info.showInStockMessage,\n            // @property {Boolean} isNotAvailableInStore\n            isNotAvailableInStore: this.stock_info.isNotAvailableInStore,\n            // @property {Boolean} showStockView\n            showStockView: true\n        };\n        // @class ProductLine.Stock.View\n    }\n});\n\n// @class ProductLine.Stock.View.Initialize.options\n// @property {Transaction.Line.Model|Item.Model|Product.Model} model\n"]}