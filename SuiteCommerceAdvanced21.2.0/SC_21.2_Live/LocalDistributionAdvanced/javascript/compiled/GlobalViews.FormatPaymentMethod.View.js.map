{"version":3,"sources":["GlobalViews.FormatPaymentMethod.View.ts"],"names":[],"mappings":"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","file":"GlobalViews.FormatPaymentMethod.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"GlobalViews.FormatPaymentMethod.View\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\n\nimport * as global_views_format_payment_method_tpl from 'global_views_format_payment_method.tpl';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport BackboneModel = require('../../BackboneExtras/JavaScript/Backbone.Model');\n\n// @class GlobalViews.FormatPaymentMethod.View @extends Backbone.View\nconst GlobalViewsFormatPaymentMethodView: any = BackboneView.extend({\n    // @property {Function} template\n    template: global_views_format_payment_method_tpl,\n\n    // @method initialize\n    initialize: function(options) {\n        this.showBillingInfo = options.showBillingInfo;\n        this.model = options.model || new BackboneModel();\n    },\n\n    // @method getContext @return GlobalViews.FormatPaymentMethod.View.Context\n    getContext: function() {\n        const payment_methods = Configuration.get('siteSettings.paymentmethods');\n        const credit_card = this.model.get('creditcard');\n        const is_paypal = this.model.get('type') === 'paypal';\n        const is_credit_card =\n            this.model.get('type') === 'creditcard' && credit_card && credit_card.ccnumber;\n        const is_credit_card_token =\n            this.model.get('type') === 'creditcardtoken' && credit_card && credit_card.mask;\n        const is_invoice = this.model.get('type') === 'invoice';\n        const is_gift_certificate = this.model.get('type') === 'giftcertificate';\n        let credit_card_payment_method_name =\n            credit_card && credit_card.paymentmethod ? credit_card.paymentmethod.name : '';\n        const credit_card_payment_method_internalid =\n            credit_card && credit_card.paymentmethod ? credit_card.paymentmethod.internalid : '';\n        const credit_card_payment_method_key =\n            credit_card && credit_card.paymentmethod ? credit_card.paymentmethod.key : '';\n        let credit_card_number =\n            (credit_card && credit_card.ccnumber && credit_card.ccnumber.replace(/\\*/g, '')) || '';\n        let gift_certificate_ending = '';\n        const payment_method: any = credit_card_payment_method_key\n            ? _.findWhere(payment_methods, { key: credit_card_payment_method_key })\n            : _.findWhere(payment_methods, {\n                  internalid: credit_card_payment_method_internalid\n              });\n        let icon = payment_method && payment_method.imagesrc && payment_method.imagesrc[0];\n        let name = this.model.get('name') || Utils.translate('Not specified');\n\n        if (is_credit_card_token) {\n            const { paymentmethod } = credit_card;\n            icon = paymentmethod && paymentmethod.imagesrc && paymentmethod.imagesrc[0];\n            credit_card_number = credit_card.cardlastfourdigits;\n            name = paymentmethod.name;\n            credit_card_payment_method_name = paymentmethod.name;\n            credit_card.ccexpiredate = credit_card.cardexpirationdate;\n        }\n        if (is_gift_certificate) {\n            const code_length = this.model.get('giftcertificate').code.length;\n            gift_certificate_ending = this.model\n                .get('giftcertificate')\n                .code.substring(code_length - 4, code_length);\n        }\n\n        const internal = this.model.get('internal');\n        const is_ach = internal && internal.paymentmethod && internal.paymentmethod.automatedclearinghouse === 'T';\n        let account;\n        let limit;\n        if (is_ach) {\n            account = internal.name;\n            limit = internal.limit;\n        }\n\n        const credit_card_number_ending =\n            credit_card_number && credit_card_number.length > 4\n                ? credit_card_number.substring(credit_card_number.length - 4)\n                : credit_card_number;\n\n        // @class GlobalViews.FormatPaymentMethod.View.Context\n        return {\n            // @property {Object} model\n            model: this.model,\n            // @property {Boolean} showStreet\n            showStreet: this.model.get('ccstreet') && this.showBillingInfo,\n            // @property {Boolean} showZipCode\n            showZipCode: this.model.get('cczipcode') && this.showBillingInfo,\n            // @property {Boolean} isCreditcard\n            isCreditcard: !!is_credit_card || !!is_credit_card_token,\n            // @property {Boolean} isCreditcardToken\n            isCreditcardToken: !!is_credit_card_token,\n            // @property {Boolean} isGiftCertificate\n            isGiftCertificate: is_gift_certificate,\n            // @property {Boolean} isPaypal\n            isPaypal: is_paypal,\n            // @property {Boolean} isInvoice\n            isInvoice: is_invoice,\n            // @property {Boolean} isACH\n            isACH: is_ach,\n            // @property {Boolean} isOther\n            isOther:\n                !is_ach &&\n                !is_invoice &&\n                !is_paypal &&\n                !is_credit_card &&\n                !is_gift_certificate &&\n                !is_credit_card_token,\n            // @property {String} type\n            type: this.model.get('type') || Utils.translate('Not specified'),\n            // @property {String} name\n            name: name,\n            // @property {String} creditCardNumberEnding\n            creditCardNumberEnding: credit_card_number_ending,\n            // @property {String} showCreditCardImage\n            showCreditCardImage: !!icon,\n            // @property {String} creditCardImageUrl\n            creditCardImageUrl: icon || '',\n            // @property {String} creditCardPaymentMethodName\n            creditCardPaymentMethodName: credit_card_payment_method_name,\n            // @property {Object} creditCard: credit_card\n            creditCard: credit_card,\n            // @property {String} giftCertificateEnding\n            giftCertificateEnding: gift_certificate_ending,\n            // @property {String} mask\n            mask: credit_card && credit_card.mask,\n            // @property {String} showPurchaseNumber\n            showPurchaseNumber: !!this.model.get('purchasenumber'),\n            // @property {String} account\n            account: account,\n            // @property {String} limit\n            limit: limit\n        };\n    }\n});\n\nexport = GlobalViewsFormatPaymentMethodView;\n"]}