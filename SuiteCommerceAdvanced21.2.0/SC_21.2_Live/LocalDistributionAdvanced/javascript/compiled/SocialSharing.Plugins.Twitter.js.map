{"version":3,"sources":["SocialSharing.Plugins.Twitter.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IASF,0DAA0D;IAC1D,IAAM,aAAa,GAAQ;QACvB,oBAAoB,EAAE,IAAI;QAC1B,yBAAyB;QACzB,kDAAkD;QAClD,sCAAsC;QACtC,gGAAgG;QAChG,cAAc,EAAE,UAAS,GAAG,EAAE,WAAW,EAAE,GAAG,EAAE,aAAa;YACzD,IAAM,oBAAoB,GAAG,IAAI,CAAC,+BAA+B,CAC7D,aAAa,IAAI,6BAAa,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAC7D,CAAC;YACF,IAAM,UAAU,GACZ,oDAAoD;gBACpD,kBAAkB,CAAC,GAAG,CAAC;gBACvB,2BAA2B;gBAC3B,kBAAkB,CAAC,WAAW,CAAC;gBAC/B,OAAO;gBACP,kBAAkB,CAAC,GAAG,CAAC;gBACvB,OAAO;gBACP,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAE5B,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,oBAAoB,CAAC,CAAC;QACxE,CAAC;QAED,sCAAsC;QACtC,gEAAgE;QAChE,2BAA2B,EAAE,UAAS,CAAC;YACnC,CAAC,CAAC,cAAc,EAAE,CAAC;YAEnB,IAAM,gBAAgB,GAAG,6BAAa,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAC/D,IAAM,GAAG,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAM,KAAK,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;YACjD,IAAM,GAAG,GAAG,6BAAa,CAAC,GAAG,CAAC,aAAa,CAAC;gBACxC,CAAC,CAAC,6BAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;gBACnD,CAAC,CAAC,EAAE,CAAC;YAET,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;QACzC,CAAC;QAED,UAAU,EAAE,UAAS,WAAW;YAC5B,IAAI,6BAAa,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE;gBACrC,IAAM,MAAM,GAAG,WAAW,CAAC,SAAS,EAAE,CAAC;gBAEvC,iFAAiF;gBACjF,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE;oBACb,cAAc,EAAE,IAAI,CAAC,cAAc;iBACtC,CAAC,CAAC;gBAEH,wCAAwC;gBACxC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;oBACpB,wCAAwC,EAAE,IAAI,CAAC,2BAA2B;iBAC7E,CAAC,CAAC;gBAEH,sDAAsD;gBACtD,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC;oBAClC,IAAI,EAAE,eAAe;oBACrB,QAAQ,EAAE,EAAE;oBACZ,OAAO,EAAE,UAAS,WAAW;wBACzB,IAAM,MAAM,GAAG,WAAW,CAAC,SAAS,EAAE,CAAC;wBACvC,MAAM,CAAC,GAAG;6BACL,IAAI,CAAC,kCAAkC,CAAC;6BACxC,MAAM,CACH,0LAA0L,CAC7L,CAAC;oBACV,CAAC;iBACJ,CAAC,CAAC;aACN;QACL,CAAC;KACJ,CAAC;IAEF,OAAS,aAAa,CAAC","file":"SocialSharing.Plugins.Twitter.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"SocialSharing.Plugins.Twitter\"/>\n\nimport * as _ from 'underscore';\nimport { Configuration } from '../../../Commons/Utilities/JavaScript/Configuration';\n\nimport SocialSharing = require('./SocialSharing');\n\n// @class SocialSharing.Twitter @extends ApplicationModule\nconst twitterPlugin: any = {\n    excludeFromMyAccount: true,\n    // @method shareInTwitter\n    // opens a new window to share the page in Twitter\n    // based on some configuration options\n    // @param {String}url @param {String}description @param {String}via @param {Object}popup_options\n    shareInTwitter: function(url, description, via, popup_options) {\n        const popup_options_string = this.getPopupOptionsStringFromObject(\n            popup_options || Configuration.get('twitter.popupOptions')\n        );\n        const target_url =\n            'https://twitter.com/intent/tweet?original_referer=' +\n            encodeURIComponent(url) +\n            '&source=tweetbutton&text=' +\n            encodeURIComponent(description) +\n            '&url=' +\n            encodeURIComponent(url) +\n            '&via=' +\n            encodeURIComponent(via);\n\n        window.open(target_url, _.uniqueId('window'), popup_options_string);\n    },\n\n    // @method shareInTwitterEventListener\n    // calls shareInTwitter method passing the configuration options\n    shareInTwitterEventListener: function(e) {\n        e.preventDefault();\n\n        const metaTagMappingOg = Configuration.get('metaTagMappingOg');\n        const url = metaTagMappingOg['og:url'](this);\n        const title = metaTagMappingOg['og:title'](this);\n        const via = Configuration.get('twitter.via')\n            ? Configuration.get('twitter.via').replace('@', '')\n            : '';\n\n        this.shareInTwitter(url, title, via);\n    },\n\n    mountToApp: function(application) {\n        if (Configuration.get('twitter.enable')) {\n            const layout = application.getLayout();\n\n            // This are mostly related to the dom, or to events, so we add them in the layout\n            _.extend(layout, {\n                shareInTwitter: this.shareInTwitter\n            });\n\n            // extend Layout and add event listeners\n            _.extend(layout.events, {\n                'click [data-action=\"share-in-twitter\"]': this.shareInTwitterEventListener\n            });\n\n            // @class SocialSharing.Twitter.Plugin @extends Plugin\n            SocialSharing.afterAppendView.install({\n                name: 'twitterPlugin',\n                priority: 10,\n                execute: function(application) {\n                    const layout = application.getLayout();\n                    layout.$el\n                        .find('[data-type=\"social-share-icons\"]')\n                        .append(\n                            '<a href=\"#\" class=\"social-sharing-flyout-content-social-twitter\" data-action=\"share-in-twitter\"><i class=\"social-sharing-flyout-content-social-twitter-icon\"></i> <span>Tweet</span></a>'\n                        );\n                }\n            });\n        }\n    }\n};\n\nexport = twitterPlugin;\n"]}