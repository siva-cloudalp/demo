{"version":3,"sources":["backbone.stickit.js"],"names":[],"mappings":"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","file":"backbone.stickit.js","sourcesContent":["// Backbone.Stickit v0.9.2, MIT Licensed\n// Copyright (c) 2012-2015 The New York Times, CMS Group, Matthew DeLambo <delambo@gmail.com>\n\n(function (factory) {\n\n  // Set up Stickit appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd)\n    define(['underscore', 'Backbone', 'exports'], factory);\n\n  // Next for Node.js or CommonJS.\n  else if (typeof exports === 'object')\n    factory(require('underscore'), require('Backbone'), exports);\n\n  // Finally, as a browser global.\n  else\n    factory(_, Backbone, {});\n\n}(function (_, Backbone, Stickit) {\n\n  // Stickit Namespace\n  // --------------------------\n\n  // Export onto Backbone object\n  Backbone.Stickit = Stickit;\n\n  Stickit._handlers = [];\n\n  Stickit.addHandler = function(handlers) {\n    // Fill-in default values.\n    handlers = _.map(_.flatten([handlers]), function(handler) {\n      return _.defaults({}, handler, {\n        updateModel: true,\n        updateView: true,\n        updateMethod: 'text'\n      });\n    });\n    this._handlers = this._handlers.concat(handlers);\n  };\n\n  // Backbone.View Mixins\n  // --------------------\n\n  Stickit.ViewMixin = {\n\n    // Collection of model event bindings.\n    //   [{model,event,fn,config}, ...]\n    _modelBindings: null,\n\n    // Unbind the model and event bindings from `this._modelBindings` and\n    // `this.$el`. If the optional `model` parameter is defined, then only\n    // delete bindings for the given `model` and its corresponding view events.\n    unstickit: function(model, bindingSelector) {\n\n      // Support passing a bindings hash in place of bindingSelector.\n      if (_.isObject(bindingSelector)) {\n        _.each(bindingSelector, _.bind(function(v, selector) {\n          this.unstickit(model, selector);\n        }, this));\n        return;\n      }\n\n      var models = [], destroyFns = [];\n      this._modelBindings = _.reject(this._modelBindings, function(binding) {\n        if (model && binding.model !== model) return;\n        if (bindingSelector && binding.config.selector != bindingSelector) return;\n\n        binding.model.off(binding.event, binding.fn);\n        destroyFns.push(binding.config._destroy);\n        models.push(binding.model);\n        return true;\n      });\n\n      // Trigger an event for each model that was unbound.\n      _.each(_.uniq(models), _.bind(function (model) {\n        model.trigger('stickit:unstuck', this.cid);\n      }, this));\n\n      // Call `_destroy` on a unique list of the binding callbacks.\n      _.each(_.uniq(destroyFns), _.bind(function(fn) { fn.call(this); }, this));\n\n      this.$el.off('.stickit' + (model ? '.' + model.cid : ''), bindingSelector);\n    },\n\n    // Initilize Stickit bindings for the view. Subsequent binding additions\n    // can either call `stickit` with the new bindings, or add them directly\n    // with `addBinding`. Both arguments to `stickit` are optional.\n    stickit: function(optionalModel, optionalBindingsConfig) {\n      var model = optionalModel || this.model,\n          bindings = optionalBindingsConfig || _.result(this, \"bindings\") || {};\n\n      this._modelBindings || (this._modelBindings = []);\n\n      // Add bindings in bulk using `addBinding`.\n      this.addBinding(model, bindings);\n\n      // Wrap `view.remove` to unbind stickit model and dom events.\n      var remove = this.remove;\n      if (!remove.stickitWrapped) {\n        this.remove = function() {\n          var ret = this;\n          this.unstickit();\n          if (remove) ret = remove.apply(this, arguments);\n          return ret;\n        };\n      }\n      this.remove.stickitWrapped = true;\n      return this;\n    },\n\n    // Add a single Stickit binding or a hash of bindings to the model. If\n    // `optionalModel` is ommitted, will default to the view's `model` property.\n    addBinding: function(optionalModel, selector, binding) {\n      var model = optionalModel || this.model,\n          namespace = '.stickit.' + model.cid;\n\n      binding = binding || {};\n\n      // Support jQuery-style {key: val} event maps.\n      if (_.isObject(selector)) {\n        var bindings = selector;\n        _.each(bindings, _.bind(function(val, key) {\n          this.addBinding(model, key, val);\n        }, this));\n        return;\n      }\n\n      // Special case the ':el' selector to use the view's this.$el.\n      var $el = selector === ':el' ? this.$el : this.$(selector);\n\n      // Clear any previous matching bindings.\n      this.unstickit(model, selector);\n\n      // Fail fast if the selector didn't match an element.\n      if (!$el.length) return;\n\n      // Allow shorthand setting of model attributes - `'selector':'observe'`.\n      if (_.isString(binding)) binding = {observe: binding};\n\n      // Handle case where `observe` is in the form of a function.\n      if (_.isFunction(binding.observe)) binding.observe = binding.observe.call(this);\n\n      // Find all matching Stickit handlers that could apply to this element\n      // and store in a config object.\n      var config = getConfiguration($el, binding);\n\n      // The attribute we're observing in our config.\n      var modelAttr = config.observe;\n\n      // Store needed properties for later.\n      config.selector = selector;\n      config.view = this;\n\n      // Create the model set options with a unique `bindId` so that we\n      // can avoid double-binding in the `change:attribute` event handler.\n      var bindId = config.bindId = _.uniqueId();\n\n      // Add a reference to the view for handlers of stickitChange events\n      var options = _.extend({stickitChange: config}, config.setOptions);\n\n      // Add a `_destroy` callback to the configuration, in case `destroy`\n      // is a named function and we need a unique function when unsticking.\n      config._destroy = function() {\n        applyViewFn.call(this, config.destroy, $el, model, config);\n      };\n\n      initializeAttributes($el, config, model, modelAttr);\n      initializeVisible($el, config, model, modelAttr);\n      initializeClasses($el, config, model, modelAttr);\n\n      if (modelAttr) {\n        // Setup one-way (input element -> model) bindings.\n        _.each(config.events, _.bind(function(type) {\n          var eventName = type + namespace;\n          var listener = function(event) {\n            var val = applyViewFn.call(this, config.getVal, $el, event, config, slice.call(arguments, 1));\n\n            // Don't update the model if false is returned from the `updateModel` configuration.\n            var currentVal = evaluateBoolean(config.updateModel, val, event, config);\n            if (currentVal) setAttr(model, modelAttr, val, options, config);\n          };\n          var sel = selector === ':el'? '' : selector;\n          this.$el.on(eventName, sel, _.bind(listener, this));\n        }, this));\n\n        // Setup a `change:modelAttr` observer to keep the view element in sync.\n        // `modelAttr` may be an array of attributes or a single string value.\n        _.each(_.flatten([modelAttr]), function(attr) {\n          observeModelEvent(model, 'change:' + attr, config, function(m, val, options) {\n            var changeId = options && options.stickitChange && options.stickitChange.bindId;\n            if (changeId !== bindId) {\n              var currentVal = getAttr(model, modelAttr, config);\n              updateViewBindEl($el, config, currentVal, model);\n            }\n          });\n        });\n\n        var currentVal = getAttr(model, modelAttr, config);\n        updateViewBindEl($el, config, currentVal, model, true);\n      }\n\n      // After each binding is setup, call the `initialize` callback.\n      applyViewFn.call(this, config.initialize, $el, model, config);\n    }\n  };\n\n  _.extend(Backbone.View.prototype, Stickit.ViewMixin);\n\n  // Helpers\n  // -------\n\n  var slice = [].slice;\n\n  // Evaluates the given `path` (in object/dot-notation) relative to the given\n  // `obj`. If the path is null/undefined, then the given `obj` is returned.\n  var evaluatePath = function(obj, path) {\n    var parts = (path || '').split('.');\n    var result = _.reduce(parts, function(memo, i) { return memo[i]; }, obj);\n    return result == null ? obj : result;\n  };\n\n  // If the given `fn` is a string, then view[fn] is called, otherwise it is\n  // a function that should be executed.\n  var applyViewFn = function(fn) {\n    fn = _.isString(fn) ? evaluatePath(this, fn) : fn;\n    if (fn) return (fn).apply(this, slice.call(arguments, 1));\n  };\n\n  // Given a function, string (view function reference), or a boolean\n  // value, returns the truthy result. Any other types evaluate as false.\n  // The first argument must be `reference` and the last must be `config`, but\n  // middle arguments can be variadic.\n  var evaluateBoolean = function(reference, val, config) {\n    if (_.isBoolean(reference)) {\n      return reference;\n    } else if (_.isFunction(reference) || _.isString(reference)) {\n      var view = _.last(arguments).view;\n      return applyViewFn.apply(view, arguments);\n    }\n    return false;\n  };\n\n  // Setup a model event binding with the given function, and track the event\n  // in the view's _modelBindings.\n  var observeModelEvent = function(model, event, config, fn) {\n    var view = config.view;\n    model.on(event, fn, view);\n    view._modelBindings.push({model:model, event:event, fn:fn, config:config});\n  };\n\n  // Prepares the given `val`ue and sets it into the `model`.\n  var setAttr = function(model, attr, val, options, config) {\n    var value = {}, view = config.view;\n    if (config.onSet) {\n      val = applyViewFn.call(view, config.onSet, val, config);\n    }\n\n    if (config.set) {\n      applyViewFn.call(view, config.set, attr, val, options, config);\n    } else {\n      value[attr] = val;\n      // If `observe` is defined as an array and `onSet` returned\n      // an array, then map attributes to their values.\n      if (_.isArray(attr) && _.isArray(val)) {\n        value = _.reduce(attr, function(memo, attribute, index) {\n          memo[attribute] = _.has(val, index) ? val[index] : null;\n          return memo;\n        }, {});\n      }\n      model.set(value, options);\n    }\n  };\n\n  // Returns the given `attr`'s value from the `model`, escaping and\n  // formatting if necessary. If `attr` is an array, then an array of\n  // respective values will be returned.\n  var getAttr = function(model, attr, config) {\n    var view = config.view;\n    var retrieveVal = function(field) {\n      return model[config.escape ? 'escape' : 'get'](field);\n    };\n    var sanitizeVal = function(val) {\n      return val == null ? '' : val;\n    };\n    var val = _.isArray(attr) ? _.map(attr, retrieveVal) : retrieveVal(attr);\n    if (config.onGet) val = applyViewFn.call(view, config.onGet, val, config);\n    return _.isArray(val) ? _.map(val, sanitizeVal) : sanitizeVal(val);\n  };\n\n  // Find handlers in `Backbone.Stickit._handlers` with selectors that match\n  // `$el` and generate a configuration by mixing them in the order that they\n  // were found with the given `binding`.\n  var getConfiguration = Stickit.getConfiguration = function($el, binding) {\n    var handlers = [{\n      updateModel: false,\n      updateMethod: 'text',\n      update: function($el, val, m, opts) { if ($el[opts.updateMethod]) $el[opts.updateMethod](val); },\n      getVal: function($el, e, opts) { return $el[opts.updateMethod](); }\n    }];\n    handlers = handlers.concat(_.filter(Stickit._handlers, function(handler) {\n      return $el.is(handler.selector);\n    }));\n    handlers.push(binding);\n\n    // Merge handlers into a single config object. Last props in wins.\n    var config = _.extend.apply(_, handlers);\n\n    // `updateView` is defaulted to false for configutrations with\n    // `visible`; otherwise, `updateView` is defaulted to true.\n    if (!_.has(config, 'updateView')) config.updateView = !config.visible;\n    return config;\n  };\n\n  // Setup the attributes configuration - a list that maps an attribute or\n  // property `name`, to an `observe`d model attribute, using an optional\n  // `onGet` formatter.\n  //\n  //     attributes: [{\n  //       name: 'attributeOrPropertyName',\n  //       observe: 'modelAttrName'\n  //       onGet: function(modelAttrVal, modelAttrName) { ... }\n  //     }, ...]\n  //\n  var initializeAttributes = function($el, config, model, modelAttr) {\n    var props = ['autofocus', 'autoplay', 'async', 'checked', 'controls',\n      'defer', 'disabled', 'hidden', 'indeterminate', 'loop', 'multiple',\n      'open', 'readonly', 'required', 'scoped', 'selected'];\n\n    var view = config.view;\n\n    _.each(config.attributes || [], function(attrConfig) {\n      attrConfig = _.clone(attrConfig);\n      attrConfig.view = view;\n\n      var lastClass = '';\n      var observed = attrConfig.observe || (attrConfig.observe = modelAttr);\n      var updateAttr = function() {\n        var updateType = _.includes(props, attrConfig.name) ? 'prop' : 'attr',\n            val = getAttr(model, observed, attrConfig);\n\n        // If it is a class then we need to remove the last value and add the new.\n        if (attrConfig.name === 'class') {\n          $el.removeClass(lastClass).addClass(val);\n          lastClass = val;\n        } else {\n          $el[updateType](attrConfig.name, val);\n        }\n      };\n\n      _.each(_.flatten([observed]), function(attr) {\n        observeModelEvent(model, 'change:' + attr, config, updateAttr);\n      });\n\n      // Initialize the matched element's state.\n      updateAttr();\n    });\n  };\n\n  var initializeClasses = function($el, config, model, modelAttr) {\n    _.each(config.classes || [], function(classConfig, name) {\n      if (_.isString(classConfig)) classConfig = {observe: classConfig};\n      classConfig.view = config.view;\n\n      var observed = classConfig.observe;\n      var updateClass = function() {\n        var val = getAttr(model, observed, classConfig);\n        $el.toggleClass(name, !!val);\n      };\n\n      _.each(_.flatten([observed]), function(attr) {\n        observeModelEvent(model, 'change:' + attr, config, updateClass);\n      });\n      updateClass();\n    });\n  };\n\n  // If `visible` is configured, then the view element will be shown/hidden\n  // based on the truthiness of the modelattr's value or the result of the\n  // given callback. If a `visibleFn` is also supplied, then that callback\n  // will be executed to manually handle showing/hiding the view element.\n  //\n  //     observe: 'isRight',\n  //     visible: true, // or function(val, options) {}\n  //     visibleFn: function($el, isVisible, options) {} // optional handler\n  //\n  var initializeVisible = function($el, config, model, modelAttr) {\n    if (config.visible == null) return;\n    var view = config.view;\n\n    var visibleCb = function() {\n      var visible = config.visible,\n          visibleFn = config.visibleFn,\n          val = getAttr(model, modelAttr, config),\n          isVisible = !!val;\n\n      // If `visible` is a function then it should return a boolean result to show/hide.\n      if (_.isFunction(visible) || _.isString(visible)) {\n        isVisible = !!applyViewFn.call(view, visible, val, config);\n      }\n\n      // Either use the custom `visibleFn`, if provided, or execute the standard show/hide.\n      if (visibleFn) {\n        applyViewFn.call(view, visibleFn, $el, isVisible, config);\n      } else {\n        $el.toggle(isVisible);\n      }\n    };\n\n    _.each(_.flatten([modelAttr]), function(attr) {\n      observeModelEvent(model, 'change:' + attr, config, visibleCb);\n    });\n\n    visibleCb();\n  };\n\n  // Update the value of `$el` using the given configuration and trigger the\n  // `afterUpdate` callback. This action may be blocked by `config.updateView`.\n  //\n  //     update: function($el, val, model, options) {},  // handler for updating\n  //     updateView: true, // defaults to true\n  //     afterUpdate: function($el, val, options) {} // optional callback\n  //\n  var updateViewBindEl = function($el, config, val, model, isInitializing) {\n    var view = config.view;\n    if (!evaluateBoolean(config.updateView, val, config)) return;\n    applyViewFn.call(view, config.update, $el, val, model, config);\n    if (!isInitializing) applyViewFn.call(view, config.afterUpdate, $el, val, config);\n  };\n\n  // Default Handlers\n  // ----------------\n\n  Stickit.addHandler([{\n    selector: '[contenteditable]',\n    updateMethod: 'html',\n    events: ['input', 'change']\n  }, {\n    selector: 'input',\n    events: ['propertychange', 'input', 'change'],\n    update: function($el, val) { $el.val(val); },\n    getVal: function($el) {\n      return $el.val();\n    }\n  }, {\n    selector: 'textarea',\n    events: ['propertychange', 'input', 'change'],\n    update: function($el, val) { $el.val(val); },\n    getVal: function($el) { return $el.val(); }\n  }, {\n    selector: 'input[type=\"radio\"]',\n    events: ['change'],\n    update: function($el, val) {\n      // Because we use \" in the value descriptor, we need to escape any\n      // quotes in the value itself otherwise jQuery/Sizzle complain that\n      // the selector is invalid.\n      var escapedVal = val.toString().replace(/\"/g, '\\\\\"');\n      $el.filter('[value=\"'+escapedVal+'\"]').prop('checked', true);\n    },\n    getVal: function($el) {\n      return $el.filter(':checked').val();\n    }\n  }, {\n    selector: 'input[type=\"checkbox\"]',\n    events: ['change'],\n    update: function($el, val, model, options) {\n      if ($el.length > 1) {\n        // There are multiple checkboxes so we need to go through them and check\n        // any that have value attributes that match what's in the array of `val`s.\n        val || (val = []);\n        $el.each(function(i, el) {\n          var checkbox = Backbone.$(el);\n          var checkboxVal = checkbox.val();\n          var checked = _.some(val, function(item) { return ''+item === checkboxVal; });\n          checkbox.prop('checked', checked);\n        });\n      } else {\n        var checked = _.isBoolean(val) ? val : ''+val === $el.val();\n        $el.prop('checked', checked);\n      }\n    },\n    getVal: function($el) {\n      var val;\n      if ($el.length > 1) {\n        val = _.reduce($el, function(memo, el) {\n          var checkbox = Backbone.$(el);\n          if (checkbox.prop('checked')) memo.push(checkbox.val());\n          return memo;\n        }, []);\n      } else {\n        val = $el.prop('checked');\n        // If the checkbox has a value attribute defined, then\n        // use that value. Most browsers use \"on\" as a default.\n        var boxval = $el.val();\n        if (boxval !== 'on' && boxval != null) {\n          val = val ? $el.val() : null;\n        }\n      }\n      return val;\n    }\n  }, {\n    selector: 'select',\n    events: ['change'],\n    update: function($el, val, model, options) {\n      var optList,\n        selectConfig = options.selectOptions,\n        list = selectConfig && selectConfig.collection || undefined,\n        isMultiple = $el.prop('multiple');\n\n      // If there are no `selectOptions` then we assume that the `<select>`\n      // is pre-rendered and that we need to generate the collection.\n      if (!selectConfig) {\n        selectConfig = {};\n        var getList = function($el) {\n          return $el.map(function(index, option) {\n            // Retrieve the text and value of the option, preferring \"stickit-bind-val\"\n            // data attribute over value property.\n            var dataVal = Backbone.$(option).data('stickit-bind-val');\n            return {\n              value: dataVal !== undefined ? dataVal : option.value,\n              label: option.text\n            };\n          }).get();\n        };\n        if ($el.find('optgroup').length) {\n          list = {opt_labels:[]};\n          // Search for options without optgroup\n          if ($el.find('> option').length) {\n            list.opt_labels.push(undefined);\n            _.each($el.find('> option'), function(el) {\n              list[undefined] = getList(Backbone.$(el));\n            });\n          }\n          _.each($el.find('optgroup'), function(el) {\n            var label = Backbone.$(el).attr('label');\n            list.opt_labels.push(label);\n            list[label] = getList(Backbone.$(el).find('option'));\n          });\n        } else {\n          list = getList($el.find('option'));\n        }\n      }\n\n      // Fill in default label and path values.\n      selectConfig.valuePath = selectConfig.valuePath || 'value';\n      selectConfig.labelPath = selectConfig.labelPath || 'label';\n      selectConfig.disabledPath = selectConfig.disabledPath || 'disabled';\n\n      var addSelectOptions = function(optList, $el, fieldVal) {\n        var fragment = document.createDocumentFragment();\n\n        _.each(optList, function(obj) {\n          var option = Backbone.$('<option/>'), optionVal = obj;\n\n          var fillOption = function(text, val, disabled) {\n            option.text(text);\n            optionVal = val;\n            // Save the option value as data so that we can reference it later.\n            option.data('stickit-bind-val', optionVal);\n            if (!_.isArray(optionVal) && !_.isObject(optionVal)) option.val(optionVal);\n\n            if (disabled === true) option.prop('disabled', 'disabled');\n          };\n\n          var text, val, disabled;\n          if (obj === '__default__') {\n            text = fieldVal.label,\n            val = fieldVal.value,\n            disabled = fieldVal.disabled;\n          } else {\n            text = evaluatePath(obj, selectConfig.labelPath),\n            val = evaluatePath(obj, selectConfig.valuePath),\n            disabled = evaluatePath(obj, selectConfig.disabledPath);\n          }\n          fillOption(text, val, disabled);\n\n          // Determine if this option is selected.\n          var isSelected = function() {\n            if (!isMultiple && optionVal != null && fieldVal != null && optionVal === fieldVal) {\n              return true;\n            } else if (_.isObject(fieldVal) && _.isEqual(optionVal, fieldVal)) {\n              return true;\n            }\n            return false;\n          };\n\n          if (isSelected()) {\n            option.prop('selected', true);\n          } else if (isMultiple && _.isArray(fieldVal)) {\n            _.each(fieldVal, function(val) {\n              if (_.isObject(val)) val = evaluatePath(val, selectConfig.valuePath);\n              if (val === optionVal || (_.isObject(val) && _.isEqual(optionVal, val)))\n                option.prop('selected', true);\n            });\n          }\n\n          option.appendTo(fragment);\n        });\n\n        $el.append(fragment);\n      };\n\n      $el.empty();\n\n      // The `list` configuration is a function that returns the options list or a string\n      // which represents the path to the list relative to `window` or the view/`this`.\n      if (_.isString(list)) {\n        var context = window;\n        if (list.indexOf('this.') === 0) context = this;\n        list = list.replace(/^[a-z]*\\.(.+)$/, '$1');\n        optList = evaluatePath(context, list);\n      } else if (_.isFunction(list)) {\n        optList = applyViewFn.call(this, list, $el, options);\n      } else {\n        optList = list;\n      }\n\n      // Support Backbone.Collection and deserialize.\n      if (optList instanceof Backbone.Collection) {\n        var collection = optList;\n        var refreshSelectOptions = function() {\n          var currentVal = getAttr(model, options.observe, options);\n          applyViewFn.call(this, options.update, $el, currentVal, model, options);\n        };\n        // We need to call this function after unstickit and after an update so we don't end up\n        // with multiple listeners doing the same thing\n        var removeCollectionListeners = function() {\n          collection.off('add remove reset sort', refreshSelectOptions);\n        };\n        var removeAllListeners = function() {\n          removeCollectionListeners();\n          collection.off('stickit:selectRefresh');\n          collection.off('stickit:selectRefreshForView');\n          model.off('stickit:selectRefresh');\n        };\n        collection.trigger('stickit:selectRefreshForView', this.cid);\n        // Compare the view cid on the event to this.cid to ensure we don't\n        // remove events from the collection that are tied to other views.\n        collection.once('stickit:selectRefreshForView', function(viewCid) {\n          if(this.cid == viewCid){\n            // Remove previously set event listeners by triggering a custom event\n            collection.trigger('stickit:selectRefresh');\n          }\n        }, this);\n        collection.once('stickit:selectRefresh', removeCollectionListeners, this);\n\n        // Listen to the collection and trigger an update of the select options\n        collection.on('add remove reset sort', refreshSelectOptions, this);\n\n        // Remove the previous model event listener\n        model.trigger('stickit:selectRefresh');\n        model.once('stickit:selectRefresh', function() {\n          model.off('stickit:unstuck', removeAllListeners);\n        });\n        // Remove collection event listeners once this binding is unstuck\n        model.once('stickit:unstuck', removeAllListeners, this);\n        optList = optList.toJSON();\n      }\n\n      if (selectConfig.defaultOption) {\n        var option = _.isFunction(selectConfig.defaultOption) ?\n          selectConfig.defaultOption.call(this, $el, options) :\n          selectConfig.defaultOption;\n        addSelectOptions([\"__default__\"], $el, option);\n      }\n\n      if (_.isArray(optList)) {\n        addSelectOptions(optList, $el, val);\n      } else if (optList.opt_labels) {\n        // To define a select with optgroups, format selectOptions.collection as an object\n        // with an 'opt_labels' property, as in the following:\n        //\n        //     {\n        //       'opt_labels': ['Looney Tunes', 'Three Stooges'],\n        //       'Looney Tunes': [{id: 1, name: 'Bugs Bunny'}, {id: 2, name: 'Donald Duck'}],\n        //       'Three Stooges': [{id: 3, name : 'moe'}, {id: 4, name : 'larry'}, {id: 5, name : 'curly'}]\n        //     }\n        //\n        _.each(optList.opt_labels, function(label) {\n          var $group = Backbone.$('<optgroup/>').attr('label', label);\n          addSelectOptions(optList[label], $group, val);\n          $el.append($group);\n        });\n        // With no 'opt_labels' parameter, the object is assumed to be a simple value-label map.\n        // Pass a selectOptions.comparator to override the default order of alphabetical by label.\n      } else {\n        var opts = [], opt;\n        for (var i in optList) {\n          opt = {};\n          opt[selectConfig.valuePath] = i;\n          opt[selectConfig.labelPath] = optList[i];\n          opts.push(opt);\n        }\n        opts = _.sortBy(opts, selectConfig.comparator || selectConfig.labelPath);\n        addSelectOptions(opts, $el, val);\n      }\n    },\n    getVal: function($el) {\n      var selected = $el.find('option:selected');\n\n      if ($el.prop('multiple')) {\n        return _.map(selected, function(el) {\n          return Backbone.$(el).data('stickit-bind-val');\n        });\n      } else {\n        return selected.data('stickit-bind-val');\n      }\n    }\n  }]);\n\n  return Stickit;\n\n}));\n"]}