{"version":3,"sources":["ImageNotAvailable.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;IAYF,SAAgB,UAAU,CAAC,WAAW;QAClC,oCAAoC;QACpC,WAAW,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,iBAAiB,EAAE,UAAS,IAAI;YACvD,yDAAyD;YACzD,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE;gBACd,IAAA,iBAAiB,GAAK,WAAW,CAAC,SAAS,EAAE,kBAA5B,CAA6B;gBACtD,6EAA6E;gBAC7E,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;oBACpB,IAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;oBAC3B,IAAM,GAAG,GAAG,WAAW,CAAC,WAAW,CAC/B,KAAK,CAAC,wCAAwC,CAC1C,6BAA6B,EAC7B,iBAAiB,CACpB,EACD,KAAK,CAAC,gBAAgB,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CACxD,CAAC;oBAEF,qEAAqE;oBACrE,sEAAsE;oBACtE,mBAAmB;oBACnB,KAAK;yBACA,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC;wBACjB,4BAA4B;yBAC3B,IAAI,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;oBAEvC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,IAAU,KAAK,CAAC,MAAO,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE,CAAC;oBAChF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC5B;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IA9BD,gCA8BC","file":"ImageNotAvailable.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ImageNotAvailable\"/>\n\n// --------------------\n// Simple Module that will make sure that\n// if an image files to load it will load an alternative image in it\n\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\n\nexport function mountToApp(application) {\n    // Every time a new view is rendered\n    application.getLayout().on('afterAppendView', function(view) {\n        // it will look at the img and bind the error event to it\n        view.$('img').on('error', function() {\n            const { imageNotAvailable } = application.getConfig();\n            // and haven't tried to changed it before, so we don't enter an infinite loop\n            if (!this.errorCounter) {\n                const $this = jQuery(this);\n                const src = application.resizeImage(\n                    Utils.getThemeAbsoluteUrlOfNonManagedResources(\n                        'img/no_image_available.jpeg',\n                        imageNotAvailable\n                    ),\n                    Utils.getViewportWidth() < 768 ? 'thumbnail' : 'zoom'\n                );\n\n                // it will set the src of the img to the default image not available.\n                // You can set logic based on size or a class for displaying different\n                // urls if you need\n                $this\n                    .attr('src', src)\n                    // ImageLoader compatibility\n                    .attr('data-image-status', 'done');\n\n                $this.parent('[data-zoom]').length && (<any>$this.parent)('[data-zoom]').zoom();\n                this.errorCounter = true;\n            }\n        });\n    });\n}\n"]}