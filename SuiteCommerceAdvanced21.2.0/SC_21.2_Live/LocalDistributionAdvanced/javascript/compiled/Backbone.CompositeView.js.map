{"version":3,"sources":["Backbone.CompositeView.ts"],"names":[],"mappings":"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","file":"Backbone.CompositeView.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Backbone.CompositeView\"/>\n/// <reference path=\"../../Utilities/JavaScript/UnderscoreExtended.d.ts\" />\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { JSONValue, JSONObject } from '../../Utilities/JavaScript/Utils.Interfaces';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport { ContextData } from '../../Core/JavaScript/View';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { SCBaseComponentChildViewsComponent } from '../../SC/JavaScript/SC.BaseComponent.ChildViewsComponent';\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport PluginContainer = require('../../PluginContainer/JavaScript/PluginContainer');\n\nconst compositeView: any = {\n    // @method destroyCompositeView Destroy all the child view instancesƒ\n    destroyCompositeView: function destroyCompositeView() {\n        const self = this;\n\n        _(this.childViewInstances).each(function(container, container_name) {\n            _.each(<any>container, function(generator, view_name) {\n                self.removeChildViewInstance(container_name, view_name);\n            });\n        });\n    },\n\n    // @method renderChild Creates and render a childView\n    // @param {DOM|String}elementOrViewName The DOM element or the name of the childView\n    // @return {Backbone.View}\n    // @deprecated\n    renderChild: function renderChild(elementOrViewName) {\n        if (typeof elementOrViewName !== 'string') {\n            elementOrViewName = jQuery(elementOrViewName).data('view');\n        }\n\n        if (elementOrViewName) {\n            const generators = _.values(this.childViewInstances[elementOrViewName]);\n            _.each(generators, generator => {\n                if (generator.childViewInstance) {\n                    generator.childViewInstance.destroy(true);\n                    generator.childViewInstance = null;\n                }\n            });\n\n            this.renderChildViewContainer(elementOrViewName, true);\n        }\n\n        return this.getChildViewInstance(elementOrViewName);\n    },\n\n    // @method renderCompositeView Creates and renders the childViews\n    renderCompositeView: function renderCompositeView() {\n        // @event beforeCompositeViewRender triggered just before\n        // a view's children finish rendering in the DOM\n        this.trigger('beforeCompositeViewRender', this);\n\n        _.each(this.childViewInstances, (_childViews: any, containerName: string) => {\n            this.$el.find('[data-cms-area=\"' + containerName + '\"]').html('');\n        });\n\n        this._createChildViewInstances();\n        this._renderChildViewInstances();\n\n        BackboneView.afterCompositeViewRender.executeAll(this);\n\n        // @event afterCompositeViewRender triggered when a view's\n        // children finish rendering in the DOM\n        this.trigger('afterCompositeViewRender', this);\n    },\n\n    // @method _renderChildViewInstances Render the all the childViews\n    // @private\n    _renderChildViewInstances: function _renderChildViewInstances() {\n        const self = this;\n\n        _.each(this.childViewInstances, function(child_views, container_name) {\n            self.renderChildViewContainer(container_name);\n        });\n    },\n\n    // @method _renderChildViewInstance Render a childView\n    // @param {Backbone.View} child_view_instance The instance of the childview\n    // @param {String} placeholder Where to insert the childView\n    // @param {Number} number_views The number of views of the container of the childView\n    // @private\n    _renderChildViewInstance: function _renderChildViewInstance(\n        child_view_instance,\n        placeholder,\n        number_views,\n        isExternal\n    ) {\n        if (child_view_instance) {\n            this._setCustomTemplate(child_view_instance);\n\n            if (number_views === 1 && !isExternal) {\n                this._finishRender(child_view_instance, placeholder);\n            } else {\n                child_view_instance.render();\n                placeholder.append(child_view_instance.$el);\n            }\n        }\n    },\n\n    // @method renderChildViewContainer Renders the childViews of a container\n    // @param {String} container_name The name of the container\n    // @param {Boolean} create_child Indicate if the childView instnace is created\n    renderChildViewContainer: function renderChildViewContainer(container_name, create_child) {\n        const self = this;\n        const generators = _.values(this.childViewInstances[container_name]);\n\n        generators.sort(function(a, b) {\n            return a.childViewIndex - b.childViewIndex;\n        });\n\n        _.each(generators, function(generator) {\n            if (create_child) {\n                self.createChildViewInstance(generator);\n            }\n\n            if (!generator.$placeholder) {\n                const placeholder = self._getPlaceholder(generator.childViewSelector);\n\n                generator.$placeholder = self.$(placeholder);\n            }\n\n            self._renderChildViewInstance(\n                generator.childViewInstance,\n                generator.$placeholder,\n                generators.length,\n                generator.childViewIsExternal\n            );\n        });\n    },\n\n    // @method_getPlaceholder\n    // @param {Object} selector\n    // @return {String}\n    // @private\n    _getPlaceholder: function _getPlaceholder(selector) {\n        let placeholder = '';\n\n        _.each(selector, function(value, key) {\n            placeholder += '[' + key + '=\"' + value + '\"]';\n        });\n\n        return placeholder;\n    },\n\n    // @method getViewJsonLd Gets the complete jsonLd for the view and childrens\n    // @return {JQuery.Deferred<JSONObject>}\n    getViewJsonLd: function getViewJsonLd(): JQuery.Deferred<JSONObject> {\n        if (Configuration.get('structureddatamarkup.type') !== 'JSON-LD') {\n            return jQuery.Deferred().resolve(null);\n        }\n\n        const promises = [];\n        _.each(this.childViewInstances, function(child_views: any): void {\n            _.each(child_views, function(generator: any): void {\n                if (generator.childViewInstance && generator.childViewInstance.getJsonLd) {\n                    promises.push(generator.childViewInstance.getViewJsonLd());\n                }\n            });\n        });\n\n        return <any>jQuery.when(...promises).then(\n            (...jsonLds): JQuery.Deferred<JSONObject> => {\n                let jsonLdResult = {};\n                _.each(\n                    jsonLds,\n                    (jsonld: JSONValue): void => {\n                        jsonLdResult = { ...jsonLdResult, ...Utils.deepCopy(jsonld) };\n                    }\n                );\n                let resultPromise;\n                if (this.getJsonLd) {\n                    resultPromise = SCBaseComponentChildViewsComponent.getModifiedJsonLd(\n                        this,\n                        jsonLdResult\n                    ).then(\n                        (result: JSONObject): JSONObject => {\n                            return { ...result, ...jsonLdResult };\n                        }\n                    );\n                } else {\n                    resultPromise = jQuery.Deferred().resolve(jsonLdResult);\n                }\n                return resultPromise;\n            }\n        );\n    },\n\n    // @method _createChildViewInstances Create instances of all childViews\n    // @private\n    _createChildViewInstances: function _createChildViewInstances() {\n        const self = this;\n\n        _.each(this.childViewInstances, function(child_views: any) {\n            _.each(child_views, function(generator: any) {\n                const placeholder = self._getPlaceholder(generator.childViewSelector);\n                const $element = self.$(placeholder);\n\n                if ($element.length) {\n                    generator.$placeholder = $element;\n\n                    if (generator.childViewConstructor) {\n                        self.createChildViewInstance(generator, $element.data());\n                    }\n                }\n            });\n        });\n    },\n\n    // @method createChildViewInstance Create a instance of a childView\n    // @param {Object} generator The generator of the childView\n    // @param {Object} element_data Data of the DOM to initialize the instance\n    // @return {Backbone.View} return the instance of the childView\n    createChildViewInstance: function createChildViewInstance(generator, element_data) {\n        element_data = element_data || {};\n\n        const options = _.extend({}, element_data, this.options);\n\n        if (generator.childViewInstance) {\n            generator.childViewInstance.destroy();\n        }\n\n        if (generator.childViewConstructor.extend === BackboneView.extend) {\n            // special case of 'Some.View': SomeView\n            // generator.childViewInstance = new generator.childViewConstructor(options);\n            generator.childViewInstance = generator.childViewIsExternal\n                ? new generator.childViewConstructor()\n                : new generator.childViewConstructor(options);\n        } else {\n            // common case 'Some.View': function() { ... }\n            generator.childViewInstance = generator.childViewIsExternal\n                ? generator.childViewConstructor.call(null)\n                : generator.childViewConstructor.call(this, options);\n\n            if (_.isFunction(generator.childViewInstance)) {\n                generator.childViewInstance = generator.childViewInstance();\n            }\n        }\n\n        if (generator.childViewInstance) {\n            if (!generator.childViewIsExternal || generator.childViewInstance.parentView) {\n                generator.childViewInstance.parentView = generator.childViewIsExternal\n                    ? this\n                    : generator.childViewInstance.parentView || this;\n                generator.childViewInstance.hasParent = true;\n            }\n\n            const context_data_request = generator.childViewInstance.getContextDataRequest();\n\n            if (context_data_request.length) {\n                const context_data = this.getContextData(context_data_request);\n\n                if (generator.childViewInstance.validateContextDataRequest(context_data)) {\n                    generator.childViewInstance.setContextData(context_data);\n                } else {\n                    console.error(\n                        'Requested context data is not valid for this child view instance.'\n                    );\n\n                    generator.childViewInstance = null;\n\n                    return null;\n                }\n            }\n\n            generator.childViewInstance.placeholderData = element_data || {};\n            generator.childViewInstance._originalTemplate = generator.childViewInstance.template;\n\n            if (\n                !(\n                    generator.childViewInstance.attributes &&\n                    generator.childViewInstance.attributes['data-root-component-id']\n                )\n            ) {\n                generator.childViewInstance.attributes =\n                    generator.childViewInstance.attributes || {};\n                generator.childViewInstance.attributes['data-root-component-id'] =\n                    (this.attributes && this.attributes['data-root-component-id']) || '';\n            }\n\n            this._setCustomTemplate(generator.childViewInstance);\n        }\n\n        return generator.childViewInstance;\n    },\n\n    // @method addChildViewInstances Add childViews to this View\n    // @param {Object} child_views The view to be added\n    // @param {Boolean} render Indicates if the childViews needs to be rendered\n    addChildViewInstances: function addChildViewInstances(child_views, render) {\n        const self: any = this;\n\n        _.each(child_views, function(child_view: any, child_view_container: any) {\n            const isCMS = child_view_container.indexOf('cms:') === 0;\n\n            child_view_container = child_view_container.replace('cms:', '');\n\n            if (!self.childViewInstances[child_view_container]) {\n                self.childViewInstances[child_view_container] = {};\n            }\n\n            const childViewSelector = isCMS\n                ? { 'data-cms-area': child_view_container }\n                : { 'data-view': child_view_container };\n\n            if (_.isFunction(child_view)) {\n                // console.warn('This --- will be deprecated, please use the follow format ---');\n                const generator =\n                    self.childViewInstances[child_view_container][child_view_container];\n\n                if (generator && generator.childViewInstance) {\n                    generator.childViewInstance.destroy();\n                }\n\n                self.childViewInstances[child_view_container][child_view_container] = {\n                    childViewIndex: 10,\n                    childViewConstructor: child_view,\n                    childViewInstance: null, // initialize??\n                    childViewSelector: childViewSelector\n                };\n            } else {\n                _.each(child_view, function(child_view_generator: any, child_view_name: any) {\n                    const generator =\n                        self.childViewInstances[child_view_container][child_view_name];\n\n                    if (generator && generator.childViewInstance) {\n                        generator.childViewInstance.destroy();\n                    }\n\n                    self.childViewInstances[child_view_container][child_view_name] = <any>{\n                        childViewIndex: child_view_generator.childViewIndex || 10,\n                        childViewConstructor: child_view_generator.childViewConstructor,\n                        childViewInstance: child_view_generator.childViewInstance,\n                        childViewSelector:\n                            child_view_generator.childViewSelector || childViewSelector,\n                        childViewIsExternal: child_view_generator.childViewIsExternal\n                    };\n\n                    if (child_view_generator.childViewInstance) {\n                        const placeholder = self._getPlaceholder(\n                            child_view_generator.childViewSelector\n                        );\n\n                        if (\n                            !child_view_generator.childViewIsExternal ||\n                            child_view_generator.childViewInstance.parentView\n                        ) {\n                            child_view_generator.childViewInstance.parentView = child_view_generator.childViewIsExternal\n                                ? self\n                                : child_view_generator.childViewInstance.parentView || self;\n                            child_view_generator.childViewInstance.hasParent = true;\n                        }\n\n                        child_view_generator.childViewInstance.placeholderData =\n                            self.$(placeholder).data() || {};\n                        child_view_generator.childViewInstance._originalTemplate =\n                            child_view_generator.childViewInstance.template;\n\n                        if (\n                            !(\n                                child_view_generator.childViewInstance.attributes &&\n                                child_view_generator.childViewInstance.attributes[\n                                    'data-root-component-id'\n                                ]\n                            )\n                        ) {\n                            child_view_generator.childViewInstance.attributes =\n                                child_view_generator.childViewInstance.attributes || {};\n                            child_view_generator.childViewInstance.attributes[\n                                'data-root-component-id'\n                            ] =\n                                (self.attributes && self.attributes['data-root-component-id']) ||\n                                '';\n                        }\n\n                        self._setCustomTemplate(child_view_generator.childViewInstance);\n                    }\n                });\n            }\n\n            if (render) {\n                self.renderChildViewContainer(child_view_container);\n            }\n        });\n    },\n\n    getChildViews: function getChildViews() {\n        return this.childViews;\n    },\n\n    // @method getChildViewInstance Get a particular childView\n    // @param {String} container_name The name of the container_name\n    // @param {String} child_view_name The name of the view\n    // @return {Backbone.View}\n    getChildViewInstance: function getChildViewInstance(container_name, child_view_name) {\n        child_view_name = child_view_name || container_name;\n\n        return (\n            this.childViewInstances[container_name] &&\n            this.childViewInstances[container_name][child_view_name] &&\n            this.childViewInstances[container_name][child_view_name].childViewInstance\n        );\n    },\n\n    // @method getChildViewInstances Returns an Array of all the childViews instances\n    // @param {String|null} container_name The name of the container (Optional)\n    // @return {Array<Backbone.View>}\n    getChildViewInstances: function getChildViewInstances(container_name) {\n        const all_child_views = [];\n\n        if (container_name) {\n            _.each(this.childViewInstances[container_name], function(child_view_generator: any) {\n                if (child_view_generator.childViewInstance) {\n                    all_child_views.push(child_view_generator.childViewInstance);\n                }\n            });\n        } else {\n            _.each(this.childViewInstances, function(child_views: any) {\n                _.each(child_views, function(child_view_generator: any) {\n                    if (child_view_generator.childViewInstance) {\n                        all_child_views.push(child_view_generator.childViewInstance);\n                    }\n                });\n            });\n        }\n\n        return all_child_views;\n    },\n\n    // @method updateChildViewInstances updates the render settings or the selector\n    // @param {String} selector Where the child view will be inserted\n    // @param {Backbone.View} child_instance Child View to be added\n    // @param {Backbone.CompositeView.AddChildView.Settings} render_settings Indicate how the insertion must be done. Information like where the child view will be placed\n    // @return {Void}\n    updateChildViewInstances: function updateChildViewInstances(child_views, render) {\n        const self = this;\n        const promises = [];\n\n        _.each(child_views, function(child_view: any, container_name: any) {\n            _.each(child_view, function(generator: any, child_view_name: any) {\n                promises.push(self.removeChildViewInstance(container_name, child_view_name));\n            });\n        });\n\n        return jQuery.when(promises).then(function() {\n            self.addChildViewInstances(child_views, render);\n        });\n    },\n\n    // @method removeChildViewInstance Removes a child view instance from the current view. Optionally destroy the child view\n    // @param {Backbone.View} child_instance Instance to be removed\n    // @param {Boolean} destroy Indicate if the child view will be also destroyed.\n    // @return {jQuery.Deferred|undefined}\n    removeChildViewInstance: function removeChildViewInstance(\n        container_name,\n        child_view_name,\n        destroy\n    ) {\n        if (\n            this.childViewInstances[container_name] &&\n            this.childViewInstances[container_name][child_view_name]\n        ) {\n            const child_view_instance = this.childViewInstances[container_name][child_view_name]\n                .childViewInstance;\n\n            destroy && delete this.childViewInstances[container_name][child_view_name];\n\n            if (child_view_instance) {\n                child_view_instance.$el.detach();\n                return child_view_instance.destroy(!destroy);\n            }\n        }\n    },\n\n    _getCustomTemplatePrefix: function _getCustomTemplatePrefix() {\n        return ['cell-', 'row-', 'child-', ''];\n    },\n\n    // @method _setCustomTemplate Select the best templated based on the current view port with and set it to the child view\n    // @param {Backbone.View} child_view Instance of the child view to be inserted\n    _setCustomTemplate: function _setCustomTemplate(child_view) {\n        const template_prefix = this._getCustomTemplatePrefix();\n\n        _.each(template_prefix, function(prefix) {\n            const template_name = child_view.placeholderData[prefix + 'template'];\n\n            // if (template_name)\n            // {\n            const definitive_template_name = Utils.selectByViewportWidth(\n                {\n                    phone: child_view.placeholderData[prefix + 'phoneTemplate'], // remember that data-phone-template get's converted in phoneTemplate when we use jQuery.data()\n                    tablet: child_view.placeholderData[prefix + 'tabletTemplate'],\n                    desktop: template_name\n                },\n                template_name\n            );\n\n            if (definitive_template_name) {\n                // IMPORTANT: we are require()ing the template dynamically! In order to this to work, the template should\n                // be ALREADY loaded and this is automatically handled at build time by gulp template\n                child_view[prefix ? prefix + 'Template' : 'template'] = Utils.requireModules(\n                    definitive_template_name + '.tpl'\n                );\n            } else {\n                child_view[prefix ? prefix + 'Template' : 'template'] =\n                    child_view._originalTemplate;\n            }\n        });\n    },\n\n    getTemplateName: function getTemplateName() {\n        return (this.template && this.template.Name) || '';\n    },\n\n    // @method _finishRender Render the child view and insert its result into the placeholder\n    // @param {Backbone.View} child_view Instance of the view to be inserted\n    // @param {jQuery} $placeholder Element container of the child. This is the div that contains the tag data-view=\"...\"\n    _finishRender: function _finishRender(child_view, $placeholder) {\n        // HEADS UP! we use the placeholder as the children view's container element ($el)\n        child_view.$el = $placeholder;\n\n        // keep the placeholder classes\n        const placeholder_class = $placeholder.attr('class');\n        child_view.className = (child_view.className || '') + ' ' + (placeholder_class || '');\n\n        child_view.render();\n    },\n\n    setChildViewIndex: function setChildViewIndex(container_name, view_name, index, render) {\n        if (\n            this.childViewInstances[container_name] &&\n            this.childViewInstances[container_name][view_name]\n        ) {\n            this.childViewInstances[container_name][view_name].childViewIndex = index;\n\n            if (render) {\n                this.render();\n            }\n        }\n    },\n\n    contextData: {},\n\n    // ie: contexts = ['item', 'order']\n    getContextData: function(contexts): ContextData {\n        if (contexts) {\n            const contextData = {};\n            let i = contexts.length;\n\n            while (i--) {\n                const selfContextData = _.extend(\n                    {},\n                    SCBaseComponentChildViewsComponent.getModifiedContext(this),\n                    this.contextData,\n                    this.constructor.contextData\n                );\n\n                if (selfContextData[contexts[i]]) {\n                    contextData[contexts[i]] = _.bind(selfContextData[contexts[i]], this);\n                    contexts.splice(i, 1);\n                }\n            }\n\n            if (contexts.length && this.parentView) {\n                return _.extend(this.parentView.getContextData(contexts), contextData);\n            }\n\n            return contextData;\n        }\n        return this.contextData;\n    },\n\n    setContextData: function(contextData: ContextData) {\n        this.contextData = { ...contextData, ...this.contextData };\n    }\n};\n\n_.extend(BackboneView.prototype, compositeView);\n\n// @module Backbone @class Backbone.View\n// @property {PluginContainer} afterCompositeViewRender Plugins registered here will be called when\n// a composite view finish rendering it self and all its children.\nBackboneView.afterCompositeViewRender = new PluginContainer();\n\n// @method addExtraChildrenViews Allows adding extra child view to any view.\n// This property will be read by the class Backbone.CompositeView when initializing a view\n// @param {ExtraChildView} option_views\n// @return {Void}\n// @static\nBackboneView.addExtraChildrenViews = function addExtraChildrenViews(option_views) {\n    console.warn(\n        'DEPRECATED: \"Backbone.View.addExtraChildrenViews(params)\" is deprecated. Use \"Backbone.CompositeView.addChildViews(params)\" instead'\n    );\n\n    this.addChildViews(option_views);\n};\n\n/*\n\t\tchildViews = {\n\t\t\t'Other.View': {\n\t\t\t\t'Id1': {\n\t\t\t\t\t'childViewIndex': 10\n\t\t\t\t,\t'childViewConstructor': function() {}\n\t\t\t\t}\n\t\t\t\t'Id2': {\n\t\t\t\t\t'childViewIndex': 20\n\t\t\t\t,\t'childViewConstructor': function() {}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t*/\n\n// @method setChildViewIndex Allows to change the position of a Child View in a container\n// @param {String} container_name The name of the container\n// @param {String} view_name The name of the Child View\n// @param {Number} index The new index to position the Child View in the container\n// @return {Void}\n// @static\nBackboneView.setChildViewIndex = function setChildViewIndex(container_name, view_name, index) {\n    if (this.childViews[container_name]) {\n        if (_.isFunction(this.childViews[container_name])) {\n            this._normalizeChildView(container_name);\n        }\n\n        if (this.childViews[container_name][view_name]) {\n            this.childViews[container_name][view_name].childViewIndex = index;\n        }\n    }\n};\n\n// @method _normalizeChildView Change the format of the childView into the new format\n// @param {String} container_name The name of the container\n// @return {Void}\n// @static\n// @private\nBackboneView._normalizeChildView = function _normalizeChildView(container_name) {\n    const childViewConstructor = this.childViews[container_name];\n\n    this.childViews[container_name] = {};\n\n    this.childViews[container_name][container_name] = {\n        childViewIndex: 10,\n        childViewConstructor: childViewConstructor\n    };\n};\n\n// @method addChildViews adds children views to the current view\n// @param {ChildViews} child_views\n// @return {Void}\n// @static\nBackboneView.addChildViews = function addChildViews(child_views) {\n    const self: any = this;\n\n    this.childViews = _.extend({}, this.prototype.childViews, this.childViews);\n\n    _.each(child_views, function(child_view: any, child_view_container) {\n        if (self.childViews[child_view_container]) {\n            if (_.isFunction(self.childViews[child_view_container])) {\n                self._normalizeChildView(child_view_container);\n            }\n        } else {\n            self.childViews[child_view_container] = {};\n        }\n\n        if (_.isFunction(child_view)) {\n            self.childViews[child_view_container][child_view_container] = {\n                childViewIndex: 10,\n                childViewConstructor: child_view\n            };\n        } else {\n            _.each(child_view, function(child_view_generator: any, child_view_name) {\n                self.childViews[child_view_container][child_view_name] = child_view_generator;\n            });\n        }\n    });\n};\n\n// @method removeChildView removes a particular childView\n// @param {String} container_name\n// @param {String} child_view_name\n// @return {Void}\n// @static\nBackboneView.removeChildView = function removeChildView(container_name, child_view_name) {\n    if (_.isFunction(this.childViews[container_name])) {\n        delete this.childViews[container_name];\n    } else if (\n        this.childViews[container_name] &&\n        this.childViews[container_name][child_view_name]\n    ) {\n        delete this.childViews[container_name][child_view_name];\n    }\n};\n\nBackboneView.beforeInitialize.install({\n    name: 'compositeView',\n    priority: 1,\n    execute: function() {\n        const childViews = _.extend({}, this.getChildViews(), this.constructor.childViews);\n\n        this.childViewInstances = {};\n\n        this.addChildViewInstances(childViews);\n\n        if (this.options) {\n            if (this.options.extraChildViews) {\n                console.warn(\n                    'DEPRECATED: \"options.extraChildViews\" is deprecated. Use \"options.childViews\" instead'\n                );\n                // Add extra child views from view's initialization options\n\n                this.addChildViewInstances(this.options.extraChildViews);\n            }\n\n            if (this.options.childViews) {\n                // Add extra child views from view's initialization options\n                this.addChildViewInstances(this.options.childViews);\n            }\n        }\n    }\n});\n\nBackboneView.contextData = {};\n\nBackboneView.getContextData = function getContextData(): ContextData {\n    return this.contextData;\n};\n\nBackboneView.setContextData = function setContextData(contextData: ContextData) {\n    this.contextData = { ...contextData, ...this.contextData };\n};\n\nconst result: any = {\n    add: jQuery.noop // Just for backwards compatibility\n};\n\nexport = result;\n\n// @class ChildViews This class defines the type used on each childView property on composite views\n// Each property on this object will be related with a child view and the its value must a function that when evaluated returns the instance\n// of a Backbone View, or the constructor of a Backbone.View\n// Example\n//\n// ,\tchildView: {\n//\t\t'PromoCodeContainer':\n//\t\t{\n//\t\t\t'PromoCodeForm':\n//\t\t\t{\n//\t\t\t\tchildViewIndex: 10\n//\t\t\t,\tchildViewConstructor: function ()\n//\t\t\t\t{\n//\t\t\t\t\treturn new PromocodeFormView({});\n//\t\t\t\t}\n//\t\t\t}\n//\t\t}\n//\t}\n//\n\n// @class addChildViews This class define the type used to add external children views into a view by specifying them on the view options when\n// creating a new composite view (this is a common scenario when creating components), and by specifying external child views statically using\n// the addChildViews method present in all Backbone Views when the Backbone.CompositeView module is loaded\n// Example\n//\n//\tSomeView.addChildViews({\n//\t\t'ChildViewContainer':\n//\t\t{\n//\t\t\t'ChildViewName': function ()\n//\t\t\t{\n//\t\t\t\treturn new ExtraChildView({model: some_view_model});\n//\t\t\t};\n//\t\t}\n//\t});\n//\n"]}