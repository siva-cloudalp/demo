{"version":3,"sources":["OrderWizard.Module.PaymentMethod.Invoice.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAWF,IAAM,qCAAqC,GAAQ,8BAA8B,CAAC,MAAM,CAAC;QACrF,QAAQ,EAAE,6CAA6C;QAEvD,MAAM,EAAE;YACJ,kCAAkC,EAAE,WAAW;SAClD;QAED,MAAM,EAAE,CAAC,wBAAwB,EAAE,8BAA8B,CAAC;QAElE,SAAS,EAAE;YACP,IAAM,IAAI,GAAG,IAAI,CAAC;YAClB,IAAM,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC;gBAClC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,sBAAsB,CAAC;gBAC9C,MAAM,EAAE;oBACI,IAAA,WAAW,GAAK,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,YAAxC,CAAyC;oBAC5D,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC,CAAC;oBACtE,OAAO,IAAI,CAAC;gBAChB,CAAC;aACJ,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;QACrE,CAAC;QAED,QAAQ,EAAE;YACN,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;YACnE,OAAO,KAAK,IAAI,KAAK,CAAC,UAAU,CAAC;QACrC,CAAC;QAED,UAAU,EAAE;YACR,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;QACvC,CAAC;QAED,MAAM,EAAE;YACJ,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;gBACjB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;aACzB;QACL,CAAC;QAED,MAAM,EAAE;YACJ,IAAM,IAAI,GAAG,IAAI,CAAC;YAElB,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;gBACvB,IAAI,CAAC,aAAa,GAAG,IAAI,6BAA6B,CAAC;oBACnD,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;iBACzD,CAAC,CAAC;gBAEH,8BAA8B,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;QACP,CAAC;QACD,UAAU,EAAE;YACR,OAAO;gBACH,+BAA+B;gBAC/B,SAAS,EACL,IAAI,CAAC,KAAK,CAAC,IAAI;gBACnB,gCAAgC;gBAChC,SAAS,EACL,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,yBAAyB,KAAK,GAAG;gBAC/F,sCAAsC;gBACtC,gBAAgB,EACZ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,IAAI,EAAE;aAC3E,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,qCAAqC,CAAC","file":"OrderWizard.Module.PaymentMethod.Invoice.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"OrderWizard.Module.PaymentMethod.Invoice\"/>\n\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as order_wizard_paymentmethod_invoice_module_tpl from 'order_wizard_paymentmethod_invoice_module.tpl';\n\nimport OrderWizardModulePaymentMethod = require('./OrderWizard.Module.PaymentMethod');\nimport TransactionPaymentmethodModel = require('../../../Commons/Transaction/JavaScript/Transaction.Paymentmethod.Model');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\nconst OrderWizardModulePaymentMethodInvoice: any = OrderWizardModulePaymentMethod.extend({\n    template: order_wizard_paymentmethod_invoice_module_tpl,\n\n    events: {\n        'click [data-toggle=\"show-terms\"]': 'showTerms'\n    },\n\n    errors: ['ERR_WS_INVALID_PAYMENT', 'ERR_CHK_INVOICE_CREDIT_LIMIT'],\n\n    showTerms: function() {\n        const self = this;\n        const TermsView = BackboneView.extend({\n            title: Utils.translate('Terms and Conditions'),\n            render: function() {\n                const { checkoutApp } = self.wizard.application.getConfig();\n                this.$el.html(Utils.translate(checkoutApp.invoiceTermsAndConditions));\n                return this;\n            }\n        });\n\n        this.wizard.application.getLayout().showInModal(new TermsView());\n    },\n\n    isActive: function(): boolean {\n        const terms = (this.terms = this.getProfile().get('paymentterms'));\n        return terms && terms.internalid;\n    },\n\n    getProfile: function() {\n        return this.wizard.options.profile;\n    },\n\n    render: function() {\n        if (this.isActive()) {\n            return this._render();\n        }\n    },\n\n    submit: function() {\n        const self = this;\n\n        return this.isValid().done(function() {\n            self.paymentMethod = new TransactionPaymentmethodModel({\n                type: 'invoice',\n                terms: self.wizard.options.profile.get('paymentterms')\n            });\n\n            OrderWizardModulePaymentMethod.prototype.submit.apply(self);\n        });\n    },\n    getContext: function() {\n        return {\n            // @property {String} termsName\n            termsName:\n                this.terms.name,\n            // @property {Boolean} showTerms\n            showTerms:\n                this.wizard.application.getConfig().siteSettings.checkout.requiretermsandconditions === 'T',\n            // @property {String} balanceAvailable\n            balanceAvailable:\n                this.wizard.options.profile.get('balance_available_formatted') || ''\n        };\n    }\n});\n\nexport = OrderWizardModulePaymentMethodInvoice;\n"]}