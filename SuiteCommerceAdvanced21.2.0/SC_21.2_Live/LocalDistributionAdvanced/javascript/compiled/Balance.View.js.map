{"version":3,"sources":["Balance.View.ts"],"names":[],"mappings":"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","file":"Balance.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Balance.View\"/>\n// @module Balance.View\n\nimport * as balance_tpl from 'balance.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\n\nimport LivePaymentModel = require('../../LivePayment/JavaScript/LivePayment.Model');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\nconst BalanceView: any = BackboneView.extend({\n    template: balance_tpl,\n    attributes: {\n        id: 'AccountBalance',\n        class: 'AccountBalance'\n    },\n    initialize: function(options) {\n        this.application = options.application;\n        this.model = ProfileModel.getInstance();\n        this.livePaymentModel = LivePaymentModel.getInstance();\n\n        this.title = Utils.translate('Account Balance');\n    },\n    updateLivePayment: function() {\n        if (this.model && this.model.get('currency')) {\n            const promise = jQuery.Deferred();\n\n            this.livePaymentModel\n                .fetch({\n                    data: { cur: this.model.get('currency').internalid }\n                })\n                .always(function() {\n                    promise.resolve();\n                });\n\n            return promise;\n        }\n        // If there is not currency, do not fetch the livepayment. Instead, return an empty solved promise\n        return jQuery.Deferred().resolve();\n    },\n    getSelectedMenu: function() {\n        return 'balance';\n    },\n    getBreadcrumbPages: function() {\n        return {\n            text: this.title,\n            href: '/balance'\n        };\n    },\n    // @method getContext @return {Balance.View.Context}\n    getContext: function() {\n        const live_payment = this.livePaymentModel;\n        const percentage = Math.min(\n            (this.model.get('balance') * 100) / this.model.get('creditlimit'),\n            100\n        );\n\n        // @class Balance.View.Context\n        return {\n            // @property {Profile.Model} model\n            model: this.model,\n            // @property {Boolean} showCompany\n            showCompany: !!this.model.get('companyname'),\n            // @property {String} company\n            company: this.model.get('companyname'),\n            // @property {Number} percentage\n            percentage: percentage,\n            // @property {Boolean} isPercentageGreaterThan8\n            isPercentageGreaterThan8: percentage > 8,\n            // @property {Boolean} isPercentageLowertThan92\n            isPercentageLowertThan92: percentage < 92,\n            // @property {String} balanceFormatted\n            balanceFormatted: this.model.get('balance_formatted'),\n            // @property {String} balanceAvailableFormatted\n            balanceAvailableFormatted: this.model.get('balance_available_formatted'),\n            // @property {String} creditLimitFormatted\n            creditLimitFormatted: this.model.get('creditlimit_formatted'),\n            // @property {String} depositsRemainingFormatted\n            depositsRemainingFormatted: live_payment.get('depositsremaining_formatted') || 'N/A',\n            // @property {String} creditMemosRemainingFormatted\n            creditMemosRemainingFormatted:\n                live_payment.get('creditmemosremaining_formatted') || 'N/A',\n            // @property {String} paymentTermsName\n            paymentTermsName:\n                (this.model.get('paymentterms') && this.model.get('paymentterms').name) || 'N/A',\n            // @property {String} shopperCurrencyCode\n            shopperCurrencyCode: Configuration.get('siteSettings.shopperCurrency.code'),\n            // @property {Boolean} livePaymentHaveInvoices\n            livePaymentHaveInvoices: !!live_payment.get('invoices').length,\n            // @property {Boolean} showBackToAccount\n            showBackToAccount: Configuration.get('siteSettings.sitetype') === 'STANDARD'\n        };\n    }\n});\n\nexport = BalanceView;\n"]}