{"version":3,"sources":["Merchandising.Context.ts"],"names":[],"mappings":"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","file":"Merchandising.Context.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Merchandising.Context\"/>\nimport * as _ from 'underscore';\n\n// @module Merchandising\n// @class Merchandising.Context This class defines a generic facade that allows to handle the association between a View and its handler\n// @method MerchandisingContext Instance method that given a view associate to it an instance of the Merchandising.Context class\n// @constructor\n// @param {Function} view\n// @return {Merchandising.Context?}\nconst MerchandisingContext = function MerchandisingContext(view): void {\n    if (view.MerchandisingContext) {\n        return view.MerchandisingContext;\n    }\n    this.view = view;\n    view.MerchandisingContext = this;\n};\n\n_.extend(MerchandisingContext, {\n    // @property {Array<Merchandising.Context.Handler>} handlers List of registered handlers @static\n    handlers: [],\n\n    // @method registerHandlers Pushes a new handler for a specific view to the handler list\n    // @static\n    // @param {Function} view_constructor View that will be associated with a particular handler\n    // @param {Merchandising.Context.Handler} methods Object that will be used to handle the specified view constructor\n    // @return {Merchandising.Context}\n    registerHandlers: function(view_constructor, methods): any {\n        if (view_constructor) {\n            // if there was already a handler for that view\n            // we remove it from the list, and extend the new\n            // handler with any events that the previous one had\n            const new_handler = _.extend(\n                (<any>MerchandisingContext).removeHandler(view_constructor),\n                methods\n            );\n\n            new_handler.viewConstructor = view_constructor;\n            // then we add it first on the list\n            (<any>MerchandisingContext).handlers.unshift(new_handler);\n        }\n\n        return MerchandisingContext;\n    },\n\n    // @method removeHandler based on the constructor passed as a parameter, removes any handler that matches the constructor from the handlers list.\n    // @static\n    // @param {Function} view_constructor\n    // @returns {Merchandising.Context.Handler} the removed handler\n    removeHandler: function(view_constructor): any {\n        let removed = {};\n\n        (<any>MerchandisingContext).handlers = _.reject(\n            (<any>MerchandisingContext).handlers,\n            function(handler: any) {\n                if (handler.viewConstructor === view_constructor) {\n                    removed = handler;\n                    return true;\n                }\n            }\n        );\n\n        return removed;\n    },\n\n    // @method getHandlerForView @static\n    // @returns {Merchandising.Context.Handler} A handler for the passed in view\n    getHandlerForView: function(view): any {\n        return _.find((<any>MerchandisingContext).handlers, function(handler: any) {\n            return view instanceof handler.viewConstructor;\n        });\n    },\n\n    // @method escapeValue @static\n    // @param {String} value\n    // @return {String}\n    escapeValue: function(value: string): string {\n        return value ? value.toString().replace(/\\s/g, '-') : '';\n    },\n\n    // @method callHandler calls 'callback_key' from the handler for that view passing all of the arguments\n    // @static @param {String} callback_key @param {Object} context @param {Array} parameters\n    callHandler: function(callback_key, context, parameters) {\n        const handler = (<any>MerchandisingContext).getHandlerForView(context.view);\n        return (\n            handler &&\n            _.isFunction(handler[callback_key]) &&\n            handler[callback_key].apply(context, parameters)\n        );\n    },\n\n    // @method appendFilterValue @static\n    // @param {Object} filters\n    // @param {String} key\n    // @param {to:String,from:String} value\n    appendFilterValue: function(filters: object, key: string, value: any): void {\n        if (_.isObject(value) && 'to' in value && 'from' in value) {\n            delete filters[key];\n\n            filters[`${key}.to`] = value.to;\n            filters[`${key}.from`] = value.from;\n        } else {\n            if (_.isUndefined(filters[key])) {\n                filters[key] = '';\n            }\n\n            let comma = '';\n\n            if (filters[key]) {\n                comma = ',';\n            }\n\n            filters[key] += comma + value;\n        }\n    }\n});\n\n_.extend(MerchandisingContext.prototype, {\n    // @method callHandler\n    // @param {String} callback_key function name to invoke. Possible values are: getIdItemsToExclude or getFilters\n    // @return {Any}\n    callHandler: function(callback_key) {\n        return (<any>MerchandisingContext).callHandler(\n            callback_key,\n            this,\n            _.toArray(arguments).slice(1)\n        );\n    },\n\n    // @method getFilters\n    // @param {Object} filters\n    // @param {Boolean} isWithin\n    getFilters: function(filters, isWithin) {\n        let parsed_filters = this.callHandler('getFilters', filters, isWithin);\n\n        if (!parsed_filters) {\n            parsed_filters = {};\n\n            _.each(filters, function(values: any, key) {\n                values = _.without(values, '$current');\n\n                if (values.length) {\n                    _.each(values, function(value) {\n                        (<any>MerchandisingContext).appendFilterValue(parsed_filters, key, value);\n                    });\n                }\n            });\n        }\n\n        return parsed_filters;\n    },\n\n    // @method getIdItemsToExclude\n    getIdItemsToExclude: function() {\n        return this.callHandler('getIdItemsToExclude') || [];\n    }\n});\n\nexport = MerchandisingContext;\n"]}