{"version":3,"sources":["PaymentWizard.Module.PaymentMethod.Selector.ts"],"names":[],"mappings":"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","file":"PaymentWizard.Module.PaymentMethod.Selector.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PaymentWizard.Module.PaymentMethod.Selector\"/>\n\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { PaymentWizardModulePaymentMethodACH } from './PaymentWizard.Module.PaymentMethod.ACH';\nimport { isModuleLoaded } from '../../../Commons/Core/JavaScript/ExportedModulesNames';\nimport { Environment } from '../../../Commons/Core/JavaScript/Environment';\n\nimport OrderWizardModulePaymentMethodSelector = require('../../OrderWizard.Module.PaymentMethod/JavaScript/OrderWizard.Module.PaymentMethod.Selector');\n\n\n// @class PaymentWizard.Module.PaymentMethod.Creditcard @extend OrderWizard.Module.PaymentMethod.Creditcard\nconst PaymentWizardModulePaymentMethodSelector: any = OrderWizardModulePaymentMethodSelector.extend(\n    {\n        className: 'PaymentWizard.Module.PaymentMethod.Selector',\n\n        render: function() {\n            if (this.wizard.hidePayment()) {\n                this.$el.empty();\n            } else {\n                OrderWizardModulePaymentMethodSelector.prototype.render.apply(this, arguments);\n            }\n\n            if (this.selectedModule && !!~this.selectedModule.type.indexOf('external_checkout')) {\n                this.trigger(\n                    'change_label_continue',\n                    Utils.translate('Continue to External Payment')\n                );\n            } else {\n                this.trigger('change_label_continue', Utils.translate('Submit'));\n            }\n        },\n\n        initialize: function(...args) {\n            const isPaymentInstrumentEnabled =\n                Environment.getSC().ENVIRONMENT.paymentInstrumentEnabled &&\n                Environment.getSC().CONFIGURATION.paymentInstrumentACHEnabled;\n            const isBackwardCompatible = isModuleLoaded('PaymentWizard.Module.PaymentMethod.ACH');\n\n            if (\n                isPaymentInstrumentEnabled &&\n                isBackwardCompatible &&\n                args.length > 0 &&\n                args[0].modules\n            ) {\n                args[0].modules.push({\n                    classModule: PaymentWizardModulePaymentMethodACH,\n                    name: Utils.translate('ACH'),\n                    type: 'ACH',\n                    options: {}\n                });\n            }\n            OrderWizardModulePaymentMethodSelector.prototype.initialize.apply(this, args);\n            this.wizard.model.on('change:payment', jQuery.proxy(this, 'changeTotal'));\n        },\n\n        changeTotal: function() {\n            const was = this.model.previous('payment');\n            const was_confirmation = this.model.previous('confirmation');\n            const is_confirmation = this.model.get('confirmation');\n            const is = this.model.get('payment');\n\n            // Changed from or to 0\n            if (\n                ((was === 0 && is !== 0) || (was !== 0 && is === 0)) &&\n                !was_confirmation &&\n                !is_confirmation\n            ) {\n                this.render();\n            }\n        },\n\n        // @method submit If there's a payment, continue the payment method selection. Otherwise, resets the paymentmethods collection\n        // @return {jQuery.Deferred}\n        submit: function() {\n            if (this.model.get('payment') !== 0) {\n                return OrderWizardModulePaymentMethodSelector.prototype.submit.apply(\n                    this,\n                    arguments\n                );\n            }\n            this.model.get('paymentmethods').reset([]);\n            return jQuery.Deferred().resolve();\n        }\n    }\n);\n\nexport = PaymentWizardModulePaymentMethodSelector;\n"]}