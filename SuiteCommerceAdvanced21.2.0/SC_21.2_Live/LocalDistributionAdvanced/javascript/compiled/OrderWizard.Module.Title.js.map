{"version":3,"sources":["OrderWizard.Module.Title.ts"],"names":[],"mappings":"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","file":"OrderWizard.Module.Title.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"OrderWizard.Module.Title\"/>\n\nimport * as _ from 'underscore';\nimport * as order_wizard_title_tpl from 'order_wizard_title.tpl';\nimport { WizardStepModule } from '../../Wizard/JavaScript/Wizard.StepModule';\n\n// @class OrderWizard.Module.Title @extend WizardModule\nexport = WizardStepModule.extend({\n    // @property {Function} template\n    template: order_wizard_title_tpl,\n\n    // @method render We override render to just render this module in case the it is active\n    // @return {Void}\n    render: function() {\n        if (this.isActive()) {\n            this._render();\n        } else {\n            this.$el.empty();\n        }\n\n        return this.trigger('ready', true);\n    },\n\n    // @method initialize\n    // @param {OrderWizard.Module.Title.Initialize.Options} options\n    // @return {Void}\n    initialize: function(options) {\n        WizardStepModule.prototype.initialize.apply(this, arguments);\n        this.title = options.title;\n        this.refreshOn = options.refreshOn;\n        this.tag = options.tag;\n        this.details = options.details;\n        this.attributes = options.attributes;\n\n        this.refresh();\n    },\n\n    // @method refresh Attach to the desire refreshOn of the passed in options when this module is initialized\n    // @return {Void}\n    refresh: function() {\n        if (this.refreshOn) {\n            if (_(this.refreshOn).isFunction()) {\n                this.refreshOn();\n            } else {\n                this.wizard.model.on(this.refreshOn, this.render, this);\n            }\n        }\n    },\n\n    // @method getStringifyAttributes Given an object generate a string representation of it\n    // @param {Object} obj Any object to convert to string\n    // @return {String}\n    getStringifyAttributes: function(obj) {\n        const self = this;\n\n        return _.reduce(\n            obj,\n            function(memo, value: any, key: any) {\n                if (_.isObject(value)) {\n                    return memo + self.getStringifyAttributes(obj[key], key + '-');\n                }\n\n                return (\n                    memo +\n                    ' ' +\n                    _.escape(key) +\n                    '=' +\n                    _.escape(_.isArray(value) ? value.join(' ') : value)\n                );\n            },\n            ''\n        );\n    },\n\n    // @method getTag Evaluates the current tag and returns it final value\n    // @return {String}\n    getTag: function() {\n        return _(this.tag).isFunction() ? this.tag() : this.tag || 'h2';\n    },\n\n    // @method getDetails Evaluates the current details and returns it final value\n    // @return {String}\n    getDetails: function() {\n        return _(this.details).isFunction() ? this.details() : this.details || '';\n    },\n\n    // @method getTitle Evaluates the current title and returns it final value\n    // @return {String}\n    getTitle: function() {\n        return _(this.title).isFunction() ? this.title() : this.title || '';\n    },\n\n    // @method getContext\n    // @return {OrderWizard.Module.Title.Context}\n    getContext: function() {\n        // @class OrderWizard.Module.Title.Context\n        return {\n            // @property {String} tag\n            tag: this.getTag(),\n            // @property {String} attributes\n            attributes: this.getStringifyAttributes(this.attributes || {}),\n            // @property {String} details\n            details: this.getDetails(),\n            // @property {String} title\n            title: this.getTitle(),\n            // @property {Boolean} showDetails\n            showDetails: !!this.getDetails()\n        };\n        // @class OrderWizard.Module.Title\n    },\n\n    // @method destroy Override parent method to handle detaching form model event used to re-render\n    // @return {Void}\n    destroy: function() {\n        if (this.refreshOn && !_(this.refreshOn).isFunction()) {\n            this.wizard.model.on(this.refreshOn, this.render, this);\n        }\n\n        WizardStepModule.prototype.destroy.apply(this, arguments);\n    }\n});\n\n// @class OrderWizard.Module.Title.Initialize.Options\n// @property {String} title\n// @property {String|Function} refreshOn If it is a function you can specify when the module should be re-render.\n// If it is a string is the name of the event thrown by the wizard's model used to re-render\n// @property {String|Function} tag Name of the HTML tag to be created\n// @property {String|Function} details\n// @property {String|Function} title Title to show (main property of this module)\n// @property {Object} attributes\n"]}