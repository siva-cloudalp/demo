{"version":3,"sources":["LiveOrder.Line.Model.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IASF,IAAM,kBAAkB,GAAG,oBAAoB,CAAC,MAAM,CAClD;QACI,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC,oCAAoC,CAAC;QAEnE,UAAU,EAAE,SAAS,UAAU;YAC3B,kEAAkE;YAClE,oBAAoB,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEjE,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,KAAK,EAAE,KAAK;gBAClC,IAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;gBAC9C,IAAM,aAAa,GAAG,MAAM,CAAC,YAAY,CAAC;gBAE1C,IAAI,aAAa,IAAI,aAAa,CAAC,MAAM,KAAK,eAAe,EAAE;oBAC3D,KAAK,CAAC,GAAG,CAAC,YAAY,EAAE,aAAa,CAAC,SAAS,CAAC,CAAC;iBACpD;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QACD,mFAAmF;QACnF,wCAAwC;QACxC,MAAM,EAAE,SAAS,MAAM;YACnB,0GAA0G;YAC1G,uFAAuF;YACvF,oBAAoB;YACpB,OAAO;gBACH,sEAAsE;gBACtE,6DAA6D;gBAC7D,IAAI,EAAE;oBACF,kDAAkD;oBAClD,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE;oBAC5B,4CAA4C;oBAC5C,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;iBAC7C;gBACD,qCAAqC;gBACrC,gDAAgD;gBAChD,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ;gBAClC,kDAAkD;gBAClD,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;gBACtC,qDAAqD;gBACrD,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE;gBACrC,qDAAqD;gBACrD,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa;gBAC5C,mDAAmD;gBACnD,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;gBACxC,kDAAkD;gBAClD,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;gBACtC,gDAAgD;gBAChD,QAAQ,EACJ,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ;oBACrB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU;oBACnC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC;oBACnD,EAAE;gBACN,yDAAyD;gBACzD,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,iBAAiB,IAAI,MAAM;gBAC9D,+BAA+B;gBAC/B,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,KAAK,IAAI;aAC/C,CAAC;YACF,gCAAgC;QACpC,CAAC;QAED,+EAA+E;QAC/E,sGAAsG;QACtG,iJAAiJ;QACjJ,6CAA6C;QAC7C,oBAAoB;QACpB,OAAO,EAAE,SAAS,OAAO,CAAC,UAAU;YAChC,IAAM,0BAA0B,GAAW,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;gBACnE,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YAExF,OAAO,CAAC,CAAC,CACL,UAAU;gBACV,IAAI,CAAC,SAAS,EAAE,KAAK,UAAU,CAAC,SAAS,EAAE;gBAC3C,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;gBAC3E,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;oBAC5D,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAChF,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,0BAA0B,CAC/D,CAAC;QACN,CAAC;KACJ,EAED;QACI,4BAA4B;QAC5B,iCAAiC;QACjC,iCAAiC;QACjC,iBAAiB,EAAE,SAAS,iBAAiB,CAAC,OAAO;YACjD,IAAM,IAAI,GAAG,IAAI,kBAAkB,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;YACtD,IAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACjC,IAAI,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACvD,IAAM,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC;YAE1D,IACI,CAAC,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC;gBACjC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC;gBAC3C,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,EACpD;gBACE,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;aAC3E;YAED,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YAC9D,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,mBAAmB,EAAE,kBAAkB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YAChF,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YACrE,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YAEjF,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAS,cAAc;gBAC/C,IAAM,WAAW,GAAG,IAAI;qBACnB,GAAG,CAAC,SAAS,CAAC;qBACd,SAAS,CAAC,EAAE,YAAY,EAAE,cAAc,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;gBACrE,WAAW,CAAC,UAAU,GAAG,CAAC,CAAC,MAAM,CAC7B,EAAE,EACF,cAAc,CAAC,UAAU,EACzB,WAAW,CAAC,UAAU,CACzB,CAAC;YACN,CAAC,CAAC,CAAC;YAEH,IAAI,cAAc,EAAE;gBAChB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;aAC9D;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,oIAAoI;QACpI,2BAA2B;QAC3B,iCAAiC;QACjC,mBAAmB,EAAE,SAAS,mBAAmB,CAAC,UAAU;YAClD,IAAA,IAAI,GAAK,UAAU,KAAf,CAAgB;YAE1B,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;YACrD,OAAO,UAAU,CAAC,MAAM,CAAC;YAEzB,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC,MAAM,CAAC;YACnB,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;YAEvB,IAAM,QAAQ,GAAG,IAAI,kBAAkB,CAAC,UAAU,CAAC,CAAC;YACpD,OAAO,QAAQ,CAAC;QACpB,CAAC;KACJ,CACJ,CAAC;IAEF,OAAS,kBAAkB,CAAC","file":"LiveOrder.Line.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"LiveOrder.Line.Model\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\n\nimport TransactionLineModel = require('../../../Commons/Transaction/JavaScript/Transaction.Line.Model');\n\nconst LiveOrderLineModel = TransactionLineModel.extend(\n    {\n        urlRoot: Utils.getAbsoluteUrl('services/LiveOrder.Line.Service.ss'),\n\n        initialize: function initialize() {\n            // call the initialize of the parent object, equivalent to super()\n            TransactionLineModel.prototype.initialize.apply(this, arguments);\n\n            this.on('error', function(model, jqXhr) {\n                const result = JSON.parse(jqXhr.responseText);\n                const error_details = result.errorDetails;\n\n                if (error_details && error_details.status === 'LINE_ROLLBACK') {\n                    model.set('internalid', error_details.newLineId);\n                }\n            });\n        },\n        // @method toJSON Override default method to send only require data to the back-end\n        // @return {Transaction.Line.Model.JSON}\n        toJSON: function toJSON() {\n            // @class Transaction.Line.Model.JSON Class used to send a transaction line representation to the back-end\n            // without sending all the heavy weight JSON that is not totally needed by the back-end\n            // @public @extlayer\n            return {\n                // @property {Transaction.Line.Model.JSON.Item} item @public @extlayer\n                // @class Transaction.Line.Model.JSON.Item  @public @extlayer\n                item: {\n                    // @property {String} internalid @public @extlayer\n                    internalid: this.getItemId(),\n                    // @property {String} type @public @extlayer\n                    type: this.attributes.item.get('itemtype')\n                },\n                // @class Transaction.Line.Model.JSON\n                // @property {Number} quantity @public @extlayer\n                quantity: this.attributes.quantity,\n                // @property {String} internalid @public @extlayer\n                internalid: this.attributes.internalid,\n                // @property {Arra<Object>} options @public @extlayer\n                options: this.get('options').toJSON(),\n                // @property {Number} splitquantity @public @extlayer\n                splitquantity: this.attributes.splitquantity,\n                // @property {Number} shipaddress @public @extlayer\n                shipaddress: this.attributes.shipaddress,\n                // @property {Number} shipmethod @public @extlayer\n                shipmethod: this.attributes.shipmethod,\n                // @property {Number} location @public @extlayer\n                location:\n                    (this.attributes.location &&\n                        this.attributes.location.attributes &&\n                        this.attributes.location.attributes.internalid) ||\n                    '',\n                // @property {String} fulfillmentChoice @public @extlayer\n                fulfillmentChoice: this.attributes.fulfillmentChoice || 'ship',\n                // @property {Boolean} freeGift\n                freeGift: this.attributes.free_gift === true\n            };\n            // @class Transaction.Line.Model\n        },\n\n        // @method isEqual Compares two LiveOrder lines and answer if they are the same\n        // We are extending Transaction.Line.Model here; this method overrides the namesake one in this model.\n        // This is so because if pickup in store is enabled, we need to differentiate between lines that look the same but has different delivery methods\n        // @param {Transaction.Line.Model} other_line\n        // @return {Boolean}\n        isEqual: function isEqual(other_line) {\n            const otherLineFulfillmentChoice: string = this.get('options').length ? \n                other_line.get('fulfillmentChoice') || 'ship' : other_line.get('fulfillmentChoice');\n\n            return !!(\n                other_line &&\n                this.getItemId() === other_line.getItemId() &&\n                _.isEqual(this.get('options').toJSON(), other_line.get('options').toJSON()) &&\n                (this.get('location') && this.get('location').get('internalid')) ===\n                    (other_line.get('location') && other_line.get('location').get('internalid')) &&\n                this.get('fulfillmentChoice') === otherLineFulfillmentChoice\n            );\n        }\n    },\n\n    {\n        // @method createFromProduct\n        // @param {Product.Model} product\n        // @return {LiveOrder.Line.Model}\n        createFromProduct: function createFromProduct(product) {\n            const line = new LiveOrderLineModel(product.toJSON());\n            const item = product.get('item');\n            let item_images_detail = item.get('itemimages_detail');\n            const is_matrix_item = !!item.get('_matrixChilds').length;\n\n            if (\n                _.isEqual(item_images_detail, {}) &&\n                item.get('_matrixParent').get('internalid') &&\n                item.get('_matrixParent').get('itemimages_detail')\n            ) {\n                item_images_detail = item.get('_matrixParent').get('itemimages_detail');\n            }\n\n            line.set('item', product.getItem().clone(), { silent: true });\n            line.get('item').set('itemimages_detail', item_images_detail, { silent: true });\n            line.get('item').set('itemid', item.get('itemid'), { silent: true });\n            line.set('rate_formatted', product.getPrice().price_formatted, { silent: true });\n\n            product.get('options').each(function(product_option) {\n                const line_option = line\n                    .get('options')\n                    .findWhere({ cartOptionId: product_option.get('cartOptionId') });\n                line_option.attributes = _.extend(\n                    {},\n                    product_option.attributes,\n                    line_option.attributes\n                );\n            });\n\n            if (is_matrix_item) {\n                line.get('item').set('matrix_parent', product.get('item'));\n            }\n\n            return line;\n        },\n\n        // @method createFromOuterLine Creates a LiveOrder.Line.Model from the outer representation of a line exposed by Extensibility Layer\n        // @param {Line} outer_line\n        // @return {LiveOrder.Line.Model}\n        createFromOuterLine: function createFromOuterLine(outer_line) {\n            let { item } = outer_line;\n\n            outer_line = _.extend(outer_line, outer_line.extras);\n            delete outer_line.extras;\n\n            item = _.extend(item, item.extras);\n            delete item.extras;\n            outer_line.item = item;\n\n            const new_line = new LiveOrderLineModel(outer_line);\n            return new_line;\n        }\n    }\n);\n\nexport = LiveOrderLineModel;\n"]}