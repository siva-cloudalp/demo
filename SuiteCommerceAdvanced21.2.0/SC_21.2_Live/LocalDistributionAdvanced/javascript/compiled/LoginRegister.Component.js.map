{"version":3,"sources":["LoginRegister.Component.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAMF,IAAM,sBAAsB,GAAQ,SAAS,+BAA+B,CAAC,WAAW;QACpF,uHAAuH;QACvH,oJAAoJ;QACpJ,IAAM,gBAAgB,GAAG,iBAAiB,CAAC,MAAM,CAAC;YAC9C,aAAa,EAAE,mBAAmB;YAElC,WAAW,EAAE,WAAW;YAExB,YAAY,EAAE,oBAAoB;YAElC,QAAQ,EAAE,oBAAoB;YAE9B,oHAAoH;YACpH,WAAW;YACX,qDAAqD;YACrD,uHAAuH;YACvH,oBAAoB,EAAE,SAAS,oBAAoB,CAAC,IAAI;gBACpD,IAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBACtD,IAAM,iBAAiB,GAAG,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAE1E,OAAO,CACH,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,QAAQ,IAAI,iBAAiB,KAAK,IAAI,CAAC,QAAQ,CAAC,CACrF,CAAC;YACN,CAAC;YAED,wBAAwB,EAAE,SAAS,wBAAwB;gBACvD,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,CAAC;SACJ,CAAC,CAAC;QAEH,IAAM,eAAe,GAAG;YACpB,EAAE,KAAK,EAAE,4BAA4B,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,IAAI,EAAE;YAC9E,EAAE,KAAK,EAAE,+BAA+B,EAAE,KAAK,EAAE,gBAAgB,EAAE,SAAS,EAAE,IAAI,EAAE;YACpF,EAAE,KAAK,EAAE,8BAA8B,EAAE,KAAK,EAAE,eAAe,EAAE,SAAS,EAAE,IAAI,EAAE;SACrF,CAAC;QAEF,WAAW,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAS,IAAI;YACxD,IAAI,gBAAgB,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;gBACnD,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,EAAE;oBACpC,gBAAgB,CAAC,sBAAsB,CACnC,eAAe,EACf,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CACrC,CAAC;iBACL;gBAED,IAAI,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAE;oBACvC,gBAAgB,CAAC,sBAAsB,CACnC,eAAe,EACf,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CACxC,CAAC;iBACL;aACJ;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,gBAAgB,CAAC;IAC5B,CAAC,CAAC;IAEF,OAAS,sBAAsB,CAAC","file":"LoginRegister.Component.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"LoginRegister.Component\"/>\n\nimport SCVisualComponent = require('../../../Commons/SC/JavaScript/SC.VisualComponent');\n\nconst LoginRegisterComponent: any = function LoginRegisterComponentGenerator(application) {\n    // @class LoginRegister.Component The LoginRegister component let's the user interact with most important aspect of the\n    // Login Register Page, like setting options, changing quantity, and obtain item's related information. @extend SC.VisualComponent @public @extlayer\n    const privateComponent = SCVisualComponent.extend({\n        componentName: 'LoginRegisterPage',\n\n        application: application,\n\n        DEFAULT_VIEW: 'LoginRegister.View',\n\n        LRP_VIEW: 'LoginRegister.View',\n\n        // @method _isViewFromComponent Indicate if the passed-in the View is a Login Register Page of the current component\n        // @private\n        // @param {Backbone.View} view Any view of the system\n        // @return {Boolean} True in case the passed in View is a Login Register Page of the current Component, false otherwise\n        _isViewFromComponent: function _isViewFromComponent(view) {\n            const view_identifier = this._getViewIdentifier(view);\n            const view_prototype_id = view && this._getViewIdentifier(view.prototype);\n\n            return (\n                view && (view_identifier === this.LRP_VIEW || view_prototype_id === this.LRP_VIEW)\n            );\n        },\n\n        _getComponentIdentifiers: function _getComponentIdentifiers(): string[] {\n            return [this.LRP_VIEW];\n        }\n    });\n\n    const innerToOuterMap = [\n        { inner: 'before:LoginRegister.login', outer: 'beforeLogin', normalize: null },\n        { inner: 'before:LoginRegister.register', outer: 'beforeRegister', normalize: null },\n        { inner: 'after:LoginRegister.register', outer: 'afterRegister', normalize: null }\n    ];\n\n    application.getLayout().on('beforeAppendView', function(view) {\n        if (privateComponent._isViewFromComponent(view, true)) {\n            if (view.getChildViewInstance('Login')) {\n                privateComponent._suscribeToInnerEvents(\n                    innerToOuterMap,\n                    view.getChildViewInstance('Login')\n                );\n            }\n\n            if (view.getChildViewInstance('Register')) {\n                privateComponent._suscribeToInnerEvents(\n                    innerToOuterMap,\n                    view.getChildViewInstance('Register')\n                );\n            }\n        }\n    });\n\n    return privateComponent;\n};\n\nexport = LoginRegisterComponent;\n"]}