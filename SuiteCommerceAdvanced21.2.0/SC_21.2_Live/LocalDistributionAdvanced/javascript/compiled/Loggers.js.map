{"version":3,"sources":["Loggers.ts"],"names":[],"mappings":"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","file":"Loggers.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Loggers\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/GlobalDeclarations.d.ts\" />\n\nimport * as _ from 'underscore';\nimport {\n    Profile,\n    Configuration,\n    ConfigurationLoggers,\n    LogLevels,\n    ConfigurationProfile,\n    dev,\n    prod\n} from './Loggers.Configuration';\n\nimport { LoggersAppender } from './Loggers.Appender';\n\ninterface AppenderContext {\n    appender: LoggersAppender;\n    data: object;\n}\n\ninterface Actions {\n    [actionKey: number]: AppenderContext[];\n}\n\ninterface ActionsName {\n    [name: string]: number;\n}\n\ninterface Configurations {\n    [name: string]: Configuration;\n}\n\ninterface Instances {\n    [name: string]: Loggers;\n}\n\ninterface errorMessage {\n    [name: string]: boolean;\n}\n\nclass Loggers {\n    private static profile: Profile = SC.isDevelopment ? dev : prod;\n\n    private actions: Actions = {};\n\n    private actionsKey: number = 1;\n\n    private config: Configuration;\n\n    private actionsName: ActionsName = {};\n\n    private static configurations: Configurations = {};\n\n    private static instances: Instances = {};\n\n    private static errorMessageOnce: errorMessage = {};\n\n    protected constructor() {}\n\n    private getAppenders(profiles: ConfigurationProfile[] = []): LoggersAppender[] {\n        const configProfile: ConfigurationProfile = _.find(profiles, cp => {\n            return cp.profile.name === Loggers.profile.name;\n        });\n\n        return (configProfile && configProfile.appenders) || [];\n    }\n\n    private log(method: string, logLevel: LogLevels, message: string) {\n        if (logLevel <= Loggers.profile.logLevel) {\n            const appenders: LoggersAppender[] = this.getAppenders(this.config.log);\n\n            _.each(appenders, appender => {\n                if (appender.ready()) {\n                    try {\n                        appender[method](message);\n                    } catch (e) {\n                        console.warn(e);\n                    }\n                }\n            });\n        }\n    }\n\n    info(data: any) {\n        if (this.config) {\n            this.log('info', LogLevels.INFO, data);\n        }\n    }\n\n    error(data: any) {\n        if (this.config) {\n            this.log('error', LogLevels.ERROR, data);\n        }\n    }\n\n    start(action: string, options: object = {}): number {\n        if (this.config) {\n            const actionKey = this.actionsKey++;\n            const appenders: LoggersAppender[] = this.getAppenders(this.config.actions[action]);\n            const actionAppenders = [];\n\n            _.each(appenders, (appender: LoggersAppender) => {\n                if (appender.ready()) {\n                    try {\n                        actionAppenders.push({\n                            appender: appender,\n                            data: appender.start(action, options)\n                        });\n                    } catch (e) {\n                        console.warn(e);\n                    }\n                }\n            });\n\n            this.actions[actionKey] = actionAppenders;\n            this.actionsName[action] = actionKey;\n\n            return actionKey;\n        }\n        return 0;\n    }\n\n    end(actionKey: number, options: object = {}) {\n        if (this.config) {\n            const appenders = this.actions[actionKey];\n\n            _.each(appenders, appenderContext => {\n                if (appenderContext.appender.ready()) {\n                    try {\n                        appenderContext.appender.end(appenderContext.data, options);\n                    } catch (e) {\n                        console.warn(e);\n                    }\n                }\n            });\n\n            delete this.actions[actionKey];\n        }\n    }\n\n    endLast(actionName: string, options?: object) {\n        if (this.config) {\n            const actionKey = this.actionsName[actionName];\n\n            this.end(actionKey, options);\n\n            delete this.actionsName[actionName];\n        }\n    }\n\n    static getLogger(name: string = 'root') {\n        if (Loggers.configurations[name]) {\n            if (!Loggers.instances[name]) {\n                Loggers.instances[name] = new Loggers();\n                Loggers.instances[name].config = Loggers.configurations[name];\n            }\n\n            return Loggers.instances[name];\n        }\n\n        if (!this.errorMessageOnce[name]) {\n            this.errorMessageOnce[name] = true;\n            console.error('Configuration for Logger \"' + name + '\" not setted');\n        }\n\n        return new Loggers();\n    }\n\n    static setConfiguration(configurationLogger: ConfigurationLoggers) {\n        _.each(configurationLogger, (config: Configuration, name: string) => {\n            const childLoggers = config.loggers;\n            delete config.loggers;\n\n            if (!Loggers.configurations[name]) {\n                Loggers.configurations[name] = config;\n            } else {\n                console.error('Configuration for Logger \"' + name + '\" already setted');\n            }\n\n            Loggers.getLogger(name);\n\n            _.each(childLoggers, (childConfigLoggers: Configuration) => {\n                childConfigLoggers.log = childConfigLoggers.log || config.log;\n                childConfigLoggers.actions = _.extend(\n                    {},\n                    config.actions,\n                    childConfigLoggers.actions\n                );\n            });\n\n            Loggers.setConfiguration(childLoggers);\n        });\n    }\n}\n\nexport { Loggers };\n"]}