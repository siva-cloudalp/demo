{"version":3,"sources":["View.ts"],"names":[],"mappings":"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","file":"View.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"View\"/>\n// @Typescript-partial\n\nimport * as _ from 'underscore';\nimport * as Backbone from './backbone/BackboneExtras';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { jQuery } from './jquery/JQueryExtras';\nimport { backboneViewApplyPermissions } from '../../BackboneExtras/JavaScript/Backbone.View.ApplyPermissions';\nimport { backboneViewBootstrap } from '../../BackboneExtras/JavaScript/Backbone.View.Bootstrap';\nimport { backboneViewDatePicker } from '../../BackboneExtras/JavaScript/Backbone.View.DatePicker';\nimport { backboneViewDebugTemplateName } from '../../BackboneExtras/JavaScript/Backbone.View.DebugTemplateName';\nimport { backboneViewPageGeneratorImages } from '../../BackboneExtras/JavaScript/Backbone.View.PageGeneratorImages';\nimport { JSONObject } from '../../Utilities/JavaScript/Utils.Interfaces';\nimport { scBaseComponentPluginPostRender } from '../../SC/JavaScript/SC.BaseComponent.Plugin.PostRender';\nimport { scBaseComponentPluginRecollectCMSSelectorsGenerator } from '../../SC/JavaScript/SC.BaseComponent.Plugin.RecollectCMSSelectors';\nimport { SCBaseComponentChildViewsComponent } from '../../SC/JavaScript/SC.BaseComponent.ChildViewsComponent';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { Environment } from './Environment';\n\n// @deprecated\ninterface CustomEventsHash {\n    [selector: string]: true;\n}\n\nexport interface EventsHash {\n    [selector: string]: string | { (eventObject: JQuery.TriggeredEvent): void };\n}\n\ninterface ChildViewSelector {\n    [dataKey: string]: string;\n}\n\ninterface ModalOptions {\n    silence: boolean;\n    [dataKey: string]: any;\n}\n\ntype ClassView<TContext extends object, TEvents extends object> = new (...args: any[]) => View<\n    TContext,\n    TEvents\n>;\n\nexport interface ChildViewGenerator<TContext extends object, TEvents extends object> {\n    childViewIndex: number;\n    childViewConstructor:\n        | ((...args: any[]) => View<TContext, TEvents>)\n        | ClassView<TContext, TEvents>;\n    childViewInstance?: View<TContext, TEvents>;\n    childViewSelector?: ChildViewSelector;\n    childViewIsExternal?: boolean;\n    $placeholder?: JQuery;\n}\n\nexport interface ChildViewInstance {\n    [instanceId: string]: ChildViewGenerator<object, object>;\n}\n\nexport interface ChildViewInstances {\n    [dataView: string]: ChildViewInstance;\n}\n\nexport interface StaticChildViews {\n    [containerName: string]:\n        | ((...args: any[]) => View<object, object>)\n        | ChildViewInstance\n        | ClassView<object, object>;\n}\nexport interface ChildViews {\n    [containerName: string]: (tagDataAttr: { [key: string]: string }) => View<object, object>;\n}\n\nexport interface ExtraContextProperty {\n    [property: string]: {\n        type: string | [];\n        fn: (safeContext: any) => any;\n    };\n}\n\ninterface ElementData {\n    [key: string]: string;\n}\n\nexport type ContextDataMethod = () => any;\n\nexport interface ContextData {\n    [key: string]: ContextDataMethod;\n}\n\nexport abstract class View<\n    TContext extends object,\n    TEvents extends object = {}\n> extends Backbone.View<TEvents> {\n    protected static extraContextProperties: ExtraContextProperty;\n\n    protected static childViews: StaticChildViews;\n\n    protected static contextData: ContextData;\n\n    private static isEventSelectorValid(eventSelector: string): boolean | null {\n        const eventName = [\n            'blur',\n            'change',\n            'click',\n            'contextmenu',\n            'dblclick',\n            'error',\n            'focus',\n            'focusin',\n            'focusout',\n            'keydown',\n            'keypress',\n            'keyup',\n            'load',\n            'mousedown',\n            'mousemove',\n            'mouseout',\n            'mouseover',\n            'mouseup',\n            'resize',\n            'scroll',\n            'select',\n            'submit',\n            'touchend',\n            'touchmove',\n            'touchstart',\n            'unload'\n        ];\n\n        const eventSelectorStructureRe = /([a-zA-Z]+) \\[data\\-action=\"([^\"]+)\"\\]/;\n        const matches = eventSelectorStructureRe.exec(eventSelector);\n\n        return matches && _.indexOf(eventName, matches[1]) >= 0 && !!matches[2].length;\n    }\n\n    // @deprecated\n    protected static customEvents: CustomEventsHash = {};\n\n    // @deprecated\n    public static addExtraEventHandler(\n        eventSelector: string,\n        callback: (...args: any[]) => void\n    ): void {\n        let error: any = {};\n        this.prototype.events = this.prototype.events || {};\n\n        if (!this.isEventSelectorValid(eventSelector)) {\n            error = new Error(\n                'The specified eventSelector parameter does not respect the required format.'\n            );\n            error.name = 'INVALID_PARAM';\n            throw error;\n        }\n\n        if (this.prototype.events[eventSelector]) {\n            error = new Error('Duplicated event selector. Please specify a different one.');\n            error.name = 'DUPLICATED_EVENT_SELECTOR';\n            throw error;\n        }\n\n        this.prototype.events[eventSelector] = _.bind(callback, null);\n        this.customEvents[eventSelector] = true;\n    }\n\n    // @deprecated\n    public static removeExtraEventHandler(eventSelector: string): void {\n        let error: any = {};\n        this.prototype.events = this.prototype.events || {};\n\n        if (!this.prototype.events[eventSelector] || !this.customEvents[eventSelector]) {\n            error = new Error('The specified event selector does not exists or is not custom.');\n            error.name = 'INVALID_PARAM';\n            throw error;\n        }\n\n        delete this.prototype.events[eventSelector];\n    }\n\n    private static isDataTypeValid(dataType: string | []): boolean {\n        const validDataTypes = ['number', 'string', 'object', 'array', 'boolean', 'null'];\n        if (_.isString(dataType)) {\n            return _.indexOf(validDataTypes, dataType) >= 0;\n        }\n        if (_.isArray(dataType)) {\n            return !_.difference(dataType, validDataTypes).length;\n        }\n        return false;\n    }\n\n    // @deprecated\n    public static addExtraContextProperty(\n        propertyName: string,\n        type: string | [],\n        callback: () => any\n    ): void {\n        this.extraContextProperties = this.extraContextProperties || {};\n\n        let error: Error;\n\n        if (!this.isDataTypeValid(type)) {\n            error = new Error(\n                'Invalid data type. Please check the json-schema documentation for valid data types.'\n            );\n            error.name = 'INVALID_DATA_TYPE';\n            throw error;\n        }\n        if (this.extraContextProperties[propertyName]) {\n            error = new Error(\n                'Duplicated propertyName. Trying to add more than one extra context property with the same name.'\n            );\n            error.name = 'DUPLICATED_CONTEXT_PROPERTY';\n            throw error;\n        }\n\n        this.extraContextProperties[propertyName] = {\n            type,\n            fn: callback\n        };\n    }\n\n    // @deprecated\n    public static removeExtraContextProperty(propertyName: string): void {\n        this.extraContextProperties = this.extraContextProperties || {};\n\n        delete this.extraContextProperties[propertyName];\n    }\n\n    // @deprecated\n    public static getContextData(): ContextData {\n        this.contextData = this.contextData || {};\n\n        return this.contextData;\n    }\n\n    // @deprecated\n    public static setContextData(contextData: ContextData): void {\n        this.contextData = { ...contextData, ...this.contextData };\n    }\n\n    private static normalizeChildView(containerName: string): void {\n        const childViewConstructor = this.childViews[containerName];\n        this.childViews[containerName] = {};\n\n        this.childViews[containerName][containerName] = {\n            childViewIndex: 10,\n            childViewConstructor\n        };\n    }\n\n    // @deprecated\n    public static addChildViews(childViews: StaticChildViews): void {\n        this.childViews = this.childViews || {};\n\n        _.each(childViews, (childView, childViewContainer) => {\n            if (this.childViews[childViewContainer]) {\n                if (_.isFunction(this.childViews[childViewContainer])) {\n                    this.normalizeChildView(childViewContainer);\n                }\n            } else {\n                this.childViews[childViewContainer] = {};\n            }\n\n            if (_.isFunction(childView)) {\n                this.childViews[childViewContainer][childViewContainer] = {\n                    childViewIndex: 10,\n                    childViewConstructor: childView\n                };\n            } else {\n                _.each(childView, (childViewGenerator, childViewName) => {\n                    this.childViews[childViewContainer][childViewName] = childViewGenerator;\n                });\n            }\n        });\n    }\n\n    public constructor() {\n        super();\n\n        this.addChildViewInstances((<typeof View>this.constructor).childViews);\n    }\n\n    // @deprecated\n    protected childViews: ChildViews = {};\n\n    protected childViewInstances: ChildViewInstances = {};\n\n    protected placehordersGlobalChildViewInstances: string[] = [];\n\n    protected contextDataRequest: string[] = [];\n\n    protected metaDescription: string = '';\n\n    protected metaKeywords: string = '';\n\n    protected addToHead: string = '';\n\n    protected title: string = '';\n\n    protected metaTags: string = '';\n\n    protected contextData: ContextData = {};\n\n    public attributes = { id: '', class: '' };\n\n    public $containerModal: JQuery | null = null;\n\n    public inModal: boolean = false;\n\n    public events: EventsHash | null = null;\n\n    public parentView: View<object, object> | null = null;\n\n    public hasParent: boolean = false;\n\n    public placeholderData: ElementData = {};\n\n    protected getChildViews(): ChildViews {\n        return this.childViews;\n    }\n\n    protected getEvents(): EventsHash | null {\n        return this.events;\n    }\n\n    public getMetaDescription(): string {\n        return this.metaDescription;\n    }\n\n    public setMetaDescription(metaDescription: string): void {\n        this.metaDescription = metaDescription;\n    }\n\n    public getMetaKeywords(): string {\n        return this.metaKeywords;\n    }\n\n    public setMetaKeywords(metaKeywords: string): void {\n        this.metaKeywords = metaKeywords;\n    }\n\n    public getAddToHead(): string {\n        return this.addToHead;\n    }\n\n    public setAddToHead(addToHead: string): void {\n        this.addToHead = addToHead;\n    }\n\n    public getMetaTags(): JQuery {\n        return jQuery('<head/>')\n            .html(this.metaTags || '')\n            .children('meta');\n    }\n\n    public setMetaTags(metaTags: string): void {\n        this.metaTags = metaTags;\n    }\n\n    public getTitle(): string {\n        return this.title;\n    }\n\n    public setTitle(title: string): void {\n        this.title = title;\n    }\n\n    public getPageDescription(): string {\n        return this.attributes ? this.attributes.id || this.attributes.class || '' : '';\n    }\n\n    public getCanonical(): string {\n        const { history } = Backbone;\n        const canonical = `${window.location.protocol}//${window.location.hostname}/${\n            (<any>history).fragment\n        }`;\n        const indexOfQuery = canonical.indexOf('?');\n\n        // !~ means: indexOf == -1\n        return !~indexOfQuery ? canonical : canonical.substring(0, indexOfQuery);\n    }\n\n    public getRelPrev = jQuery.noop;\n\n    public getRelNext = jQuery.noop;\n\n    public abstract getContext(): TContext;\n\n    public validateContextDataRequest(contextData: ContextData): boolean {\n        return _.keys(contextData).length === this.contextDataRequest.length;\n    }\n\n    public getContextDataRequest(): string[] {\n        return this.contextDataRequest.slice();\n    }\n\n    // @deprecated\n    // only for internal use\n    public setContextData(contextData: ContextData): void {\n        this.contextData = { ...contextData, ...this.contextData };\n    }\n\n    public getTemplateContext(): TContext {\n        const templateContext = this.getContext();\n\n        const contextProperties = {\n            ...(<typeof View>this.constructor).extraContextProperties,\n            ...SCBaseComponentChildViewsComponent.getModifiedContextProperty(this)\n        };\n\n        if (!_.isEmpty(contextProperties)) {\n            // Item key mapping? >> get item info using item key mapping\n            // what about Model property?\n            const safeContext = Utils.deepCopy(templateContext);\n\n            _.each(contextProperties, (propertyGenerator, propertyName) => {\n                templateContext[propertyName] = propertyGenerator.fn(safeContext);\n            });\n        }\n\n        return templateContext;\n    }\n\n    public getTemplateName(): string {\n        return (this.template && (<any>this.template).Name) || '';\n    }\n\n    private compileTemplate(): string {\n        if (this.template && !_.isFunction(this.template)) {\n            const templateName = `${this.template}`;\n            this.template = Utils.requireModules(templateName);\n        }\n        if (typeof this.template === 'function') {\n            const templateContext = this.getTemplateContext();\n            let templateString = this.template(templateContext);\n            templateString = backboneViewDebugTemplateName(templateString, this);\n            templateString = backboneViewPageGeneratorImages(templateString);\n            templateString = scBaseComponentPluginRecollectCMSSelectorsGenerator(\n                templateString,\n                this\n            );\n            templateString = scBaseComponentPluginPostRender(templateString, this);\n\n            return templateString;\n        }\n        throw new Error('View template is not a function');\n    }\n\n    public getJsonLd(jsonLdResult: JSONObject): Promise<JSONObject> {\n        return jQuery.Deferred().resolve(jsonLdResult);\n    }\n\n    public getViewJsonLd(): Promise<JSONObject> {\n        if (Configuration.get('structureddatamarkup.type') !== 'JSON-LD') {\n            return jQuery.Deferred().resolve(null);\n        }\n\n        const promises: Promise<JSONObject>[] = [];\n        _.each(this.childViewInstances, function(child_views): void {\n            _.each(child_views, function(generator): void {\n                if (generator.childViewInstance) {\n                    promises.push(generator.childViewInstance.getViewJsonLd());\n                }\n            });\n        });\n\n        return jQuery.when(...promises).then(\n            (...jsonLds: JSONObject[]): Promise<JSONObject> => {\n                let jsonLdResult: JSONObject = {};\n                let resultPromise: Promise<JSONObject>;\n\n                _.each(\n                    jsonLds,\n                    (jsonld: JSONObject): void => {\n                        jsonLdResult = { ...jsonLdResult, ...Utils.deepCopy(jsonld) };\n                    }\n                );\n                resultPromise = SCBaseComponentChildViewsComponent.getModifiedJsonLd(\n                    this,\n                    jsonLdResult\n                ).then(\n                    (result: JSONObject): JSONObject => {\n                        return { ...result, ...jsonLdResult };\n                    }\n                );\n\n                return resultPromise;\n            }\n        );\n    }\n\n    public render(): this {\n        if (this.events) {\n            this.undelegateEvents();\n        }\n\n        const templateString = this.compileTemplate();\n\n        // Rendering: generating DOM from the HTML string\n        const $tmpl =\n            SC.ENVIRONMENT.jsEnvironment === 'server'\n                ? jQuery('<div/>').append(templateString)\n                : jQuery(templateString);\n\n        this.$el.empty();\n\n        // Appends/render the content HTML string to the view's element\n        if (SC.ENVIRONMENT.jsEnvironment === 'server') {\n            // If $el[0] doesn't exists it means that the ExtraChildView don't need to be shown on this page\n            if (this.$el[0]) {\n                // in page generator we append the content this way because of envjs bug.\n                this.$el[0].innerHTML = $tmpl[0].innerHTML;\n            }\n        } else {\n            this.$el.append($tmpl);\n        }\n\n        backboneViewApplyPermissions(this.$el);\n        backboneViewBootstrap(this.$el, this);\n        backboneViewDatePicker(this.$el, this);\n\n        this.events = {\n            ...SCBaseComponentChildViewsComponent.getModifiedEvents(this),\n            ...this.getEvents()\n        };\n\n        this.delegateEvents();\n\n        SCBaseComponentChildViewsComponent.applyModifiedChildViews(this);\n\n        this.renderCompositeView();\n\n        return this;\n    }\n\n    public destroy(softDestroy: boolean = false): void {\n        SCBaseComponentChildViewsComponent.unregisterViewForPlaceholders(this);\n\n        this.destroyCompositeView();\n\n        if (this.$el) {\n            // http://backbonejs.org/#View-undelegateEvents\n            this.undelegateEvents();\n        }\n\n        this.stopListening();\n\n        if (this.$el && softDestroy) {\n            this.$el.empty();\n        } else if (this.$el) {\n            // http://backbonejs.org/#View-remove\n            this.remove();\n            // unbind all DOM events not just delegated ones\n            this.$el.unbind();\n        }\n    }\n\n    // COMPOSITE VIEW\n    public removeChildViewInstance(\n        containerName: string,\n        childViewName: string,\n        destroy?: boolean\n    ): void {\n        if (\n            this.childViewInstances[containerName] &&\n            this.childViewInstances[containerName][childViewName]\n        ) {\n            const { childViewInstance } = this.childViewInstances[containerName][childViewName];\n\n            destroy && delete this.childViewInstances[containerName][childViewName];\n\n            if (childViewInstance) {\n                childViewInstance.$el.detach();\n                childViewInstance.destroy(!destroy);\n            }\n        }\n    }\n\n    private destroyCompositeView(): void {\n        _.each(this.childViewInstances, (container, containerName) => {\n            _.each(container, (_generator, viewName) => {\n                this.removeChildViewInstance(containerName, viewName);\n            });\n        });\n    }\n\n    public getChildViewInstance(\n        containerName: string,\n        childViewName?: string\n    ): View<object, object> | undefined {\n        childViewName = childViewName || containerName;\n\n        return (\n            this.childViewInstances[containerName] &&\n            this.childViewInstances[containerName][childViewName] &&\n            this.childViewInstances[containerName][childViewName].childViewInstance\n        );\n    }\n\n    public getChildViewInstances(containerName: string): View<object, object>[] {\n        const allChildViews: View<object, object>[] = [];\n\n        if (containerName) {\n            _.each(this.childViewInstances[containerName], childViewGenerator => {\n                if (childViewGenerator.childViewInstance) {\n                    allChildViews.push(childViewGenerator.childViewInstance);\n                }\n            });\n        } else {\n            _.each(this.childViewInstances, childViews => {\n                _.each(childViews, childViewGenerator => {\n                    if (childViewGenerator.childViewInstance) {\n                        allChildViews.push(childViewGenerator.childViewInstance);\n                    }\n                });\n            });\n        }\n\n        return allChildViews;\n    }\n\n    private setCustomTemplate(childView: View<object, object>): void {\n        const templatePrefix = ['cell-', 'row-', 'child-', ''];\n\n        _.each(templatePrefix, prefix => {\n            const templateName = childView.placeholderData[`${prefix}template`];\n            const originalTemplate = childView.template;\n\n            const definitiveTemplateName = Utils.selectByViewportWidth(\n                {\n                    phone: childView.placeholderData[`${prefix}phoneTemplate`], // remember that data-phone-template get's converted in phoneTemplate when we use jQuery.data()\n                    tablet: childView.placeholderData[`${prefix}tabletTemplate`],\n                    desktop: templateName\n                },\n                templateName\n            );\n\n            if (definitiveTemplateName) {\n                // IMPORTANT: we are require()ing the template dynamically! In order to this to work, the template should\n                // be ALREADY loaded and this is automatically handled at build time by gulp template\n                childView[prefix ? `${prefix}Template` : 'template'] = Utils.requireModules(\n                    `${definitiveTemplateName}.tpl`\n                );\n            } else {\n                childView[prefix ? `${prefix}Template` : 'template'] = originalTemplate;\n            }\n        });\n    }\n\n    private finishRender(childView: View<object, object>, $placeholder: JQuery): void {\n        // HEADS UP! we use the placeholder as the children view's container element ($el)\n        childView.$el = $placeholder;\n\n        // keep the placeholder classes\n        const placeholderClass = $placeholder.attr('class');\n        childView.className = `${childView.className || ''} ${placeholderClass || ''}`;\n\n        childView.render();\n    }\n\n    public setChildViewIndex(\n        containerName: string,\n        viewName: string,\n        index: number,\n        render: boolean\n    ): void {\n        if (\n            this.childViewInstances[containerName] &&\n            this.childViewInstances[containerName][viewName]\n        ) {\n            this.childViewInstances[containerName][viewName].childViewIndex = index;\n\n            if (render) {\n                this.render();\n            }\n        }\n    }\n\n    // ie: contexts = ['item', 'order']\n    public getContextData(contexts?: string[]): ContextData {\n        if (contexts) {\n            const contextData = {};\n            let i = contexts.length;\n\n            while (i--) {\n                const selfContextData: ContextData = {\n                    ...SCBaseComponentChildViewsComponent.getModifiedContext(this),\n                    ...this.contextData,\n                    ...(<typeof View>this.constructor).contextData\n                };\n\n                if (selfContextData[contexts[i]]) {\n                    contextData[contexts[i]] = _.bind(selfContextData[contexts[i]], this);\n                    contexts.splice(i, 1);\n                }\n            }\n\n            if (contexts.length && this.parentView) {\n                return { ...this.parentView.getContextData(contexts), ...contextData };\n            }\n\n            return contextData;\n        }\n\n        return this.contextData;\n    }\n\n    private renderChildViewInstance(\n        childViewInstance: View<object, object> | null,\n        placeholder: JQuery,\n        numberViews: number,\n        isExternal: boolean\n    ): void {\n        if (childViewInstance) {\n            this.setCustomTemplate(childViewInstance);\n\n            if (numberViews === 1 && !isExternal) {\n                this.finishRender(childViewInstance, placeholder);\n            } else {\n                childViewInstance.render();\n                placeholder.append(childViewInstance.$el);\n            }\n        }\n    }\n\n    private getPlaceholder(selector?: ChildViewSelector): string {\n        let placeholder = '';\n\n        if (selector) {\n            _.each(selector, (value, key) => {\n                placeholder += `[${key}=\"${value}\"]`;\n            });\n        }\n\n        return placeholder;\n    }\n\n    private renderChildViewContainer(containerName: string, createChild?: boolean): void {\n        const generators = _.values(this.childViewInstances[containerName]);\n\n        generators.sort((a, b) => {\n            return a.childViewIndex - b.childViewIndex;\n        });\n\n        _.each(generators, generator => {\n            if (createChild) {\n                this.createChildViewInstance(generator);\n            }\n\n            if (!generator.$placeholder) {\n                const placeholder = this.getPlaceholder(generator.childViewSelector);\n\n                generator.$placeholder = this.$(placeholder);\n            }\n\n            this.renderChildViewInstance(\n                generator.childViewInstance || null,\n                generator.$placeholder,\n                generators.length,\n                generator.childViewIsExternal || false\n            );\n        });\n    }\n\n    private createChildViewInstance(\n        generator: ChildViewGenerator<object, object>,\n        elementData = {}\n    ): View<object, object> | undefined {\n        elementData = elementData || {};\n\n        const options = _.extend({}, elementData);\n\n        if (generator.childViewInstance) {\n            generator.childViewInstance.destroy();\n        }\n\n        if ((<any>generator.childViewConstructor).extend === (<any>View).extend) {\n            // special case of 'Some.View': SomeView\n            // generator.childViewInstance = new generator.childViewConstructor(options);\n            const constructor = generator.childViewConstructor as ClassView<object, object>;\n            generator.childViewInstance = generator.childViewIsExternal\n                ? new constructor()\n                : new constructor(options);\n        } else {\n            // common case 'Some.View': function() { ... }\n            const constructor = generator.childViewConstructor as (<\n                TContext extends object,\n                TEvents extends object\n            >(\n                ...args: any[]\n            ) => View<TContext, TEvents>);\n            generator.childViewInstance = generator.childViewIsExternal\n                ? constructor.call(null)\n                : constructor.call(this, options);\n\n            if (_.isFunction(generator.childViewInstance)) {\n                generator.childViewInstance = generator.childViewInstance();\n            }\n        }\n\n        if (generator.childViewInstance) {\n            if (!generator.childViewIsExternal || generator.childViewInstance.parentView) {\n                generator.childViewInstance.parentView = generator.childViewIsExternal\n                    ? this\n                    : generator.childViewInstance.parentView || this;\n                generator.childViewInstance.hasParent = true;\n            }\n\n            const contextDataRequest = generator.childViewInstance.getContextDataRequest();\n\n            let contextData = {};\n\n            if (contextDataRequest.length) {\n                contextData = this.getContextData(contextDataRequest);\n\n                if (!generator.childViewInstance.validateContextDataRequest(contextData)) {\n                    console.error(\n                        'Requested context data is not valid for this child view instance.'\n                    );\n\n                    generator.childViewInstance = undefined;\n\n                    return generator.childViewInstance;\n                }\n            }\n\n            generator.childViewInstance.setContextData(contextData);\n            generator.childViewInstance.placeholderData = elementData || {};\n\n            if (\n                !(\n                    generator.childViewInstance.attributes &&\n                    generator.childViewInstance.attributes['data-root-component-id']\n                )\n            ) {\n                generator.childViewInstance.attributes = generator.childViewInstance.attributes || {\n                    id: '',\n                    class: ''\n                };\n                generator.childViewInstance.attributes['data-root-component-id'] =\n                    (this.attributes && this.attributes['data-root-component-id']) || '';\n            }\n\n            this.setCustomTemplate(generator.childViewInstance);\n        }\n\n        return generator.childViewInstance;\n    }\n\n    // @deprecated\n    public renderChild(elementOrViewName: string | HTMLElement): View<object, object> | undefined {\n        let viewName: string;\n\n        if (typeof elementOrViewName !== 'string') {\n            viewName = jQuery(elementOrViewName).data('view');\n        } else {\n            viewName = elementOrViewName;\n        }\n\n        if (viewName) {\n            _.each(this.childViewInstances[viewName], generator => {\n                if (generator.childViewInstance) {\n                    generator.childViewInstance.destroy(true);\n                    generator.childViewInstance = null;\n                }\n            });\n\n            this.renderChildViewContainer(viewName, true);\n        }\n\n        return this.getChildViewInstance(viewName);\n    }\n\n    private renderCompositeView(): void {\n        _.each(this.childViewInstances, (_childViews, containerName) => {\n            this.$el.find(`[data-cms-area=\"${containerName}\"]`).html('');\n        });\n\n        this.addChildViewInstances(this.getChildViews());\n        this.createChildViewInstances();\n        this.renderChildViewInstances();\n    }\n\n    private createChildViewInstances(): void {\n        _.each(this.childViewInstances, (childViews: ChildViewInstance) => {\n            _.each(childViews, generator => {\n                const placeholder = this.getPlaceholder(generator.childViewSelector);\n                const $element = this.$(placeholder);\n\n                if ($element.length) {\n                    generator.$placeholder = $element;\n\n                    if (generator.childViewConstructor) {\n                        this.createChildViewInstance(generator, $element.data());\n                    }\n                }\n            });\n        });\n    }\n\n    private renderChildViewInstances(): void {\n        _.each(this.childViewInstances, (_childViews, containerName) => {\n            this.renderChildViewContainer(containerName);\n        });\n    }\n\n    public addChildViewInstances(childViews: StaticChildViews, render: boolean = false): void {\n        if (!this.childViewInstances) {\n            this.childViewInstances = {};\n        }\n\n        _.each(childViews, (childView, childViewContainer) => {\n            const isCMS = childViewContainer.indexOf('cms:') === 0;\n\n            childViewContainer = childViewContainer.replace('cms:', '');\n\n            if (!this.childViewInstances[childViewContainer]) {\n                this.childViewInstances[childViewContainer] = {};\n            }\n\n            const childViewSelector: ChildViewSelector = isCMS\n                ? { 'data-cms-area': childViewContainer }\n                : { 'data-view': childViewContainer };\n\n            if (_.isFunction(childView)) {\n                const generator = this.childViewInstances[childViewContainer][childViewContainer];\n\n                if (generator && generator.childViewInstance) {\n                    generator.childViewInstance.destroy();\n                }\n\n                this.childViewInstances[childViewContainer][childViewContainer] = {\n                    childViewIndex: 10,\n                    childViewConstructor: childView,\n                    childViewSelector\n                };\n            } else {\n                _.each(childView, (childViewGenerator, childViewName) => {\n                    const generator = this.childViewInstances[childViewContainer][childViewName];\n\n                    if (generator && generator.childViewInstance) {\n                        generator.childViewInstance.destroy();\n                    }\n\n                    this.childViewInstances[childViewContainer][childViewName] = {\n                        childViewIndex: childViewGenerator.childViewIndex || 10,\n                        childViewConstructor: childViewGenerator.childViewConstructor,\n                        childViewInstance: childViewGenerator.childViewInstance,\n                        childViewSelector:\n                            childViewGenerator.childViewSelector || childViewSelector,\n                        childViewIsExternal: childViewGenerator.childViewIsExternal\n                    };\n\n                    if (childViewGenerator.childViewInstance) {\n                        const placeholder = this.getPlaceholder(\n                            childViewGenerator.childViewSelector\n                        );\n\n                        if (\n                            !childViewGenerator.childViewIsExternal ||\n                            childViewGenerator.childViewInstance.parentView\n                        ) {\n                            childViewGenerator.childViewInstance.parentView = childViewGenerator.childViewIsExternal\n                                ? this\n                                : childViewGenerator.childViewInstance.parentView || this;\n                            childViewGenerator.childViewInstance.hasParent = true;\n                        }\n\n                        childViewGenerator.childViewInstance.placeholderData =\n                            this.$(placeholder).data() || {};\n\n                        if (\n                            !(\n                                childViewGenerator.childViewInstance.attributes &&\n                                childViewGenerator.childViewInstance.attributes[\n                                    'data-root-component-id'\n                                ]\n                            )\n                        ) {\n                            childViewGenerator.childViewInstance.attributes = childViewGenerator\n                                .childViewInstance.attributes || {\n                                id: '',\n                                class: ''\n                            };\n                            childViewGenerator.childViewInstance.attributes[\n                                'data-root-component-id'\n                            ] =\n                                (this.attributes && this.attributes['data-root-component-id']) ||\n                                '';\n                        }\n\n                        this.setCustomTemplate(childViewGenerator.childViewInstance);\n                    }\n                });\n            }\n\n            if (render) {\n                this.renderChildViewContainer(childViewContainer);\n            }\n        });\n    }\n\n    public updateChildViewInstances(childViews: ChildViewInstances, render: boolean): void {\n        _.each(childViews, (childView, containerName) => {\n            _.each(childView, (_generator, childViewName) => {\n                this.removeChildViewInstance(containerName, childViewName);\n            });\n        });\n\n        this.addChildViewInstances(childViews, render);\n    }\n\n    private modalNavigation(options: ModalOptions): any {\n        // NavigationHelper.Plugins.Modals triggering the beforeShowContent event twice\n        // for the ProductDetails.Quick.View\n        // TODO: refactor this method to have proper types\n        const layout: any = Environment.getApplication().getLayout();\n        if (options && options.silence) {\n            delete options.silence;\n            return layout._showInModal(this, options);\n        }\n        return layout.showInModal(this, options);\n    }\n}\n"]}