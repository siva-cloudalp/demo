{"version":3,"sources":["OrderWizard.Module.Address.ts"],"names":[],"mappings":"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","file":"OrderWizard.Module.Address.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"OrderWizard.Module.Address\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/UnderscoreExtended.d.ts\" />\n\nimport * as _ from 'underscore';\n\nimport * as order_wizard_address_module_tpl from 'order_wizard_address_module.tpl';\nimport * as order_wizard_address_row_tpl from 'order_wizard_address_row.tpl';\nimport * as order_wizard_address_cell_tpl from 'order_wizard_address_cell.tpl';\nimport * as paymentinstrument_creditcard_edit_tpl from 'paymentinstrument_creditcard_edit.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { AddressModel } from '../../../Commons/Address/JavaScript/Address.Model';\nimport { WizardStepModule } from '../../Wizard/JavaScript/Wizard.StepModule';\nimport { AddressDetailsView } from '../../../Commons/Address/JavaScript/Address.Details.View';\n\nimport AddressEditView = require('../../../Commons/Address/JavaScript/Address.Edit.View');\n\nimport GlobalViewsConfirmationView = require('../../../Commons/GlobalViews/JavaScript/GlobalViews.Confirmation.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\n\n// @class OrderWizard.Module.Address @extend Wizard.Module\nconst OrderWizardModuleAddress: any = WizardStepModule.extend({\n    template: order_wizard_address_module_tpl,\n\n    sameAsMessage: Utils.translate('Same as Address'),\n\n    selectAddressErrorMessage: {\n        errorCode: 'ERR_CHK_SELECT_AN_ADDRESS',\n        errorMessage: Utils.translate('Please select an address')\n    },\n\n    invalidAddressErrorMessage: {\n        errorCode: 'ERR_CHK_INVALID_ADDRESS',\n        errorMessage: Utils.translate('The selected address is invalid')\n    },\n\n    events: {\n        'click [data-action=\"submit\"]': 'submit',\n        'click [data-action=\"select\"]': 'selectAddress',\n        'click [data-action=\"change-address\"]': 'changeAddressHandler',\n        'click [data-action=\"remove\"]': 'validateAddressRemovalHandler',\n        'click [data-action=\"edit-address\"]': 'editAddress',\n        'change [data-action=\"same-as\"]': 'markSameAsHandler',\n        'change form': 'changeForm'\n    },\n\n    errors: ['ERR_CHK_INCOMPLETE_ADDRESS', 'ERR_CHK_INVALID_ADDRESS'],\n\n    initialize: function() {\n        WizardStepModule.prototype.initialize.apply(this, arguments);\n    },\n\n    // @method editAddress Intercept the edition of address. When the source of addresses is extracted from the current model\n    // (which is the expected behavior form now on) that address collection can contains address that are temporal or just not in the addresses\n    // profile collection. One example is when you pay a quote transforming it into a sales order, the original shipping/billing address\n    // used to created to quote can have been removed from profile addresses and so are added as temporal address, that when edited are created\n    // @param {jQuery.Event} e\n    // @return {Void}\n    editAddress: function(e) {\n        const address_id_str = this.$(e.target).data('id');\n        const address_id = parseInt(address_id_str, 10);\n\n        if (_.isNaN(address_id) || !_.isNumber(address_id)) {\n            e.stopPropagation();\n            e.preventDefault();\n\n            const collection = this.getAddressCollection();\n            const selected_address = collection.get(address_id_str);\n            let view;\n\n            selected_address.unset('internalid', { silent: true });\n\n            view = new AddressEditView({\n                application: this.wizard.application,\n                collection: collection,\n                model: selected_address\n            });\n\n            const add_new_address_on_profile = function(model) {\n                // Make sure that the new address now take part of the profile addresses\n                // This is important if a temporal address is edited more than once\n                this.wizard.options.profile.get('addresses').add(model);\n            };\n            const reset_current_address = function(model) {\n                // After saving the temp address, we set it as the one selected\n                this.setAddress(model.id);\n            };\n\n            view.model.once('change', add_new_address_on_profile, this);\n\n            // If the address being edited is the selected one we must re-set once it is created\n            if (this.wizard.model.get(this.manage) === address_id_str) {\n                view.model.once('sync', reset_current_address, this);\n            }\n\n            view.once(\n                'modal-close',\n                function() {\n                    view.model.off('sync', reset_current_address);\n                    view.model.off('change', add_new_address_on_profile);\n                },\n                this\n            );\n\n            this.wizard.application.getLayout().showInModal(view);\n        }\n    },\n\n    // @method render\n    render: function(not_trigger_ready: boolean) {\n        // Is Active is overridden by child modules, like Shipping to hide this module in Multi Ship To\n        if (!this.isActive()) {\n            return this.$el.empty();\n        }\n\n        this.addresses = this.getAddressCollection();\n        this.isGuest = this.getIsCurrentUserGuest();\n        this.isSameAsEnabled = _.isFunction(this.options.enable_same_as)\n            ? this.options.enable_same_as()\n            : this.options.enable_same_as;\n\n        this.addressId = this.model.get(this.manage);\n\n        this.evaluateDisablingSameAsCheckBox();\n\n        // if the selected manage address is the fake one\n        if (this.addressId && ~this.addressId.indexOf('null')) {\n            // we silently remove it\n            this.setAddress(null, {\n                silent: true\n            });\n        }\n\n        this.evaluateSameAs();\n        this.address = this.getSelectedAddress();\n\n        // Add event listeners to allow special flows\n        this.eventHandlersOn();\n\n        this.addressView = null;\n\n        // Calls the render function\n        this._render();\n\n        const is_address_new = this.address.isNew();\n\n        if (\n            !((this.isSameAsEnabled && this.sameAs) || (this.addressId && !is_address_new)) &&\n            this.isGuest &&\n            !is_address_new\n        ) {\n            this.setAddress(this.address.id, {\n                silent: true\n            });\n        }\n\n        // the module is ready when a valid address is selected.\n        if (\n            !not_trigger_ready &&\n            this.address &&\n            this.addressId &&\n            this.address.get('isvalid') === 'T'\n        ) {\n            this.trigger('ready', true);\n        }\n    },\n\n    // @method enableInterface\n    enableInterface: function() {\n        this.$('[data-action=\"change-address\"]').attr('disabled', false);\n\n        this.evaluateDisablingSameAsCheckBox();\n\n        if (!this.disableSameAsCheckBox) {\n            this.$('[data-action=\"same-as\"]').attr('disabled', false);\n        }\n    },\n\n    // @method evaluateDisablingSameAsCheckBox Evaluates if the same as checkbox should be enabled or not. This values is saved in the instance variable disableSameAsCheckBox\n    // it is possible to indicate that if the new value is enable to re-render the view @param {Boolean} reRenderIsChange\n    evaluateDisablingSameAsCheckBox: function(reRenderIsChange: boolean): void {\n        // The other manage address is not selected AND the other temp address is not created\n        const oldValue = this.disableSameAsCheckBox;\n        this.disableSameAsCheckBox =\n            (this.model.get(this.sameAsManage) === undefined ||\n                this.model.get(this.sameAsManage) === null ||\n                this.model.get(this.sameAsManage) === '-------null') &&\n            !this.model.get(`temp${this.sameAsManage}`);\n\n        this.postEvaluateDisablingSameAsCheckBox();\n\n        if (oldValue !== this.disableSameAsCheckBox && reRenderIsChange) {\n            this.render();\n        }\n    },\n\n    // @method postEvaluateDisablingSameAsCheckBox method used to execute any logic before set evaluateDisablingSameAsCheckBox and/or trigger re-render\n    postEvaluateDisablingSameAsCheckBox: function(): void {},\n\n    // @method disableInterface\n    disableInterface: function() {\n        this.$('[data-action=\"change-address\"], [data-action=\"same-as\"]').attr('disabled', true);\n    },\n\n    // @method getChangeLinkText This function, which is called from the template, returns the label for the change link @return {String}\n    getChangeLinkText: function() {\n        return this.getIsCurrentUserGuest()\n            ? Utils.translate('Edit Address')\n            : Utils.translate('Change address');\n    },\n\n    // @method getIsCurrentUserGuest Returns true if the current user is logged in as Guest @return {Boolean}\n    getIsCurrentUserGuest: function(): boolean {\n        return this.wizard.options.profile.get('isGuest') === 'T';\n    },\n\n    // @method validateAddressRemovalHandler Handle address removal validating that the address selected is not being used by someone else @param {HTMLEvent}e\n    validateAddressRemovalHandler: function(\n        e // address_module\n    ) {\n        const address_id = jQuery(e.target).data('id');\n        this.validateAddressRemoval(address_id);\n    },\n\n    // @method validateAddressRemoval Handle address removal validating that the address selected is not being used by someone else @param {String} address_id\n    validateAddressRemoval: function(\n        address_id: string // address_module\n    ) {\n        let deleteConfirmationView;\n        let body = '';\n\n        if (this.isAddressIdValidForRemoval(address_id)) {\n            body = Utils.translate('Are you sure you want to remove this address?');\n        } else {\n            const other_address_message =\n                this.sameAsManage === 'billaddress'\n                    ? Utils.translate('(billing address)')\n                    : this.sameAsManage === 'shipaddress'\n                    ? Utils.translate('(shipping address)')\n                    : '';\n\n            body = Utils.translate(\n                'The selected address is in use. $(0) Are you sure you want to delete this address?',\n                other_address_message\n            );\n        }\n\n        deleteConfirmationView = new GlobalViewsConfirmationView({\n            callBack: this.removeAddress,\n            callBackParameters: {\n                context: this,\n                addressId: address_id\n            },\n            title: Utils.translate('Remove Address'),\n            body: body,\n            autohide: true\n        });\n\n        this.wizard.application.getLayout().showInModal(deleteConfirmationView);\n    },\n\n    removeAddress: function(options) {\n        options.context.addresses.get(options.addressId).destroy({ wait: true });\n    },\n\n    // @method isAddressIdValidForRemoval Validate that the address that want to be removed is not used by the related address (sameAsManage) @returns {Boolean}\n    isAddressIdValidForRemoval: function(address_id: string): boolean {\n        const related_address_id = this.model.get(this.sameAsManage);\n        return +address_id !== +related_address_id;\n    },\n\n    // @method evaluateSameAs\n    evaluateSameAs: function() {\n        const manage_address_id = this.addressId;\n        const other_address = this.getTheOtherAddress();\n        const other_address_id = (other_address && other_address.get('internalid')) || null;\n\n        if (manage_address_id && manage_address_id === other_address_id) {\n            this.sameAs = true;\n        } else if (!this.tempAddress && manage_address_id !== other_address_id) {\n            this.sameAs = false;\n        } else {\n            // We need a default sameAs value so is no longer undefined\n            // if the sameAs was checked, and we have an address id set or there is a temporary address\n            this.sameAs =\n                this.sameAs &&\n                (manage_address_id || this.tempAddress || (this.isGuest && this.addresses.length));\n        }\n        this.model.set('sameAs', this.sameAs);\n    },\n\n    // @method eventHandlersOn\n    eventHandlersOn: function() {\n        const self = this;\n        const other_address = this.sameAsManage;\n\n        this.eventHandlersOff();\n\n        this.addresses\n            // Adds events to the collection\n            .on(\n                'add',\n                function(added_address) {\n                    this.address = added_address;\n                    this.addressId = added_address.get('internalid');\n\n                    this.render(true);\n                },\n                this\n            )\n            .on(\n                'reset sync remove change destroy',\n                function() {\n                    this.render(true);\n                },\n                this\n            )\n            .on(\n                'destroy',\n                function(deleted_address) {\n                    // if the destroyed address was used as the sameAs\n                    if (self.model.get(other_address) === deleted_address.id) {\n                        // we need to remove it, as it doesn't exists\n                        self.model.set(other_address, null);\n                    }\n                },\n                this\n            );\n\n        // when the value for the other address changes\n        this.model.on(\n            `change:${other_address}`,\n            function(model, value) {\n                // If same as is enabled and its selected\n                if (self.isSameAsEnabled && self.sameAs) {\n                    // we change this manage to the value\n                    self.setAddress(value);\n                    self.render();\n                } else if (self.isSameAsEnabled) {\n                    // This evaluation must be done despite self.sameAs is set or not to re-evaluate if the check-box status remains equal or not.\n                    // Ex. If in OPC neither shipping address not billing address is selected, and after that I select one shipping address, then it's require\n                    // to re-evaluate the state of the sameAs check-box\n                    this.evaluateDisablingSameAsCheckBox(true);\n                }\n            },\n            this\n        );\n\n        if (this.isSameAsEnabled && this.sameAs) {\n            this.model.on(\n                `change:temp${other_address}`,\n                function(model, temp_address) {\n                    self.tempAddress = temp_address;\n                    self.render();\n                },\n                this\n            );\n        } else if (this.isSameAsEnabled) {\n            this.model.once(\n                `change:temp${other_address}`,\n                function() {\n                    // The following consideration take importance in OPC.\n                    // Changes in the temp (other) address will take into account only if there is no a real (other) address, otherwise this generate that\n                    // render gets executed more than once, because is this event always get triggered by the changeForm method.\n\n                    // Problem example: When the temp address change because of submitting the other address (particularly shipping address) this will cause\n                    // that the billing address get re-rendered, and if the billing is not completed all errors will disappear.\n                    if (!this.model.get(other_address)) {\n                        this.render();\n                    }\n                },\n                self\n            );\n        }\n\n        _.isFunction(this.onEventHandlersOn) && this.onEventHandlersOn();\n    },\n\n    // @method eventHandlersOff\n    eventHandlersOff: function() {\n        // Removes previously added events on the address collection\n        this.addresses && this.addresses.off(null, null, this);\n        this.model\n            .off(`change:${this.sameAsManage}`, null, this)\n            .off(`change:temp${this.sameAsManage}`, null, this);\n\n        _.isFunction(this.onEventHandlersOff) && this.onEventHandlersOff();\n    },\n\n    past: function() {\n        this.eventHandlersOff();\n    },\n\n    future: function() {\n        this.eventHandlersOff();\n    },\n\n    // @method selectAddress Captures the click on the select button of the addresses list @param {HTMLEvent} e\n    selectAddress: function(e) {\n        jQuery('.wizard-content .alert-error').hide();\n\n        // Grabs the address id and sets it to the model\n        // on the position in which our sub class is managing (billaddress or shipaddress)\n        this.setAddress(\n            jQuery(e.target)\n                .data('id')\n                .toString()\n        );\n\n        // re render so if there is changes to be shown they are represented in the view\n        this.render();\n\n        // As we already set the address, we let the step know that we are ready\n        this.trigger('ready', true);\n    },\n\n    // @method setAddress @param {String} address_id @param {Object} options\n    setAddress: function(address_id, options) {\n        this.model.setAddress(this.manage, address_id, options);\n        this.addressId = address_id;\n\n        return this;\n    },\n\n    // @method unsetAddress @param {Boolean} norender @param {Object} options\n    unsetAddress: function(norender: boolean, options) {\n        this.setAddress(null, options);\n        this.tempAddress = null;\n\n        if (!norender) {\n            this.render();\n        }\n    },\n\n    // @method changeAddressHandler @param {HTMLEvent} e\n    changeAddressHandler: function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const $link = jQuery(e.currentTarget);\n        const is_disabled = $link.attr('disabled');\n\n        this.changeAddress(is_disabled);\n    },\n\n    // @method changeAddress @parma {Boolean} is_disabled\n    changeAddress: function(is_disabled: boolean) {\n        if (is_disabled) {\n            return;\n        }\n\n        if (this.options.edit_url) {\n            this.unsetAddress(true);\n\n            Backbone.history.navigate(`${this.options.edit_url}?force=true`, {\n                trigger: true\n            });\n        } else {\n            this.unsetAddress();\n        }\n    },\n\n    // @method submit. Module.submit() The step will call this function when the user clicks next or all the modules are ready\n    // Will take care of saving the address if its a new one. Other way it will just\n    // return a resolved promise to comply with the API\n    submit: function() {\n        // Is Active is overridden by child modules, like Shipping to hide this module in Multi Ship To\n        if (!this.isActive()) {\n            return jQuery.Deferred().resolve();\n        }\n        const self = this;\n        // its a new address\n        if (this.addressView) {\n            // The saveForm function expects the event to be in an element of the form or the form itself,\n            // But in this case it may be in a button outside of the form (as the nav buttons live in the step)\n            //  or triggered by a module ready event, so we need to create a fake event which the target is the form itself\n            const fake_event = jQuery.Event('submit', {\n                target: this.addressView.$('form').get(0)\n            });\n            // Calls the saveForm, this may kick the backbone.validation, and it may return false if there were errors,\n            // other ways it will return an Ajax promise\n            const result = this.addressView.saveForm(fake_event);\n\n            // Went well, so there is a promise we can return, before returning we will set the address in the model\n            // and add the model to the profile collection\n            if (result && !result.frontEndValidationError) {\n                return result\n                    .then(function(model) {\n                        // Set Address id to the order model. This has to go before the following self.addresses.add() as it triggers the render\n                        self.setAddress(model.internalid);\n\n                        // we only want to trigger an event on add() when the user has some address and is not guest because if not,\n                        // in OPC case (two instances of this module in the same page), the triggered re-render erase the module errors.\n                        const add_options =\n                            self.isGuest || self.addresses.length === 0 ? { silent: true } : null;\n                        self.addresses.add(model, add_options);\n\n                        self.model.set(`temp${self.manage}`, null);\n\n                        self.newAddressCreated && self.newAddressCreated(model.internalid, add_options);\n\n                        self.render();\n                    });\n            } else {\n                // There were errors so we return a rejected promise\n                return jQuery.Deferred().reject({\n                    errorCode: 'ERR_CHK_INCOMPLETE_ADDRESS',\n                    errorMessage: Utils.translate('The address is incomplete')\n                });\n            }\n        }\n        return this.isValid();\n    },\n\n    // @method getAddressCollection Return the address collection source\n    // @return {Address.Collection}\n    getAddressCollection: function() {\n        return this.wizard.options.profile.get('addresses');\n    },\n\n    isValid: function() {\n        // Is Active is override by child modules, like Shipping to hide this module in Multi Ship To\n        if (!this.isActive() || this.tempAddress) {\n            return jQuery.Deferred().resolve();\n        }\n\n        const addresses = this.getAddressCollection();\n        const selected_address = addresses && addresses.get(this.model.get(this.manage));\n\n        if (selected_address) {\n            if (selected_address.get('isvalid') === 'T') {\n                return jQuery.Deferred().resolve();\n            }\n\n            return jQuery.Deferred().reject(this.invalidAddressErrorMessage);\n        }\n\n        return jQuery.Deferred().reject(this.selectAddressErrorMessage);\n    },\n\n    changeForm: function(e) {\n        this.model.set(\n            `temp${this.manage}`,\n            (<any>jQuery(e.target).closest('form')).serializeObject()\n        );\n    },\n\n    markSameAsHandler: function(e) {\n        const is_checked = jQuery(e.target).prop('checked');\n        this.markSameAs(is_checked);\n    },\n\n    // @method markSameAs @param {Boolean} is_checked\n    markSameAs: function(is_checked: boolean) {\n        this.sameAs = is_checked;\n\n        this.model.set('sameAs', is_checked);\n\n        this.setAddress(is_checked ? this.model.get(this.sameAsManage) : null);\n\n        this.tempAddress = is_checked ? this.model.get(`temp${this.sameAsManage}`) : null;\n\n        this.render();\n    },\n\n    // @method getSelectedAddress @returns the selected address\n    getSelectedAddress: function() {\n        if (!this.addressId) {\n            if (this.sameAs && this.tempAddress) {\n                return new AddressModel(this.tempAddress);\n            }\n        }\n\n        // If there is no selected address, then we look for the default address depending on\n        // the type of manage among the existing addresses.\n        let address = this.addresses.get(this.addressId);\n        if (!address) {\n            const defaultManage =\n                this.manage === 'billaddress' ? 'defaultbilling' : 'defaultshipping';\n\n            address = _.find(this.addresses.models, currentAddress => {\n                return currentAddress.get(defaultManage) === 'T';\n            });\n\n            if (address) {\n                this.setAddress(address.get('internalid'), {\n                    silent: true\n                });\n            }\n        }\n        return address || this.getEmptyAddress();\n    },\n\n    // @method getEmptyAddress\n    // If the same as check-box is not checked\n    // we return a new model with any attributes that were already typed into the address form\n    // that's what the temp + this.manage is, the temporary address for this manage.\n    getEmptyAddress: function() {\n        return new AddressModel(\n            this.isSameAsEnabled && this.sameAs ? null : this.model.get(`temp${this.manage}`)\n        );\n    },\n\n    // @method getTheOtherAddress returns the address in the addresses collection which id is current model's sameAsManage attribute\n    getTheOtherAddress: function() {\n        return this.addresses.get(this.model.get(this.sameAsManage));\n    },\n\n    // @method getAddressesToShow returns a copy of the addresses collection including the new address button available to show\n    getAddressesToShow: function() {\n        let addresses_to_show;\n\n        if (this.addresses && !!this.addresses.length) {\n            addresses_to_show = paymentinstrument_creditcard_edit_tpl\n                ? this.addresses.getCollectionForRendering()\n                : this.addresses;\n        }\n\n        return addresses_to_show ? addresses_to_show.models : [];\n    },\n\n    // @method manageError @param {Object} error\n    manageError: function(error) {\n        if (error && error.errorCode !== 'ERR_CHK_INCOMPLETE_ADDRESS') {\n            WizardStepModule.prototype.manageError.apply(this, arguments);\n        }\n    },\n\n    // @method getAddressListOptions Get the object containing the options to be passed to the Address.Details view when rendering the list of available addresses\n    // @return {showSelect:Boolean,selectMessage:String,hideDefaults:Boolean}\n    getAddressListOptions: function() {\n        return {\n            showSelect: true,\n            selectMessage: this.selectMessage || '',\n            hideDefaults: true,\n            selectedAddressId: (this.address && this.address.get('internalid')) || '',\n            hideSelector: false,\n            manage: this.manage\n        };\n    },\n\n    prepopulateAddressModel: function() {\n        if (\n            this.wizard.options.profile.get('isperson') &&\n            this.wizard.isAutoPopulateEnabled &&\n            this.wizard.isAutoPopulateEnabled()\n        ) {\n            this.address.set(\n                'fullname',\n                `${this.wizard.options.profile.get('firstname')} ${this.wizard.options.profile.get(\n                    'lastname'\n                )}`\n            );\n        }\n\n        return this.address;\n    },\n\n    childViews: {\n        'Single.Address.Details': function() {\n            return new AddressDetailsView({\n                model: this.address,\n                hideDefaults: true,\n                manage: this.manage,\n                showChangeButton: !this.isGuest,\n                hideRemoveButton: !!this.isGuest,\n                hideActions: !this.address.id,\n                showError: true,\n                hideSelector: true\n            });\n        },\n        'New.Address.Form': function() {\n            this.addressView = new AddressEditView({\n                application: this.wizard.application,\n                collection: this.addresses,\n                model: this.prepopulateAddressModel(),\n                manage: this.manage,\n                hideFooter: true,\n                hideHeader: true\n            });\n\n            return this.addressView;\n        },\n        'Address.List': function() {\n            return new BackboneCollectionView({\n                collection: this.getAddressesToShow(),\n                viewsPerRow:\n                    this.itemsPerRow ||\n                    (Utils.isDesktopDevice() ? 3 : Utils.isTabletDevice() ? 2 : 1),\n                rowTemplate: order_wizard_address_row_tpl,\n                cellTemplate: order_wizard_address_cell_tpl,\n                childView: AddressDetailsView,\n                childViewOptions: this.getAddressListOptions()\n            });\n        }\n    },\n\n    // @method getContext @return {OrderWizard.Module.Address.Context}\n    getContext: function() {\n        // @class OrderWizard.Module.Address.Context\n        return {\n            // @property {Boolean} showTitle\n            showTitle: !!(!this.options.hide_title && this.getTitle()),\n            // @property {String} title\n            title: this.getTitle(),\n            // @property {Boolean} isSameAsEnabled\n            isSameAsEnabled: !!this.isSameAsEnabled,\n            // @property {Boolean} isSameAsCheckBoxDisable\n            isSameAsCheckBoxDisable: !!this.disableSameAsCheckBox,\n            // @property {Boolean} isSameAsSelected\n            isSameAsSelected: !!this.sameAs,\n            // @property {String} sameAsMessage\n            sameAsMessage: this.sameAsMessage,\n            // @property {Boolean} showSingleAddressDetails\n            showSingleAddressDetails: !!(\n                this.address &&\n                this.address.get('internalid') &&\n                ((this.isSameAsEnabled && this.sameAs) ||\n                    (this.addressId && !this.address.isNew()) ||\n                    (this.getAddressesToShow().length && this.isGuest))\n            ),\n            // @property {Boolean} showAddressList\n            showAddressList: !!(this.getAddressesToShow().length > 1),\n            // @property {String} changeLinkText\n            changeLinkText: this.getChangeLinkText(),\n            // @property {String} selectedAddressId\n            selectedAddressId: (this.address && this.address.get('internalid')) || '',\n            // @property {Boolean} showManageValue\n            showManageValue: !!this.manage,\n            // @property {Boolean} manageValue\n            manageValue: this.manage,\n            // @property {Boolean} showSaveButton\n            showSaveButton: this.showSaveButton\n        };\n    }\n});\n\nexport = OrderWizardModuleAddress;\n"]}