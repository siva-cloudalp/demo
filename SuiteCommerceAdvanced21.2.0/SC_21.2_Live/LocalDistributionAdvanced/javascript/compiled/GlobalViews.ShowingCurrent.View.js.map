{"version":3,"sources":["GlobalViews.ShowingCurrent.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;IAYF,gEAAgE;IACnD,QAAA,6BAA6B,GAAQ,YAAY,CAAC,MAAM,CAAC;QAClE,QAAQ,EAAE,gCAAgC;QAE1C,eAAe,EAAE;YACb,IAAM,eAAe,GAAQ,QAAQ,CAAC,OAAO,CAAC;YAC9C,IAAM,WAAW,GAAG,KAAK,CAAC,eAAe,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAEpE,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAClD,CAAC;QAED,qEAAqE;QACrE,eAAe,EAAE,UAAS,SAAS;YAC/B,IAAM,WAAW,GAAG,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;YAE5C,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,CAAC;QAED,qEAAqE;QACrE,UAAU,EAAE;YACR,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YAEnD,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;YAEzE,iDAAiD;YACjD,OAAO;gBACH,+BAA+B;gBAC/B,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;oBAC5B,CAAC,CAAC,MAAI,KAAK,CAAC,SAAS,CACf,kEAAkE,EAClE,IAAI,CAAC,OAAO,CAAC,QAAQ,EACrB,IAAI,CAAC,OAAO,CAAC,YAAY,CAC1B;oBACL,CAAC,CAAC,EAAE;gBACR,gCAAgC;gBAChC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU;gBACnC,+BAA+B;gBAC/B,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,CAAC;gBAC5E,8BAA8B;gBAC9B,QAAQ,EAAE,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ;gBACnF,gCAAgC;gBAChC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;aACvC,CAAC;QACN,CAAC;KACJ,CAAC,CAAC","file":"GlobalViews.ShowingCurrent.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"GlobalViews.ShowingCurrent.View\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/UnderscoreExtended.d.ts\" />\n\nimport * as _ from 'underscore';\nimport * as global_views_showing_current_tpl from 'global_views_showing_current.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\n// @class GlobalViews.ShowingCurrent.View @extends Backbone.View\nexport const GlobalViewsShowingCurrentView: any = BackboneView.extend({\n    template: global_views_showing_current_tpl,\n\n    _getCurrentPage: function() {\n        const BackboneHistory: any = Backbone.History;\n        const url_options = Utils.parseUrlOptions(BackboneHistory.fragment);\n\n        return this._getPageFromUrl(url_options.page);\n    },\n\n    // @method getPageFromUrl @param {String} url_value @returns {Number}\n    _getPageFromUrl: function(url_value) {\n        const page_number = parseInt(url_value, 10);\n\n        return !isNaN(page_number) && page_number > 0 ? page_number : 1;\n    },\n\n    // @method getContext @return GlobalViews.ShowingCurrent.View.Content\n    getContext: function() {\n        this.options.current_page = this._getCurrentPage();\n\n        const lastItem = this.options.current_page * this.options.items_per_page;\n\n        // @class GlobalViews.ShowingCurrent.View.Content\n        return {\n            // @property {String} orderText\n            orderText: this.options.order_id\n                ? ` ${Utils.translate(\n                      'for <a href=\"/ordershistory/view/$(0)\">  Order Number: #$(1)</a>',\n                      this.options.order_id,\n                      this.options.order_number\n                  )}`\n                : '',\n            // @property {String} extraClass\n            extraClass: this.options.extraClass,\n            // @property {Number} firstItem\n            firstItem: (this.options.current_page - 1) * this.options.items_per_page + 1,\n            // @property {Number} lastItem\n            lastItem: lastItem > this.options.total_items ? this.options.total_items : lastItem,\n            // @property {Number} totalItems\n            totalItems: this.options.total_items\n        };\n    }\n});\n\nexport type GlobalViewsShowingCurrentView = any;\n"]}