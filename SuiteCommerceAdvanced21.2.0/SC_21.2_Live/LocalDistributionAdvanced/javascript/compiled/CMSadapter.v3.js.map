{"version":3,"sources":["CMSadapter.v3.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;IA4BF,0GAA0G;IAC1G,mCAAmC;IACnC,4BAA4B;IAC5B;QAEI;YACI,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE;gBACpC,0BAA0B,EAAE,SAAS,0BAA0B,CAAC,WAAW;oBACvE,YAAY,CAAC,WAAW,CAAC,OAAO,CAC5B,wFAA8C,CAAC,WAAW,CAAC,CAC9D,CAAC;oBACF,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,yDAA0B,CAAC,WAAW,CAAC,CAAC,CAAC;oBAC1E,oDAAoD;oBACpD,sBAAsB,CAAC,cAAc,CAAC,OAAO,CACzC,wFAA8C,CAAC,WAAW,CAAC,CAC9D,CAAC;oBACF,sBAAsB,CAAC,cAAc,CAAC,OAAO,CAAC,yDAA0B,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC3F,CAAC;gBAED,gBAAgB,EAAE,SAAS,gBAAgB,CAAC,WAAW,EAAE,SAAS,EAAE,aAAa;oBAC7E,IAAI,CAAC,cAAc,GAAG,IAAI,sBAAsB,CAAC,WAAW,EAAE,SAAS,EAAE,aAAa,CAAC,CAAC;oBACxF,IAAI,CAAC,iBAAiB,GAAG,IAAI,yDAAyB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;oBAC/E,IAAI,CAAC,yBAAyB,GAAG,IAAI,+BAA+B,CAChE,WAAW,EACX,SAAS,CACZ,CAAC;oBACF,IAAI,CAAC,6BAA6B,GAAG,IAAI,6EAAoC,CACzE,WAAW,EACX,SAAS,CACZ,CAAC;oBACF,IAAI,CAAC,oBAAoB,GAAG,IAAI,4BAA4B,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;oBACrF,IAAI,CAAC,gBAAgB,GAAG,IAAI,+CAAmB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;oBACxE,mGAAmG;oBACnG,IAAI,CAAC,WAAW,GAAG,IAAI,mBAAmB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;gBACvE,CAAC;gBAED,+FAA+F;gBAC/F,cAAc,EAAE,SAAS,cAAc,CAAC,WAAW;oBAC/C,IAAM,KAAK,GACP,CAAC,EAAE,CAAC,WAAW,CAAC,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;wBAClF,EAAE,CAAC;oBACP,IAAM,UAAU,GAAG,IAAI,4BAA4B,CAAC,KAAK,CAAC,CAAC;oBAE3D,OAAO,IAAI,wBAAwB,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;gBACjE,CAAC;aACI,CAAC,CAAC;QACP,CAAC;QACL,kBAAC;IAAD,CA5CA,AA4CC,IAAA;IA5CY,kCAAW","file":"CMSadapter.v3.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CMSadapter.v3\"/>\n\nimport * as _ from 'underscore';\nimport { CMSAdapterImplThemeCustomizerPreview } from './CMSadapter.Impl.ThemeCustomizerPreview';\nimport { CMSadapterPageTypes } from './CMSadapter.Impl.PageTypes';\nimport { CMSadapterPluginRecollectCMSSelectorsGenerator } from './CMSadapter.Plugin.RecollectCMSSelectors';\nimport { CMSadapterPluginPostRender } from './CMSadapter.Plugin.PostRender';\n\nimport CMSadapter = require('./CMSadapter');\nimport CMSadapterImplCore3 = require('./CMSadapter.Impl.Core.v3');\nimport CMSadapterImplLanding3 = require('./CMSadapter.Impl.Landing.v3');\nimport { CMSadapterImplCategories3 } from './CMSadapter.Impl.Categories.v3';\nimport CMSadapterImplCustomContentType = require('./CMSadapter.Impl.CustomContentType');\nimport CMSadapterImplMerchandising3 = require('./CMSadapter.Impl.Merchandising.v3');\nimport CMSadapterPagePageRouter = require('./CMSadapter.Page.Router');\nimport CMSadapterPagePageCollection = require('./CMSadapter.Page.Collection');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @module CMSadapter\n// @class CMSadapter.v3\n\nexport type CmsObject = any;\nexport type Application = any;\n\n// @class CMSadapter responsible of starting both the adapter implementation and cms landing pages router.\n// Assumes cms.js is already loaded\n// @extend ApplicationModule\nexport class CMSadapter3 {\n    \n    public constructor() {\n        return _.extend({}, CMSadapter, {\n    installBackboneViewPlugins: function installBackboneViewPlugins(application) {\n        BackboneView.postCompile.install(\n            CMSadapterPluginRecollectCMSSelectorsGenerator(application)\n        );\n        BackboneView.postCompile.install(CMSadapterPluginPostRender(application));\n        // adds support for CCTs on collection rows template\n        BackboneCollectionView.postRowCompile.install(\n            CMSadapterPluginRecollectCMSSelectorsGenerator(application)\n        );\n        BackboneCollectionView.postRowCompile.install(CMSadapterPluginPostRender(application));\n    },\n\n    initAdapterImpls: function initAdapterImpls(application, cmsObject, landingRouter) {\n        this.adapterLanding = new CMSadapterImplLanding3(application, cmsObject, landingRouter);\n        this.adapterCategories = new CMSadapterImplCategories3(application, cmsObject);\n        this.adapterCustomContentTypes = new CMSadapterImplCustomContentType(\n            application,\n            cmsObject\n        );\n        this.adapterThemeCustomizerPreview = new CMSAdapterImplThemeCustomizerPreview(\n            application,\n            cmsObject\n        );\n        this.adapterMerchandising = new CMSadapterImplMerchandising3(application, cmsObject);\n        this.adapterPageTypes = new CMSadapterPageTypes(application, cmsObject);\n        // CMSadapterImplCore3 must be the last on been created, constructor triggers the \"app:ready\" event\n        this.adapterCore = new CMSadapterImplCore3(application, cmsObject);\n    },\n\n    // @method initPageRoutes Register the landing pages PageType and urls using bootstrapped data.\n    initPageRoutes: function initPageRoutes(application) {\n        const pages =\n            (SC.ENVIRONMENT.CMS && SC.ENVIRONMENT.CMS.pages && SC.ENVIRONMENT.CMS.pages.pages) ||\n            [];\n        const collection = new CMSadapterPagePageCollection(pages);\n\n        return new CMSadapterPagePageRouter(application, collection);\n    }\n        });\n    }\n} \n"]}