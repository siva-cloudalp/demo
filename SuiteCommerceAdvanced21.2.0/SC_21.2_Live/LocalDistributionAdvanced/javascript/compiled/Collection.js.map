{"version":3,"sources":["Collection.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;;;;;;;;;;;;;;IAiBF;QAQU,8BAAsD;QARhE;YAAA,qEAUC;YADU,SAAG,GAAG,cAAc,OAAA,EAAE,EAAF,CAAE,CAAC;;QAClC,CAAC;QAAD,iBAAC;IAAD,CAVA,AAUC,CAFS,QAAQ,CAAC,UAAU,GAE5B;IAVqB,gCAAU","file":"Collection.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Collection\"/>\n// @Typescript-full\n\nimport { InferModelEntity, InferModelEvents, InferModelServiceContract } from './backbone/backbone';\nimport * as Backbone from './backbone/BackboneExtras';\nimport { Model } from './Model';\n\nexport interface CollectionEventsDefinition<TCollection, TServiceContract> {\n    update: (collection: TCollection) => void;\n    reset: (collection: TCollection) => void;\n    sort: (collection: TCollection) => void;\n    sync: (model: TCollection, resp: TServiceContract) => void;\n    request: (model: TCollection) => void;\n}\n\nexport abstract class Collection<\n    TModel extends Model<\n        InferModelEntity<TModel>,\n        InferModelServiceContract<TModel>,\n        InferModelEvents<TModel>\n    >,\n    TServiceContract = InferModelServiceContract<TModel>[],\n    TEvents extends object = {}\n> extends Backbone.Collection<TModel, TServiceContract, TEvents> {\n    public url = (): string => '';\n}\n"]}