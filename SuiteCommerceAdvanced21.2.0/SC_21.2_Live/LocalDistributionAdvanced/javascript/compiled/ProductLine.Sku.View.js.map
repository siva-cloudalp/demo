{"version":3,"sources":["ProductLine.Sku.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAWF,OAAS,YAAY,CAAC,MAAM,CAAC;QACzB,gCAAgC;QAChC,QAAQ,EAAE,oBAAoB;QAE9B,yFAAyF;QACzF,2DAA2D;QAC3D,iBAAiB;QACjB,UAAU,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC/C,CAAC;QAED,8EAA8E;QAC9E,iBAAiB;QACjB,OAAO,EAAE,SAAS,OAAO;YACrB,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACtD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAChD,CAAC;QAED,qBAAqB;QACrB,0CAA0C;QAC1C,UAAU,EAAE;YACR,sCAAsC;YACtC,OAAO;gBACH,oEAAoE;gBACpE,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,yBAAyB;gBACzB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACxB,wCAAwC;gBACxC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC;aACrE,CAAC;YACF,8BAA8B;QAClC,CAAC;QAED,UAAU,EAAE;YACR,8BAA8B,EAAE;gBAC5B,OAAO,IAAI,iDAAsB,CAAC;oBAC9B,OAAO,EAAE,KAAK,CAAC,SAAS,CAAC,mCAAmC,CAAC;oBAC7D,IAAI,EAAE,OAAO;oBACb,QAAQ,EAAE,KAAK;iBAClB,CAAC,CAAC;YACP,CAAC;SACJ;KACJ,CAAC,CAAC;;AAEH,iDAAiD;AACjD,oEAAoE","file":"ProductLine.Sku.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductLine.Sku.View\"/>\n\nimport * as product_line_sku_tpl from 'product_line_sku.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { GlobalViewsMessageView } from '../../GlobalViews/JavaScript/GlobalViews.Message.View';\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\n// @class ProductLine.Sku.View @extends Backbone.View\nexport = BackboneView.extend({\n    // @property {Function} template\n    template: product_line_sku_tpl,\n\n    // @method initialize Override default method to attach model's change event to re-render\n    // @param {ProductLine.Sku.View.Initialize.options} options\n    // @return {Void}\n    initialize: function() {\n        this.model.on('change', this.render, this);\n    },\n\n    // @method destroy Override default method to detach from model's change event\n    // @return {Void}\n    destroy: function destroy() {\n        BackboneView.prototype.destroy.apply(this, arguments);\n        this.model.off('change', this.render, this);\n    },\n\n    // @method getContext\n    // @returns {ProductLine.Sku.View.Context}\n    getContext: function() {\n        // @class ProductLine.Sku.View.Context\n        return {\n            // @property {Product.Model|Transaction.Line.Model|Item.Model} model\n            model: this.model,\n            // @property {String} sku\n            sku: this.model.getSku(),\n            // @property {Boolean} noLongerAvailable\n            noLongerAvailable: this.model.get('item').get('noLongerAvailable')\n        };\n        // @class ProductLine.Sku.View\n    },\n\n    childViews: {\n        GlobalMessageNoLongerAvailable: function() {\n            return new GlobalViewsMessageView({\n                message: Utils.translate('This item is not longer available'),\n                type: 'error',\n                closable: false\n            });\n        }\n    }\n});\n\n// @class ProductLine.Sku.View.Initialize.options\n// @property {Transaction.Line.Model|Item.Model|Product.Model} model\n"]}