{"version":3,"sources":["Backbone.View.toggleReset.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IASF,+BAA+B;IAC/B,0BAA0B;IAC1B,4DAA4D;IAC5D,iHAAiH;IACjH,oFAAoF;IACpF,+CAA+C;IAC/C,EAAE;IACF,iCAAiC;IACjC,EAAE;IAEF,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE;QAC7B,kFAAkF;QAClF,2FAA2F;QAC3F,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAS,CAAC;YAC9B,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,IAAA,KAAK,GAAK,IAAI,MAAT,CAAU;YACvB,IAAI,SAAS,CAAC;YACd,IAAI,KAAK,CAAC;YACV,8BAA8B;YAC9B,IAAM,cAAc,GAAG,CAAC,CAAC,MAAM,CAAO,KAAM,CAAC,eAAe,EAAE,EAAE,UAAS,IAAS,EAAE,GAAG;gBACnF,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC3B,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;gBAE5B,OAAO,SAAS,CAAC,CAAC,CAAC,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACrD,CAAC,CAAC,CAAC;YAEH,mDAAmD;YACnD,KAAK;iBACA,IAAI,CAAC,uBAAuB,CAAC,CAC7B,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC;YAEjE,OAAO,IAAI,CAAC;QAChB,CAAC,EAAE,GAAG,CAAC;KACV,CAAC,CAAC;IAEH,OAAS,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC","file":"Backbone.View.toggleReset.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Backbone.View.toggleReset\"/>\n\nimport * as _ from 'underscore';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\n// Backbone.View.toggleReset.js\n// -----------------------\n// @module Backbone @class Backbone.View @method toggleReset\n// Backbones' view extension for showing/hiding a \"reset\" button that restore all form's fields that have changed\n// You have to assign the change event of the inputs of a form to call this function\n// For example in the \"events\" array of a view:\n//\n//\t\t'change form' : 'toggleReset'\n//\n\n_.extend(BackboneView.prototype, {\n    // the \"debounce\" add a small delay between the eventr and the function triggering\n    // it's useful when the user is writting so we don't trigger the event after every keypress\n    toggleReset: _.debounce(function(e) {\n        const $form = jQuery(e.target).closest('form');\n        const { model } = this;\n        let attribute;\n        let value;\n        // look for the changed fields\n        const fields_changed = _.filter((<any>$form).serializeObject(), function(item: any, key) {\n            attribute = model.get(key);\n            value = String(item).trim();\n\n            return attribute ? attribute !== value : !!value;\n        });\n\n        // if some field changed, the reset button is shown\n        $form\n            .find('[data-action=\"reset\"]')\n            [fields_changed.length ? 'removeClass' : 'addClass']('hide');\n\n        return this;\n    }, 300)\n});\n\nexport = BackboneView.prototype.toggleReset;\n"]}