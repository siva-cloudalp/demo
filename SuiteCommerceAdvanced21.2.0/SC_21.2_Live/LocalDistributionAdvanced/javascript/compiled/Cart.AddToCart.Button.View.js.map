{"version":3,"sources":["Cart.AddToCart.Button.View.ts"],"names":[],"mappings":"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","file":"Cart.AddToCart.Button.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Cart.AddToCart.Button.View\"/>\n\nimport * as _ from 'underscore';\nimport * as cart_add_to_cart_button_tpl from 'cart_add_to_cart_button.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { Loggers } from '../../Loggers/JavaScript/Loggers';\nimport { ItemTrack } from '../../Instrumentation/JavaScript/APMTrackerParameters';\nimport * as InstrumentationAddToCart from '../../Instrumentation/JavaScript/InstrumentationAddToCart';\n\nimport LiveOrderModel = require('../../LiveOrder/JavaScript/LiveOrder.Model');\nimport LiveOrderLineModel = require('../../LiveOrder/JavaScript/LiveOrder.Line.Model');\nimport CartConfirmationHelpers = require('./Cart.Confirmation.Helpers');\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\n// @class Cart.AddToCart.Button.View @extend Backbone.View\nexport = BackboneView.extend({\n    // @property {Function} template\n    template: cart_add_to_cart_button_tpl,\n\n    events: {\n        'mouseup [data-type=\"add-to-cart\"]': 'addToCart',\n        'click [data-type=\"add-to-cart\"]': 'addToCart'\n    },\n\n    // @method initialize\n    // @param {ProductDeatils.AddToCart.ViewCart.AddToCart.Button.View.Initialize.Options} options\n    // @return {Void}\n    initialize: function initialize() {\n        BackboneView.prototype.initialize.apply(this, arguments);\n\n        this.cart = LiveOrderModel.getInstance();\n\n        this.model.on('change', this.render, this);\n    },\n\n    // @method destroy Override default method to detach from change event of the current model\n    // @return {Void}\n    destroy: function destroy() {\n        BackboneView.prototype.destroy.apply(this, arguments);\n        this.model.off('change', this.render, this);\n    },\n\n    // @method getAddToCartValidators Returns the extra validation to add a product into the cart\n    // @return {BackboneValidationObject}\n    getAddToCartValidators: function getAddToCartValidators() {\n        const self = this;\n\n        return {\n            quantity: {\n                fn: function() {\n                    const line_on_cart = self.cart.findLine(self.model);\n                    const quantity = self.model.get('quantity');\n                    const minimum_quantity = self.model.getItem().get('_minimumQuantity') || 1;\n                    let maximum_quantity = self.model.getItem().get('_maximumQuantity');\n\n                    if (!_.isNumber(quantity) || _.isNaN(quantity) || quantity < 1) {\n                        return Utils.translate('Invalid quantity value');\n                    }\n\n                    if (!line_on_cart && quantity < minimum_quantity) {\n                        return Utils.translate(\n                            'Please add $(0) or more of this item',\n                            minimum_quantity\n                        );\n                    }\n\n                    if (maximum_quantity) {\n                        maximum_quantity = !line_on_cart\n                            ? maximum_quantity\n                            : maximum_quantity - line_on_cart.get('quantity');\n\n                        if (quantity > maximum_quantity) {\n                            return Utils.translate(\n                                'Please add $(0) or less of this item',\n                                maximum_quantity\n                            );\n                        }\n                    }\n                }\n            }\n        };\n    },\n\n    // @method submitHandler Public method that fulfill\n    // the require interface of the Main action View of the PDP\n    // @param {jQuery.Event} e\n    // @return {Boolean}\n    submitHandler: function submitHandler(e) {\n        return this.addToCart(e);\n    },\n\n    // @method addToCart Updates the Cart to include the current model\n    // also takes care of updating the cart if the current model is already in the cart\n    // @param {jQuery.Event} e\n    // @return {Boolean}\n    addToCart: function addToCart(e) {\n        try {\n            setTimeout(function() {\n\n                for (var i = 0; i < document.getElementsByClassName(\"bx-pager-link\").length; i++) {\n\n                    var activeImgOptionURL = (<HTMLImageElement>document.getElementsByClassName(\"bx-pager-link\")[i].children[0]).currentSrc.split(\"?\")[0];\n                    var mainImg = document.getElementsByClassName(\"product-details-image-gallery-container\")[i+1].innerHTML;\n                    var mainImgSplit = mainImg.split(\" \");\n                    var mainImgSplitURL = mainImgSplit[1].split(\"?\");\n\n                    if(mainImgSplitURL[0] != (\"src=\\\"\" + activeImgOptionURL)){\n\n                        mainImgSplitURL[0] = \"src=\" + activeImgOptionURL;\n                        mainImgSplit[1] = mainImgSplitURL.join(\"?\");\n                        var newImgSrc = mainImgSplit.join(\" \");\n                        document.getElementsByClassName(\"product-details-image-gallery-container\")[i+1].innerHTML = newImgSrc;\n\n                    }\n                }\n            }, 3000);\n        } catch (e) {\n            console.warn('The Zoom bug fix is throwing an error (Cart.AddToCart.Button.View): ' + JSON.stringify(e));\n        }\n        e.preventDefault();\n        const self = this;\n        let cart_promise;\n\n        if (\n            !this.model.areAttributesValid(['options', 'quantity'], self.getAddToCartValidators())\n        ) {\n            return;\n        }\n\n        if (!this.model.isNew() && this.model.get('source') === 'cart') {\n            cart_promise = this.cart.updateProduct(this.model);\n            cart_promise.done(function() {\n                self.options.application.getLayout().closeModal();\n            });\n        } else {\n            const line = LiveOrderLineModel.createFromProduct(this.model);\n            const itemTrack: ItemTrack = InstrumentationAddToCart.itemToTrack(line);\n            const loggers = Loggers.getLogger();\n            const actionId = loggers.start('Add to Cart');\n            cart_promise = this.cart.addLine(line);\n            cart_promise.then(() => {\n                const addToCartOperationIds = InstrumentationAddToCart.getAddToCartOperationId(\n                    this.cart.get('lines').models,\n                    line\n                );\n                loggers.end(actionId, {\n                    operationIds: addToCartOperationIds,\n                    status: 'success',\n                    itemId: itemTrack.itemId,\n                    itemQuantity: itemTrack.itemQuantity\n                });\n            });\n\n            CartConfirmationHelpers.showCartConfirmation(\n                cart_promise,\n                line,\n                self.options.application\n            );\n        }\n\n        cart_promise.fail(function(jqXhr) {\n            let error_details = null;\n            try {\n                if (jqXhr && jqXhr.responseText) {\n                    const response = JSON.parse(jqXhr.responseText);\n                    error_details = response.errorDetails;\n                }\n            } catch (error) {\n                console.error(error);\n            } finally {\n                if (error_details && error_details.status === 'LINE_ROLLBACK') {\n                    self.model.set('internalid', error_details.newLineId);\n                }\n            }\n        });\n\n        this.disableElementsOnPromise(cart_promise, e.target);\n        return false;\n    },\n\n    // @method getContext\n    // @return {Cart.AddToCart.Button.View.Context}\n    getContext: function getContext() {\n        // @class Cart.AddToCart.Button.View.Context\n        return {\n            // @property {Boolean} isCurrentItemPurchasable\n            // Indicate if the current item is valid to be purchase or not\n            isCurrentItemPurchasable: this.model.getItem().get('_isPurchasable'),\n            // @property {Boolean} isUpdate\n            isUpdate: !this.model.isNew() && this.model.get('source') === 'cart'\n        };\n        // @class Cart.AddToCart.Button.View\n    }\n});\n\n// @class Cart.AddToCart.Button.View.Initialize.Options\n// @property {Product.Model} model This view is only capable of adding new PRODUCTs into the cart.\n// If you need to add something else please convert it into a Product.Model.\n//\n"]}