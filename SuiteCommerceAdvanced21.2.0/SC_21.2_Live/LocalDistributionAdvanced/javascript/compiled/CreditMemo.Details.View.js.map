{"version":3,"sources":["CreditMemo.Details.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAgBF,IAAM,qBAAqB,GAAQ,YAAY,CAAC,MAAM,CAAC;QACnD,QAAQ,EAAE,uBAAuB;QAEjC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,qBAAqB,CAAC;QAE7C,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,qBAAqB,CAAC;QAEnD,UAAU,EAAE;YACR,EAAE,EAAE,kBAAkB;YACtB,KAAK,EAAE,mBAAmB;SAC7B;QAED,UAAU,EAAE,UAAS,OAAO;YACxB,IAAM,UAAU,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAE9C,IAAI,CAAC,KAAK,GAAG,IAAI,eAAe,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;YAC7D,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QACpD,CAAC;QAED,iBAAiB,EAAE,SAAS,iBAAiB;YACzC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;gBACpB,QAAQ,EAAE,uCAAkB,CAAC,WAAW,EAAE;aAC7C,CAAC,CAAC;QACP,CAAC;QAED,0BAA0B;QAC1B,eAAe,EAAE;YACb,OAAO,oBAAoB,CAAC;QAChC,CAAC;QACD,6BAA6B;QAC7B,kBAAkB,EAAE;YAChB,OAAO;gBACH;oBACI,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,qBAAqB,CAAC;oBAC5C,IAAI,EAAE,oBAAoB;iBAC7B;gBACD;oBACI,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACpE,IAAI,EAAE,mCAAiC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAG;iBACxE;aACJ,CAAC;QACN,CAAC;QAED,yBAAyB;QACzB,cAAc,EAAE;YACZ,IAAI,cAAc,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAS,MAAM;gBACxC,cAAc,IAAI,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;YAEH,OAAO,cAAc,CAAC;QAC1B,CAAC;QAED,UAAU,EAAE;YACR,kBAAkB,EAAE;gBAChB,OAAO,IAAI,sBAAsB,CAAC;oBAC9B,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;oBACnC,SAAS,EAAE,kFAAqC;oBAChD,WAAW,EAAE,CAAC;oBACd,gBAAgB,EAAE;wBACd,SAAS,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,EAAE;wBAEnD,YAAY,EAAE,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC;wBAC1C,OAAO,EAAE,UAAU;wBAEnB,YAAY,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC;wBAC3C,OAAO,EAAE,gBAAgB;wBAEzB,YAAY,EAAE,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;wBACxC,OAAO,EAAE,iBAAiB;qBAC7B;iBACJ,CAAC,CAAC;YACP,CAAC;YACD,qBAAqB,EAAE;gBACnB,IAAM,kBAAkB,GAAG,IAAI,QAAQ,CAAC,UAAU,CAC9C,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,UAAS,OAAY;oBACnD,IAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC;wBAC7B,UAAU,EAAE,gBAAgB;wBAC5B,KAAK,EAAE,OAAO,CAAC,MAAM;wBACrB,UAAU,EAAE,eAAa,OAAO,CAAC,UAAY;wBAE7C,EAAE,EAAE,OAAO,CAAC,EAAE;wBACd,UAAU,EAAE,OAAO,CAAC,EAAE;wBAEtB,OAAO,EAAE;4BACL;gCACI,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,kBAAkB,CAAC;gCAC1C,IAAI,EAAE,MAAM;gCACZ,IAAI,EAAE,MAAM;gCACZ,KAAK,EAAE,OAAO,CAAC,SAAS;6BAC3B;4BACD;gCACI,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;gCACjC,IAAI,EAAE,UAAU;gCAChB,IAAI,EAAE,QAAQ;gCACd,KAAK,EAAE,OAAO,CAAC,gBAAgB;6BAClC;yBACJ;qBACJ,CAAC,CAAC;oBAEH,OAAO,KAAK,CAAC;gBACjB,CAAC,CAAC,CACL,CAAC;gBAEF,OAAO,IAAI,sBAAsB,CAAC;oBAC9B,SAAS,EAAE,iCAAe;oBAC1B,UAAU,EAAE,kBAAkB;oBAC9B,WAAW,EAAE,CAAC;iBACjB,CAAC,CAAC;YACP,CAAC;SACJ;QAED,6DAA6D;QAC7D,UAAU,EAAE;YACR,IAAM,cAAc,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAE7C,yCAAyC;YACzC,OAAO;gBACH,4BAA4B;gBAC5B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;gBAChC,oCAAoC;gBACpC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,eAAe;gBACzD,8BAA8B;gBAC9B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC;gBACpC,4BAA4B;gBAC5B,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU;gBAC3C,uCAAuC;gBACvC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,kBAAkB;gBAC/D,uCAAuC;gBACvC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,uBAAuB;gBACpE,uCAAuC;gBACvC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,kBAAkB;gBAC/D,yCAAyC;gBACzC,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,sBAAsB,CAAC;gBAC3D,8CAA8C;gBAC9C,wBAAwB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,2BAA2B,CAAC;gBACrE,2CAA2C;gBAC3C,qBAAqB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,sBAAsB;gBACvE,oCAAoC;gBACpC,cAAc,EAAE,KAAK,CAAC,iBAAiB,CAAC;oBACpC,KAAK,EAAE,qBAAqB;oBAC5B,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC;iBACnC,CAAC;gBACF,0BAA0B;gBAC1B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC;gBAC5B,sCAAsC;gBACtC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC;gBACvC,yCAAyC;gBACzC,mBAAmB,EAAE,cAAc;gBACnC,mDAAmD;gBACnD,4BAA4B,EAAE,cAAc,GAAG,CAAC;gBAChD,0CAA0C;gBAC1C,mBAAmB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC;aAC3F,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,qBAAqB,CAAC","file":"CreditMemo.Details.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CreditMemo.Details.View\"/>\n\nimport * as _ from 'underscore';\nimport * as credit_memo_details_tpl from 'credit_memo_details.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { AjaxRequestsKiller } from '../../AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\nimport { TransactionLineViewsCellNavigableView } from '../../Transaction.Line.Views/JavaScript/Transaction.Line.Views.Cell.Navigable.View';\nimport { RecordViewsView } from '../../Utilities/JavaScript/RecordViewsView';\n\nimport Backbone = require('../../Utilities/JavaScript/backbone.custom');\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport CreditMemoModel = require('./CreditMemo.Model');\nimport BackboneCollectionView = require('../../Backbone.CollectionView/JavaScript/Backbone.CollectionView');\n\nconst CreditMemoDetailsView: any = BackboneView.extend({\n    template: credit_memo_details_tpl,\n\n    title: Utils.translate('Credit Memo Details'),\n\n    page_header: Utils.translate('Credit Memo Details'),\n\n    attributes: {\n        id: 'CreditMemoDetail',\n        class: 'CreditMemoDetails'\n    },\n\n    initialize: function(options) {\n        const internalid = options.routerArguments[0];\n\n        this.model = new CreditMemoModel({ internalid: internalid });\n        this.model.on('change', this.showContent, this);\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        return this.model.fetch({\n            killerId: AjaxRequestsKiller.getKillerId()\n        });\n    },\n\n    // @method getSelectedMenu\n    getSelectedMenu: function() {\n        return 'transactionhistory';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return [\n            {\n                text: Utils.translate('Transaction History'),\n                href: 'transactionhistory'\n            },\n            {\n                text: Utils.translate('Credit Memo #$(0)', this.model.get('tranid')),\n                href: `transactionhistory/creditmemo/${this.model.get('internalid')}`\n            }\n        ];\n    },\n\n    // @method getItemsNumber\n    getItemsNumber: function() {\n        let items_quantity = 0;\n        this.model.get('lines').each(function(models) {\n            items_quantity += models.get('quantity');\n        });\n\n        return items_quantity;\n    },\n\n    childViews: {\n        'Items.Collection': function() {\n            return new BackboneCollectionView({\n                collection: this.model.get('lines'),\n                childView: TransactionLineViewsCellNavigableView,\n                viewsPerRow: 1,\n                childViewOptions: {\n                    navigable: !this.options.application.isStandalone(),\n\n                    detail1Title: Utils.translate('Quantity:'),\n                    detail1: 'quantity',\n\n                    detail2Title: Utils.translate('Unit price'),\n                    detail2: 'rate_formatted',\n\n                    detail3Title: Utils.translate('Amount:'),\n                    detail3: 'total_formatted'\n                }\n            });\n        },\n        'Invoices.Collection': function() {\n            const records_collection = new Backbone.Collection(\n                _.map(this.model.get('invoices'), function(invoice: any) {\n                    const model = new Backbone.Model({\n                        touchpoint: 'customercenter',\n                        title: invoice.refnum,\n                        detailsURL: `/invoices/${invoice.internalid}`,\n\n                        id: invoice.id,\n                        internalid: invoice.id,\n\n                        columns: [\n                            {\n                                label: Utils.translate('Transaction Date'),\n                                type: 'date',\n                                name: 'date',\n                                value: invoice.applydate\n                            },\n                            {\n                                label: Utils.translate('Amount:'),\n                                type: 'currency',\n                                name: 'amount',\n                                value: invoice.amount_formatted\n                            }\n                        ]\n                    });\n\n                    return model;\n                })\n            );\n\n            return new BackboneCollectionView({\n                childView: RecordViewsView,\n                collection: records_collection,\n                viewsPerRow: 1\n            });\n        }\n    },\n\n    // @method getContext @return CreditMemo.Details.View.Context\n    getContext: function() {\n        const items_quantity = this.getItemsNumber();\n\n        // @class CreditMemo.Details.View.Context\n        return {\n            // @property {String} tranId\n            tranId: this.model.get('tranid'),\n            // @property {String} totalFormatted\n            totalFormatted: this.model.get('summary').total_formatted,\n            // @property {String} tranDate\n            tranDate: this.model.get('trandate'),\n            // @property {String} status\n            status: this.model.get('status').internalid,\n            // @property {String} subTotalFormatted\n            subTotalFormatted: this.model.get('summary').subtotal_formatted,\n            // @property {String} discountFormatted\n            discountFormatted: this.model.get('summary').discounttotal_formatted,\n            // @property {String} taxTotalFormatted\n            taxTotalFormatted: this.model.get('summary').taxtotal_formatted,\n            // @property {String} amountPaidFormatted\n            amountPaidFormatted: this.model.get('amountpaid_formatted'),\n            // @property {String} amountRemainingFormatted\n            amountRemainingFormatted: this.model.get('amountremaining_formatted'),\n            // @property {String} shippingCostFormatted\n            shippingCostFormatted: this.model.get('summary').shippingcost_formatted,\n            // @property {String} downloadPDFURL\n            downloadPDFURL: Utils.getDownloadPdfUrl({\n                asset: 'credit-memo-details',\n                id: this.model.get('internalid')\n            }),\n            // @property {String} memo\n            memo: this.model.get('memo'),\n            // @property {Boolean} showMemoDetails\n            showMemoDetails: this.model.get('memo'),\n            // @property {Number} itemsQuantityNumber\n            itemsQuantityNumber: items_quantity,\n            // @property {Boolean} linesitemsNumberGreaterThan1\n            linesitemsNumberGreaterThan1: items_quantity > 1,\n            // @property {Boolean} showInvoicesDetails\n            showInvoicesDetails: !!(this.model.get('invoices') && this.model.get('invoices').length)\n        };\n    }\n});\n\nexport = CreditMemoDetailsView;\n"]}