{"version":3,"sources":["Invoice.Collection.ts"],"names":[],"mappings":"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","file":"Invoice.Collection.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Invoice.Collection\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport Model = require('./Invoice.Model');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\n// @class Invoice.Collection @extends Backbone.Collection\nconst InvoiceCollection: any = Backbone.Collection.extend({\n    // @property {Invoice.Model} model\n    model: Model,\n    // @property {Boolean} cacheSupport enable or disable the support for cache (Backbone.CachedModel)\n    cacheSupport: false,\n    // @property {String} url\n    url: 'services/Invoice.Service.ss',\n    // @method initialize\n    initialize: function(): void {\n        // The first time the collection is filled with data\n        // we store a copy of the original collection\n        this.once('sync reset', function() {\n            if (!this.original) {\n                this.original = this.clone();\n            }\n        });\n    },\n    parse: function parse(response) {\n        if (!_.isUndefined(response.totalRecordsFound)) {\n            this.totalRecordsFound = response.totalRecordsFound;\n            this.recordsPerPage = response.recordsPerPage;\n            return response.records;\n        }\n        return response;\n    },\n    // @method getOpenInvoices\n    getOpenInvoices: function() {\n        return this.filter(function(invoice) {\n            // status might not be an obj\n            const status = invoice.get('status');\n            return _.isObject(status) ? status.internalid === 'open' : status === 'open';\n        });\n    },\n\n    // @method getPaidInvoices\n    getPaidInvoices: function() {\n        return this.filter(function(invoice) {\n            // status might not be an obj\n            const status = invoice.get('status');\n            return _.isObject(status) ? status.internalid !== 'open' : status !== 'open';\n        });\n    },\n\n    // @method clearFilters Unset any filter, sorting and order options previously set in the collection\n    clearFilters: function(): void {\n        this.selectedFilter = null;\n        this.selectedSort = null;\n        this.order = null;\n        this.range = null;\n    },\n\n    // @method update\n    // custom method called by ListHeader view\n    // it receives the currently applied filter,\n    // currently applied sort and currently applied order\n    update: function(options): void {\n        const filter_changed = this.selectedFilter !== options.filter;\n        const sort_changed = this.selectedSort !== options.sort;\n        const order_changed = this.order !== options.order;\n        const range_changed =\n            !_.isEqual(options.range, this.range) && (this.range || options.range);\n\n        this.selectedFilter = options.filter;\n        this.selectedSort = options.sort;\n        this.order = options.order;\n        this.range = options.range;\n        this.page = options.page;\n\n        if (filter_changed) {\n            this.applyFilter().applySort();\n        } else if (range_changed) {\n            this.applyRangeFilter().applySort();\n        } else if (sort_changed) {\n            this.applySort();\n        } else if (order_changed) {\n            this.reverseOrder();\n        }\n\n        // All of the previous methods where silent\n        // so if anything changed, we trigger the event\n        // after everything was done\n        if (filter_changed || sort_changed || order_changed || range_changed) {\n            this.trigger('reset');\n        }\n    },\n\n    // @method applyFilter Resets the collection based on the applied filter\n    applyFilter: function() {\n        if (this.selectedFilter) {\n            this.reset(this.selectedFilter.filter.call(this), { silent: true });\n        }\n\n        return this;\n    },\n    // @method fixDateRangeWithTimeZoneOffset\n    fixDateRangeWithTimeZoneOffset: function(selected_range: {\n        from: string;\n        to: string;\n    }): { from: Date; to: Date } {\n        if (selected_range) {\n            const offset = new Date().getTimezoneOffset() * 60 * 1000;\n            const from = Utils.stringToDate(selected_range.from);\n            const to = Utils.stringToDate(selected_range.to);\n\n            if (Utils.isDateValid(from) && Utils.isDateValid(to)) {\n                const toAux = new Date(to.getTime() + offset);\n                const fromAux = new Date(from.getTime() + offset);\n\n                toAux.setHours(23, 59, 59);\n                fromAux.setHours(0, 0, 0);\n\n                return {\n                    from: fromAux,\n                    to: toAux\n                };\n            }\n        }\n    },\n\n    // @method applyRangeFilter\n    applyRangeFilter: function() {\n        const range = this.fixDateRangeWithTimeZoneOffset(this.range) || {};\n        const from = range.from && new Date(range.from).getTime();\n        const to = range.to && new Date(range.to).getTime();\n\n        this.reset(\n            this.original.filter(function(invoice) {\n                const when = new Date(invoice.get('tranDateInMilliseconds')).getTime();\n\n                if (from && !to) {\n                    return when >= from;\n                }\n\n                if (!from && to) {\n                    return when <= to;\n                }\n\n                if (from && to) {\n                    return when >= from && when <= to;\n                }\n\n                return true;\n            }),\n            { silent: true }\n        );\n\n        return this;\n    },\n\n    // @method applySort Resets the collection based on the applied sort\n    applySort: function() {\n        if (this.selectedSort) {\n            this.reset(this.selectedSort.sort.call(this), { silent: true });\n        }\n\n        // if the current order is inverse\n        if (this.order === -1) {\n            // we need to reverse the order\n            this.reverseOrder();\n        }\n\n        return this;\n    },\n\n    // @method reverseOrder Reverses the collection\n    reverseOrder: function() {\n        this.reset(this.models.reverse(), { silent: true });\n\n        return this;\n    }\n});\n\nexport = InvoiceCollection;\n"]}