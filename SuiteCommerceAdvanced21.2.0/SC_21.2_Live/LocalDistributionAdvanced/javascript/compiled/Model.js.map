{"version":3,"sources":["Model.ts"],"names":[],"mappings":"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","file":"Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Model\"/>\n// @Typescript-full\n\nimport * as Backbone from './backbone/BackboneExtras';\nimport { ValidationConfig } from './backbone/BackboneValidationExtras';\nimport { Collection } from './Collection';\nimport { AttributeValidationRules, ValidationErrors, Validator } from './Validator';\nimport { PropertiesName } from './Types';\n\nexport interface ModelEventsDefinition<TModel, TServiceContract> {\n    sync: (model: TModel, resp: TServiceContract) => void;\n    change: (model: TModel) => void;\n    destroy: (model: TModel) => void;\n    invalid: (model: TModel) => void;\n}\nexport abstract class Model<\n    TEntity,\n    TServiceContract = TEntity,\n    TEvents extends object = {}\n> extends Backbone.Model<TEntity, TServiceContract, TEvents> {\n    private operationIds: string[] = [];\n\n    protected validation?: ValidationConfig;\n\n    protected validationError: ValidationErrors<TEntity> | null;\n\n    public url = (): string => {\n        let base = this.urlRoot();\n        if (!base && this.collection instanceof Collection) {\n            base = this.collection.url();\n        }\n        if (this.isNew()) {\n            return base;\n        }\n        const sep = base.indexOf('?') === -1 ? '?' : '&';\n        return `${base + sep}internalid=${encodeURIComponent(this.id)}`;\n    };\n\n    protected urlRoot = (): string => '';\n\n    // @method url SCA Overrides @?property Backbone.Model.idAttribute\n    // to add model's 'internalid' as parameter @return {String}\n    protected idAttribute: string = 'internalid';\n\n    public deepCopy(): TEntity {\n        return this.attributes;\n    }\n\n    public sync(\n        method: Backbone.SyncMethod,\n        model: this,\n        options: Backbone.SyncOptions\n    ): JQueryXHR {\n        return Backbone.sync.call(this, method, model, options).always(\n            (body, status, xhr): void => {\n                try {\n                    if (xhr.getResponseHeader) {\n                        this.addOperationId(xhr.getResponseHeader('x-n-operationid'));\n                    }\n                } catch (e) {\n                    console.error('Error fetching Operation Id from header.');\n                }\n            }\n        );\n    }\n\n    public addOperationId(ids: string[]): void {\n        if (Array.isArray(ids)) {\n            this.operationIds = this.operationIds.concat(ids);\n        } else {\n            this.operationIds.push(ids);\n        }\n    }\n\n    public getOperationIds(): string[] {\n        return this.operationIds;\n    }\n\n    public set<E extends PropertiesName<TEntity>>(\n        attributeName: E,\n        value: TEntity[E],\n        options?: { silent: boolean }\n    ): this {\n        if (attributeName == null) return this;\n\n        // Handle both `\"key\", value` and `{key: value}` -style arguments,\n        // required by extensibility layer (SCModel supported this)\n        let attrs: any;\n        let opts: any = options;\n        if (typeof attributeName === 'object') {\n            attrs = attributeName;\n            opts = value;\n        } else {\n            attrs = {};\n            attrs[attributeName] = value;\n        }\n        return super.set(attrs, { validate: true, ...opts });\n    }\n\n    public getLatestOperationIds(lastOperationIdIndex: number): string[] {\n        return this.getOperationIds().slice(lastOperationIdIndex);\n    }\n\n    protected validate(attributes?: Partial<TEntity>): ValidationErrors<TEntity> | null {\n        if (typeof attributes !== 'undefined') {\n            const validator = new Validator(this.getValidationRules());\n            return validator.validate(attributes);\n        }\n\n        return null;\n    }\n\n    // this method overrides the _validate method of Backbone\n    protected _validate(attributes: Partial<TEntity>) {\n        this.validationError = this.validate(attributes);\n        return !this.validationError;\n    }\n\n    protected getValidationRules(): AttributeValidationRules<TEntity> {\n        return {};\n    }\n\n    public getValidationErrors(): ValidationErrors<TEntity> | null {\n        return this.validationError;\n    }\n}\n"]}