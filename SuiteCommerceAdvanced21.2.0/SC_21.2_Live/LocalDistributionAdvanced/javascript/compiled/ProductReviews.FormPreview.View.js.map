{"version":3,"sources":["ProductReviews.FormPreview.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAaF,OAAS,YAAY,CAAC,MAAM,CAAC;QACzB,QAAQ,EAAE,4BAA4B;QAEtC,UAAU,EAAE;YACR,EAAE,EAAE,6BAA6B;YACjC,KAAK,EAAE,6BAA6B;SACvC;QAED,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,oBAAoB,CAAC;QAE5C,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,oBAAoB,CAAC;QAElD,MAAM,EAAE;YACJ,4BAA4B,EAAE,MAAM;YACpC,4BAA4B,EAAE,MAAM;SACvC;QAED,UAAU,EAAE,UAAS,OAAO;YACxB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;YAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACrC,CAAC;QAED,UAAU,EAAE;YACR,iBAAiB,EAAE;gBACf,OAAO,IAAI,kBAAkB,CAAC;oBAC1B,KAAK,EAAE,IAAI,CAAC,OAAO;oBACnB,eAAe,EAAE,KAAK;iBACzB,CAAC,CAAC;YACP,CAAC;YACD,wBAAwB,EAAE;gBACtB,OAAO,IAAI,qBAAqB,CAAC;oBAC7B,KAAK,EAAE,IAAI,CAAC,KAAK;iBACpB,CAAC,CAAC;YACP,CAAC;SACJ;QAED,sEAAsE;QACtE,IAAI,EAAE;YACF,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;QAChC,CAAC;QAED,yDAAyD;QACzD,IAAI,EAAE,UAAS,CAAC;YACZ,CAAC,IAAI,CAAC,CAAC,cAAc,EAAE,CAAC;YAExB,IAAM,IAAI,GAAG,IAAI,CAAC;YAElB,OAAO,IAAI,CAAC,KAAK;iBACZ,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;iBAC1C,IAAI,CAAC,IAAI,EAAE;gBACR,UAAU,EAAE;oBACR,KAAK,EAAE;wBACH,4CAA4C;wBAC5C,4BAA4B;oBAChC,CAAC;iBACJ;aACJ,CAAC;iBACD,IAAI,CAAC;gBACF,6DAA6D;gBAC7D,IAAM,cAAc,GAAG,IAAI,kCAAkC,CAAC;oBAC1D,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;iBACxC,CAAC,CAAC;gBACH,cAAc,CAAC,WAAW,EAAE,CAAC;YACjC,CAAC,CAAC,CAAC;QACX,CAAC;QAED,wEAAwE;QACxE,UAAU,EAAE;YACR,iDAAiD;YACjD,OAAO;gBACH,4BAA4B;gBAC5B,MAAM,EAAE,IAAI,CAAC,WAAW;gBACxB,6BAA6B;gBAC7B,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;aACjC,CAAC;QACN,CAAC;KACJ,CAAC,CAAC","file":"ProductReviews.FormPreview.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductReviews.FormPreview.View\"/>\n\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport * as product_reviews_form_preview from 'product_reviews_form_preview.tpl';\n\nimport ProductReviewsFormConfirmationView = require('./ProductReviews.FormConfirmation.View');\nimport ProductReviewsPreview = require('./ProductReviews.Preview.View');\nimport FacetsItemCellView = require('../../Facets/JavaScript/Facets.ItemCell.View');\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\n// @class ProductReviews.FormPreview.View @extends Backbone.View\nexport = BackboneView.extend({\n    template: product_reviews_form_preview,\n\n    attributes: {\n        id: 'product-review-form-preview',\n        class: 'product-review-form-preview'\n    },\n\n    title: Utils.translate('Submit your Review'),\n\n    page_header: Utils.translate('Submit your Review'),\n\n    events: {\n        'click [data-action=\"edit\"]': 'edit',\n        'click [data-action=\"save\"]': 'save'\n    },\n\n    initialize: function(options) {\n        this.product = options.product;\n        this.item = this.product.get('item');\n        this.formView = options.formView;\n    },\n\n    childViews: {\n        'Facets.ItemCell': function() {\n            return new FacetsItemCellView({\n                model: this.product,\n                itemIsNavigable: false\n            });\n        },\n        'ProductReviews.Preview': function() {\n            return new ProductReviewsPreview({\n                model: this.model\n            });\n        }\n    },\n\n    // @method edit when the edit button is clicked, we show the Form view\n    edit: function() {\n        this.formView.showContent();\n    },\n\n    // @method save dispatch when the user saves a new review\n    save: function(e) {\n        e && e.preventDefault();\n\n        const self = this;\n\n        return this.model\n            .set('itemid', this.item.get('internalid'))\n            .save(null, {\n                statusCode: {\n                    '401': function() {\n                        // If login is required from the server side\n                        // we need to handle it here\n                    }\n                }\n            })\n            .done(function() {\n                // Once the review is submited, we show the Confirmation View\n                const preview_review = new ProductReviewsFormConfirmationView({\n                    model: self.model,\n                    product: self.product,\n                    application: self.options.application\n                });\n                preview_review.showContent();\n            });\n    },\n\n    // @method getContext @returns {ProductReviews.FormPreview.View.Context}\n    getContext: function() {\n        // @class ProductReviews.FormPreview.View.Context\n        return {\n            // @property {String} header\n            header: this.page_header,\n            // @property {String} itemUrl\n            itemUrl: this.item.get('_url')\n        };\n    }\n});\n"]}