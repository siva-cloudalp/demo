{"version":3,"sources":["Subscriptions.Collection.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;IAeF,8DAA8D;IACjD,QAAA,uBAAuB,GAAQ,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC;QACnE,wCAAwC;QACxC,KAAK,EAAE,wCAAkB;QACzB,kGAAkG;QAClG,YAAY,EAAE,KAAK;QACnB,yBAAyB;QACzB,GAAG,EAAE,KAAK,CAAC,cAAc,CAAC,2BAA2B,EAAE,IAAI,CAAC;QAE5D,UAAU,EAAE,UAAS,MAAM,EAAE,OAAO;YAChC,IAAI,CAAC,aAAa,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC;QACpD,CAAC;QAED,mGAAmG;QACnG,mEAAmE;QACnE,qEAAqE;QACrE,KAAK,EAAE,UAAS,QAAQ;YACpB,IAAM,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE,UAAS,CAAM;gBAClD,OAAO,CAAC,CAAC,QAAQ,CAAC;YACtB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;gBAC5C,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,iBAAiB,CAAC;gBACpD,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;aACjD;YAED,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE;gBAC1C,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;aAC9D;YAED,OAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC7C,CAAC;QAED,2FAA2F;QAC3F,qCAAqC;QACrC,iBAAiB;QACjB,MAAM,EAAE,UAAS,OAAO;YACpB,+BAA+B;YAC/B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;YAElC,IAAI,CAAC,KAAK,CAAC;gBACP,IAAI,EAAE;oBACF,mCAAmC;oBACnC,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK;oBAC9C,IAAI,EAAE,KAAK,CAAC,IAAI;oBAChB,EAAE,EAAE,KAAK,CAAC,EAAE;oBACZ,2BAA2B;oBAC3B,IAAI,EAAE,OAAO,CAAC,IAAI;iBACrB;gBACD,KAAK,EAAE,IAAI;gBACX,+BAA+B;gBAC/B,QAAQ,EAAE,OAAO,CAAC,QAAQ;aAC7B,CAAC,CAAC;QACP,CAAC;KACJ,CAAC,CAAC","file":"Subscriptions.Collection.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Subscriptions.Collection\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport { SubscriptionsModel } from './Subscriptions.Model';\n\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\nexport interface SubscriptionBillingAccount {\n    internalId: number;\n    name: string;\n}\n// @class Subscriptions.Collection @extend Backbone.Collection\nexport const SubscriptionsCollection: any = Backbone.Collection.extend({\n    // @property {Subscriptions.Model} model\n    model: SubscriptionsModel,\n    // @property {Boolean} cacheSupport enable or disable the support for cache (Backbone.CachedModel)\n    cacheSupport: false,\n    // @property {String} url\n    url: Utils.getAbsoluteUrl('services/Subscriptions.ss', true),\n\n    initialize: function(models, options) {\n        this.customFilters = options && options.filters;\n    },\n\n    // @method parse Handle the response from the back-end to properly manage total records found value\n    // @param {Object} response JSON Response from the back-end service\n    // @return {Array<Object>} List of returned records from the back-end\n    parse: function(response) {\n        const original_items = _.compact(response);\n        const items = _.sortBy(original_items, function(o: any) {\n            return o.isActive;\n        });\n\n        if (!_.isUndefined(response.totalRecordsFound)) {\n            this.totalRecordsFound = response.totalRecordsFound;\n            this.recordsPerPage = response.recordsPerPage;\n        }\n\n        if (!_.isUndefined(response.billingAccounts)) {\n            this.billingAccounts = _.toArray(response.billingAccounts);\n        }\n\n        return _.toArray(response.subscriptions);\n    },\n\n    // @method update Method called by ListHeader.View when applying new filters and constrains\n    // @param {Collection.Filter} options\n    // @return {Void}\n    update: function(options) {\n        // @property {DateRange?} range\n        const range = options.range || {};\n\n        this.fetch({\n            data: {\n                // @property {value:String?} filter\n                filter: options.filter && options.filter.value,\n                from: range.from,\n                to: range.to,\n                // @property {String?} page\n                page: options.page\n            },\n            reset: true,\n            // @property {String?} killerId\n            killerId: options.killerId\n        });\n    }\n});\n"]}