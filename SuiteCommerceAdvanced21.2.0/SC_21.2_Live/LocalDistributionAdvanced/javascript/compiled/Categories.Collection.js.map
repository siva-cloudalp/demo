{"version":3,"sources":["Categories.Collection.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;;;;;;;;;;;;;;IA8BF;QAA0C,wCAAyC;QAS/E,8BAAmB,OAA2B;YAA9C,YACI,iBAAO,SAGV;YAVM,WAAK,GAA2B,kCAAe,CAAC;YAEtC,YAAM,GAAG,6BAAa,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC;YAElD,SAAG,GAAG,cAAM,OAAA,KAAI,CAAC,aAAa,EAAE,EAApB,CAAoB,CAAC;YAKpC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;QAC3B,CAAC;QAEO,4CAAa,GAArB;YACI,IAAM,sBAAsB,GAAG,2CAA2C,CAAC;YAC3E,IAAM,OAAO,GAAG,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;YAC9E,IAAM,MAAM,GAAG,eAAe,CAAC,wBAAwB,CACnD,WAAW,EACX,IAAI,CAAC,OAAO,CAAC,KAAK,EAClB,IAAI,CAAC,6BAA6B,EAAE,EACpC,IAAI,CAAC,OAAO,CAAC,WAAW,EACxB,IAAI,CAAC,OAAO,CAAC,SAAS,EACtB,IAAI,CAAC,OAAO,CAAC,aAAa,CAC7B,CAAC;YACF,IAAM,GAAG,GAAG,OAAO,GAAG,sBAAsB,GAAG,MAAM,CAAC;YAEtD,OAAO,GAAG,CAAC;QACf,CAAC;QAEO,yCAAU,GAAlB,UAAmB,OAAO;YACtB,OAAO,CAAC,CAAC,KAAK,CACV,eAAe,CAAC,kBAAkB,EAAE,CAAC,OAAO,CAAC,CAAC,MAAM,EACpD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,gBAAgB,CACvE,CAAC,IAAI,EAAE,CAAC;QACb,CAAC;QAEO,4DAA6B,GAArC;YACI,OAAO,kBAAgB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAG,CAAC;QACrD,CAAC;QAES,oCAAK,GAAf,UAAgB,UAAwB;YACpC,OAAO,eAAe,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QACzF,CAAC;QAEM,oCAAK,GAAZ;YAQI,IAAM,OAAO,GAAiB;gBAC1B,SAAS,EAAE;oBACP,eAAe,EAAE,IAAI;iBACxB;gBACD,WAAW,EAAE,IAAI;aACpB,CAAC;YAEF,qDAAqD;YACrD,2DAA2D;YAC3D,EAAE,CAAC,8BAA8B,GAAG,IAAI,CAAC;YACzC,IAAM,WAAW,GAAG,iBAAM,KAAK,YAAC,OAAO,CAAC,CAAC;YACzC,EAAE,CAAC,8BAA8B,GAAG,KAAK,CAAC;YAE1C,OAAO,WAAW,CAAC;QACvB,CAAC;QACL,2BAAC;IAAD,CArEA,AAqEC,CArEyC,uBAAU,GAqEnD;IArEY,oDAAoB","file":"Categories.Collection.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Categories.Collection\"/>\n// @Typescript-partial\nimport * as _ from 'underscore';\nimport * as CategoriesUtils from './Categories.Utils';\n\nimport { CategoriesModel } from './Categories.Model';\nimport { Collection } from '../../Core/JavaScript/Collection';\nimport {\n    Category,\n    CategoryTree,\n    FullCategory\n} from '../../../ServiceContract/SC/Category/Category';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nimport JQueryXHR = JQuery.jqXHR;\n\nexport interface CollectionOptions {\n    dataType?: string;\n    jsonp?: string;\n    preventDefault?: boolean;\n    backendAccountDomain?: string;\n    pcvGroups?: string;\n    pcvAllItems?: string;\n    level: string;\n    effectiveDate?: string;\n    cache?: boolean;\n}\n\nexport class CategoriesCollection extends Collection<CategoriesModel, CategoryTree> {\n    private readonly options: CollectionOptions;\n\n    public model: typeof CategoriesModel = CategoriesModel;\n\n    private readonly config = Configuration.get().categories;\n\n    public url = () => this.getServiceURL();\n\n    public constructor(options?: CollectionOptions) {\n        super();\n\n        this.options = options;\n    }\n\n    private getServiceURL(): string {\n        const CATEGORY_TREE_ENDPOINT = '/api/navigation/v1/categorynavitems/tree?';\n        const baseUrl = CategoriesUtils.getBaseUrl(this.options.backendAccountDomain);\n        const params = CategoriesUtils.getSMTEndpointParameters(\n            'max_level',\n            this.options.level,\n            this.getCategoryTreeOptionalFields(),\n            this.options.pcvAllItems,\n            this.options.pcvGroups,\n            this.options.effectiveDate\n        );\n        const url = baseUrl + CATEGORY_TREE_ENDPOINT + params;\n\n        return url;\n    }\n\n    private getColumns(element) {\n        return _.union(\n            CategoriesUtils.getCategoryColumns()[element].fields,\n            this.config[element].fields || this.config[element].additionalFields\n        ).join();\n    }\n\n    private getCategoryTreeOptionalFields(): string {\n        return `&menu_fields=${this.getColumns('menu')}`;\n    }\n\n    protected parse(categories: CategoryTree): (FullCategory | Category)[] {\n        return CategoriesUtils.sortingBy(categories.data, CategoriesUtils.getSortBy('menu'));\n    }\n\n    public fetch(): JQueryXHR {\n        interface FetchOptions {\n            xhrFields?: {\n                withCredentials: boolean;\n            };\n            crossDomain?: boolean;\n        }\n\n        const options: FetchOptions = {\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true\n        };\n\n        // The 'true' value prevents jQuery ajax from sending\n        // the 'X-SC-Touchpoint' header, it's not supported by CORS\n        SC.dontSetRequestHeaderTouchpoint = true;\n        const fetchResult = super.fetch(options);\n        SC.dontSetRequestHeaderTouchpoint = false;\n\n        return fetchResult;\n    }\n}\n"]}