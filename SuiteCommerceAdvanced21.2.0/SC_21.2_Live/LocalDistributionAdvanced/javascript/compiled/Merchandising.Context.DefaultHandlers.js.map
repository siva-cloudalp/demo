{"version":3,"sources":["Merchandising.Context.DefaultHandlers.ts"],"names":[],"mappings":"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","file":"Merchandising.Context.DefaultHandlers.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Merchandising.Context.DefaultHandlers\"/>\nimport * as _ from 'underscore';\n\nimport MerchandisingContext = require('./Merchandising.Context');\nimport FacetsBrowseView = require('../../../Commons/Facets/JavaScript/Facets.Browse.View');\nimport ProductDetailsBaseView = require('../../ProductDetails/JavaScript/ProductDetails.Base.View');\nimport CartDetailedView = require('../../../Commons/Cart/JavaScript/Cart.Detailed.View');\nimport CartConfirmationView = require('../../../Commons/Cart/JavaScript/Cart.Confirmation.View');\n\n/*\n@module Merchandising\n@class Merchandising.DefaultContextHandlers\nRegisters a set of 'default handlers', this handlers are called depending on the execution context (current view they are in when being called)\n\nThe following handlers are required for correct functionality of the Merchandising Zone module:\n\n * getFilterValues - returns an array with the values of a specific filter in the current view\n * getIdItemsToExclude - returns an array with the ids of the items in the current view\n\n@extends ApplicationModule\n*/\n\nvar DefaultContextHandlers = {\n    // @method mergeFilterValues\n    mergeFilterValues: function(current_values, facet_values) {\n        return _.union(\n            _.reject(current_values, function(value) {\n                return value === '$current';\n            }),\n\n            facet_values || []\n        );\n    },\n    // @method parseValues\n    // @param {Object} filters\n    // @param {Function} callback\n    parseValues: function(filters, callback) {\n        _.each(filters, function(values: any, key) {\n            values = DefaultContextHandlers.mergeFilterValues(values, callback(values, key));\n\n            if (values.length) {\n                _.each(values, function(value) {\n                    (<any>MerchandisingContext).appendFilterValue(filters, key, value);\n                });\n            } else {\n                delete filters[key];\n            }\n        });\n\n        return filters;\n    },\n\n    // @method includeFacetsToFilters\n    // @param {Array} facets\n    // @param {Object} filters\n    includeFacetsToFilters: function(facets, filters) {\n        let facet_id = '';\n        let facet_values = [];\n\n        _.each(facets, function(facet: any) {\n            facet_id = facet.id;\n            facet_values = facet.value;\n\n            facet_values = _.isArray(facet_values) ? facet_values : [facet_values];\n\n            if (filters.hasOwnProperty(facet_id)) {\n                facet_values = _.union(filters[facet_id], facet_values);\n            }\n\n            filters[facet_id] = facet_values;\n        });\n\n        return filters;\n    },\n\n    // @property {Merchandising.Context.Handler} itemListHandlers\n    itemListHandlers: {\n        getFilters: function(filters, isWithin) {\n            const { facets } = this.view.translator;\n\n            if (isWithin) {\n                filters = DefaultContextHandlers.includeFacetsToFilters(facets, filters);\n            }\n\n            return DefaultContextHandlers.parseValues(filters, function(values, key) {\n                let facet_values = [];\n\n                if (_.contains(values, '$current')) {\n                    const current_facet: any = _.findWhere(facets, { id: key });\n\n                    facet_values = (current_facet && current_facet.value) || [];\n\n                    if (!_.isArray(facet_values)) {\n                        facet_values = [facet_values];\n                    }\n                }\n\n                return facet_values;\n            });\n        },\n\n        getIdItemsToExclude: function() {\n            return this.view.model.get('items').pluck('internalid');\n        }\n    },\n\n    // @method getItemValues\n    // @param {Array} facets\n    // @param {String} field_id\n    // @return {Array<String>}\n    getItemValues: function(facets, field_id) {\n        const itemValues = (<any>_.findWhere(facets, { id: field_id })).values;\n        return _.pluck(itemValues, 'url');\n    },\n\n    // @property {Merchandising.Context.Handler} productDetailsHandlers\n    productDetailsHandlers: {\n        // depending on the item's attributes\n        getFilters: function(filters, isWithin) {\n            const facets = this.view.model.get('facets');\n\n            return DefaultContextHandlers.parseValues(filters, function(values, key) {\n                if (isWithin || _.contains(values, '$current')) {\n                    return DefaultContextHandlers.getItemValues(facets, key);\n                }\n            });\n        },\n\n        // there is only one it, we return its id\n        // notice: we are returning it inside of an array\n        getIdItemsToExclude: function() {\n            return [this.view.model.getItemId()];\n        }\n    },\n\n    // @method getCartLineItemValue\n    // @param {Transaction.Line.Model} line\n    // @param {String} field_id\n    getCartLineItemValue: function(line, filter_id) {\n        let value = line.get('item').get(filter_id);\n        const selected_option = line.get('options').findWhere({ itemOptionId: filter_id });\n\n        if (!value) {\n            value = selected_option ? selected_option.get('label') : null;\n        }\n\n        return value;\n    },\n\n    // @method getCartItemValues returns an array with the values\n    // @param {Transaction.Line.Collection} lines\n    // @param {String} field_id\n    // @return {Array<String>}\n    getCartItemValues: function(lines, filter_id) {\n        return _.compact(\n            lines.map(function(line) {\n                return (<any>MerchandisingContext).escapeValue(\n                    DefaultContextHandlers.getCartLineItemValue(line, filter_id)\n                );\n            })\n        );\n    },\n\n    // @property {Merchandising.Context.Handler} cartDetailedHandlers\n    cartDetailedHandlers: {\n        getFilters: function(filters, isWithin) {\n            const lines = this.view.model.get('lines');\n\n            return DefaultContextHandlers.parseValues(filters, function(values, key) {\n                if (isWithin || _.contains(values, '$current')) {\n                    return DefaultContextHandlers.getCartItemValues(lines, key);\n                }\n            });\n        },\n\n        // for each if the lines in the cart, we return either:\n        // * the id of the matrix parent, if its a matrix\n        // * the id of the line.item, if its not\n        getIdItemsToExclude: function() {\n            let item = null;\n\n            return this.view.model.get('lines').map(function(line) {\n                item = line.get('item');\n\n                return item.get('_matrixParent').get('_id') || item.get('_id');\n            });\n        }\n    },\n\n    // @property {Merchandising.Context.Handler} cartConfirmationHandlers\n    cartConfirmationHandlers: {\n        // returns the value of the attribute in the view's line item\n        getFilters: function(filters, isWithin) {\n            const line = this.view.model;\n\n            return DefaultContextHandlers.parseValues(filters, function(values, key) {\n                if (isWithin || _.contains(values, '$current')) {\n                    return (<any>MerchandisingContext).escapeValue(\n                        DefaultContextHandlers.getCartLineItemValue(line, key)\n                    );\n                }\n            });\n        },\n\n        // returns either the matrix parent id or the item id\n        // of the view's line item\n        getIdItemsToExclude: function() {\n            const item = this.view.model.get('item');\n            return [item.get('_matrixParent').get('_id') || item.get('_id')];\n        }\n    },\n\n    mountToApp: function() {\n        (<any>MerchandisingContext)\n            .registerHandlers(FacetsBrowseView, this.itemListHandlers)\n            .registerHandlers(ProductDetailsBaseView, this.productDetailsHandlers)\n            .registerHandlers(CartDetailedView, this.cartDetailedHandlers)\n            .registerHandlers(CartConfirmationView, this.cartConfirmationHandlers);\n\n        return this;\n    }\n};\n\nexport = DefaultContextHandlers;\n\n// @class Merchandising.Context.Handler This class defines the API used to interact with a particular view.\n// @method getFilters\n// @param {Object} filters\n// @param {Boolean} isWithin Indicate if the specified filter should be applied on the current selections. This value is shown as 'APPLY ON CURRENT SELECTIONS' in the NS Backend\n// @return {Object}\n//\n// @method getIdItemsToExclude\n"]}