{"version":3,"sources":["Item.Model.ts"],"names":[],"mappings":"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","file":"Item.Model.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Item.Model\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/GlobalDeclarations.d.ts\" />\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { MasterOptionsHelper } from '../../SC/JavaScript/MasterOptionsHelper';\nimport { ProfileModel } from '../../Profile/JavaScript/Profile.Model';\n\nimport { UrlHelper } from '../../UrlHelper/JavaScript/UrlHelper';\nimport Deferred = JQuery.Deferred;\n\nimport BackboneCachedModel = require('../../BackboneExtras/JavaScript/Backbone.CachedModel');\nimport Session = require('../../Session/JavaScript/Session');\nimport ItemOptionCollection = require('./Item.Option.Collection');\n\ninterface ItemsApiFetchXhrFields {\n    withCredentials: boolean;\n}\n\ninterface ItemsApiFetchData {\n    as_of_date: string;\n    force_avoid_redirect?: boolean;\n}\n\ninterface FetchOptions {\n    cache?: boolean;\n    data?: ItemsApiFetchData;\n    xhrFields?: ItemsApiFetchXhrFields;\n    crossDomain?: boolean;\n}\n\nlet ItemCollection = null;\nlet forceAvoidRedirect: boolean;\n\nconst originalFetch = BackboneCachedModel.prototype.fetch;\n\ntype BetterPrice = {\n    defaultItemPrice: string;\n    betterItemPrice: string;\n} | null;\n\ninterface PriceTier {\n    maximumquantity: number;\n    minimumquantity: number;\n    price: number;\n    price_formatted: string;\n    index: number;\n}\n\nconst ItemModel = BackboneCachedModel.extend({\n    moduleName: 'Item.Model',\n\n    constructor: function (attributes) {\n        this.sanitize(attributes);\n        BackboneCachedModel.apply(this, arguments);\n    },\n\n    // @method url\n    // @return {String}\n    url: function url() {\n        const profile = ProfileModel.getInstance();\n        const url = Utils.addParamsToUrl(\n            profile.getSearchApiUrl(),\n            _.extend({}, this.searchApiMasterOptions, Session.getSearchApiParams()),\n            profile.isAvoidingDoubleRedirect(forceAvoidRedirect)\n        );\n\n        return url;\n    },\n\n    // @method fetch overrides fetch so we make sure that options are set, so we wrap it\n    fetch: function (options: FetchOptions): Deferred<void> {\n        Utils.deepExtend(options || {}, this.options);\n        if (options.cache === undefined) {\n            options.cache = true;\n        }\n\n        forceAvoidRedirect = options && options.data && options.data.force_avoid_redirect;\n\n        return originalFetch.apply(this, arguments);\n    },\n\n    // @method parse The API returns the items as an array always this takes care of returning the object\n    // @return {Item.Model.Model.Attributes}\n    parse: function parse(response) {\n        // if we are performing a direct API call the item is response.items[0]\n        // but if you are using the Item.Collection to fetch this guys\n        // The item is the response\n        const single_item = response.items && response.items[0];\n\n        if (single_item) {\n            single_item.facets = response.facets;\n        }\n        return single_item ? this.sanitize(single_item) : this.sanitize(response);\n    },\n    sanitize: function (attributes) {\n        if (\n            attributes &&\n            attributes.onlinecustomerprice_detail &&\n            attributes.onlinecustomerprice_detail.onlinecustomerprice === ''\n        ) {\n            attributes.onlinecustomerprice_detail.onlinecustomerprice = null;\n        }\n        return attributes;\n    },\n\n    // @method generateURL Returns the current URL. This method is just an alias over get('_url') to provide a unified interface with the Product.Model\n    // @return {String}\n    generateURL: function generateURL() {\n        return this.get('_url');\n    },\n\n    // @method getFullLink Generates a String ready to be used to a link for a PDP. In difference to the method generateURL, getFullLink\n    // returns a string that contains the value of href, data-hashtag and data-touchpoint.\n    // output example: href=\"/Californium-Mtr\" data-touchpoint=\"home\" data-hashtag=\"#/Californium-Mtr\"\n    // @return {Object}\n    getFullLink: function getFullLink() {\n        const url: string = this.generateURL();\n        const link_attributes = {\n            href: url\n        };\n\n        if (SC.ENVIRONMENT.siteSettings.sitetype === 'ADVANCED') {\n            _.extend(link_attributes, {\n                data: {\n                    touchpoint: 'home',\n                    hashtag:\n                        Configuration.get('currentTouchpoint') !== 'home'\n                            ? encodeURIComponent(url)\n                            : url\n                }\n            });\n        }\n\n        return Utils.objectToAtrributes(link_attributes);\n    },\n\n    // @method initialize\n    // @return {Void}\n    initialize: function initialize() {\n        // Wires the config options to the URL of the model\n        this.searchApiMasterOptions = MasterOptionsHelper.getSearchAPIMasterOption('itemDetails');\n        this.itemOptionsConfig = Configuration.get('ItemOptions.optionsConfiguration', []);\n        const self = this;\n        this.set('options', this.getPosibleOptions(), { silent: true });\n        this.on(\n            'change:itemoptions_detail',\n            function () {\n                self.set('options', self.getPosibleOptions(), { silent: true });\n            },\n            this\n        );\n    },\n\n    deepCopy: function deepCopy() {\n        const self = this;\n        const obj = this.attributes || {};\n        const item_key_mapping = this.getKeyMapping(Configuration);\n\n        _.each(item_key_mapping, function (value: any, attr: any) {\n            if (attr.charAt(0) === '_') {\n                attr = `keyMapping${attr}`;\n            }\n\n            obj[attr] = _.isFunction(value) ? value(self) : value;\n        });\n\n        return obj;\n    },\n\n    // @method getPosibleOptions\n    // @returns {Item.Options.Collection} an array of all the possible options with values and information\n    getPosibleOptions: function getPosibleOptions() {\n        if (this.cachedPosibleOptions) {\n            return this.cachedPosibleOptions;\n        }\n\n        const result = new ItemOptionCollection();\n\n        if (this.get('_optionsDetails') && this.get('_optionsDetails').fields) {\n            const self = this;\n            // Prepares a simple map of the configuration\n            const options_config_map = {};\n\n            _.each(this.itemOptionsConfig, function (option: any) {\n                if (option.cartOptionId) {\n                    options_config_map[option.cartOptionId] = option;\n                }\n            });\n\n            // if you are an child in the cart it then checks for the options of the parent\n            const fields = this.get('_matrixParent').get('_id')\n                ? this.get('_matrixParent').get('_optionsDetails').fields\n                : this.get('_optionsDetails').fields;\n\n            // Walks the _optionsDetails to generate a standard options response.\n            _.each(fields, function (option_details: any) {\n                // @class Item.Model.Option.Value\n                // @property {String} internalid\n                // @property {String} label\n                // @property {String} url The url of the option to navigate to the PDP with that option selected by default\n\n                // @class Item.Model.Option\n                let option = {\n                    // @property {String} label Visible option name\n                    label: option_details.label,\n                    // @property {Array<Item.Model.Option.Value>} values\n                    values: option_details.values,\n                    // @property {String} type Type of the option. Possible values are: select, textarea, email, text\n                    type: option_details.type,\n                    // @property {String} cartOptionId Value used to set options in the Commerce API\n                    cartOptionId: option_details.internalid,\n                    // @property {String} itemOptionId Value returned from the Search API (API value 'sourcefrom')\n                    itemOptionId: option_details.sourcefrom || '',\n                    // @property {Boolean} isMatrixDimension\n                    isMatrixDimension: !!option_details.ismatrixdimension || false,\n                    // @property {Boolean} isMandatory Indicate if the options is required or not\n                    isMandatory: !!option_details.ismandatory || false,\n                    // @property {String} urlParameterName Parameter used to generate the url of this options. For example size instead or custcol12 in www.yourdomain.com/item?size=12&custcol12=3\n                    urlParameterName: option_details.internalid,\n                    // @property {Boolean} useLabelsOnUrl Indicate if this option should show the label's value when displayed in the URL\n                    // or instead the internalid's value should be used (the second is the default)\n                    useLabelsOnUrl: false,\n                    // @property {Number} index Property used to sort options. 10 by default\n                    index: 10\n                };\n\n                // Makes sure all options are availabe by defualt\n                _.each(option.values, function (value: any) {\n                    value.isAvailable = true;\n                });\n\n                // Merges this with the configuration object\n                if (options_config_map[option.cartOptionId]) {\n                    option = _.extend(option, options_config_map[option.cartOptionId]);\n                }\n\n                option.values = _.map(option.values, function (value: any) {\n                    value.url = UrlHelper.setUrlParameter(\n                        self.get('_url'),\n                        option.urlParameterName,\n                        option.useLabelsOnUrl ? value.label : value.internalid\n                    );\n                    return value;\n                });\n\n                if (option_details.ismatrixdimension && self.get('_matrixChilds').length) {\n                    const item_values = self.get('_matrixChilds').pluck(option.itemOptionId);\n\n                    option.values = _.filter(option.values, function (value: any) {\n                        if (value.internalid) {\n                            return _.contains(item_values, value.label);\n                        }\n\n                        return true;\n                    });\n                }\n\n                result.add(option);\n            });\n\n            // Since this is not going to change in the life of the model we can cache it\n            this.cachedPosibleOptions = result;\n        }\n\n        return result;\n    },\n\n    // @method isProperlyConfigured Check in case the item has options all options have a itemOptionId property and in the item is matrix\n    // check there are child matrix items\n    // @returns {Boolean} true If the current item is properly configured\n    isProperlyConfigured: function isProperlyConfigured() {\n        const options = this.getPosibleOptions();\n        let option = null;\n\n        if (options && options.length) {\n            for (let i = 0; i < options.length; i++) {\n                option = options.at(i);\n\n                if (option.get('isMatrixDimension') && !option.get('itemOptionId')) {\n                    return false;\n                }\n            }\n        }\n        // If you omit item options from the field set and use matrix, that's an issue.\n        else if (this.get('_matrixChilds') && this.get('_matrixChilds').length) {\n            return false;\n        }\n\n        return true;\n    },\n\n    // @method getKeyMapping\n    // @return {ItemsKeyMapping}\n    getKeyMapping: function getKeyMapping() {\n        if (!this._keyMapping) {\n            //This should be migrated, don't use SC.Application because of type checking.\n            //Application should be received as parameter\n            this._keyMapping = SC.Application.getKeyMapping();\n        }\n\n        return this._keyMapping;\n    },\n\n    // @method get We have override the get function for this model in order to honor the ItemKeyMapping\n    // It also makes sure that _matrixChilds and _relatedItems are Item.Collection and _matrixParent is an Item.Model\n    // @param {String} attr\n    // @param {Boolean} dont_cache if true it won't return the cached attribute value.\n    get: function get(attr, dont_cache) {\n        const keyMapping = this.getKeyMapping();\n\n        // var keyMapping = this.keyMapping || (this.collection && this.collection.keyMapping); // TODO: Dev Tools migration concern...\n        if (dont_cache || (keyMapping && !this.attributes[attr] && keyMapping[attr])) {\n            const mapped_key = keyMapping[attr];\n\n            if (_.isFunction(mapped_key)) {\n                this.attributes[attr] = mapped_key(this);\n            } else if (_.isArray(mapped_key)) {\n                // then the value is get(arr[0]) || get(arr[1]) || ...\n                for (let i = 0; i < mapped_key.length; i++) {\n                    if (this.attributes[mapped_key[i]]) {\n                        this.attributes[attr] = this.attributes[mapped_key[i]];\n                        break;\n                    }\n                }\n            } else {\n                this.attributes[attr] = this.attributes[mapped_key];\n            }\n\n            if (attr === '_matrixChilds' || attr === '_relatedItems') {\n                ItemCollection = ItemCollection || Utils.requireModules('Item.Collection');\n                if (!(this.attributes[attr] instanceof ItemCollection)) {\n                    this.attributes[attr] = new ItemCollection(this.attributes[attr] || []);\n                }\n            } else if (attr === '_matrixParent') {\n                if (!(this.attributes[attr] instanceof ItemModel)) {\n                    this.attributes[attr] = new ItemModel(this.attributes[attr] || {});\n                }\n            }\n        }\n\n        return this.attributes[attr];\n    },\n\n    //SCIS specific, added as workaround\n    getSelectedMatrixChilds: function (selection) {\n        selection = selection || this.getMatrixOptionsSelection();\n        const selection_key = JSON.stringify(selection);\n\n        // Creates the Cache container\n        if (!this.matrixSelectionCache) {\n            this.matrixSelectionCache = {};\n        }\n\n        if (!this.get('_matrixChilds')) {\n            return [];\n        }\n\n        // Caches the entry for the item\n        if (!this.matrixSelectionCache[selection_key]) {\n            this.matrixSelectionCache[selection_key] = _.values(selection).length\n                ? this.get('_matrixChilds').where(selection)\n                : this.get('_matrixChilds').models;\n        }\n\n        return this.matrixSelectionCache[selection_key];\n    },\n\n    //SCIS specific, added as workaround\n    getMatrixOptionsSelection: function () {\n        const matrix_options = _.where(this.getPosibleOptions(), { isMatrixDimension: true });\n        const result = {};\n        const self = this;\n\n        _.each(matrix_options, function (matrix_option: any) {\n            const value = self.getOption(matrix_option.cartOptionId);\n            if (value && value.label) {\n                result[matrix_option.itemOptionId] = value.label;\n            }\n        });\n\n        return result;\n    },\n\n    //SCIS specific, added as workaround\n    getQueryStringWithQuantity: function (quantity, exclude_matrix_options) {\n        const self = this;\n        let result = '?quantity=' + (quantity || 1);\n\n        const matrixParent = this.get('_matrixParent');\n        // If this item is a child of a matrix use the options of the parent\n        if (!_.isEmpty(matrixParent) && matrixParent.get('internalid')) {\n            const childItem = matrixParent.get('_matrixChilds').get(self.id);\n            if (childItem) {\n                _.each(matrixParent.getPosibleOptions(), function (option: any) {\n                    if (exclude_matrix_options && option.isMatrixDimension) {\n                        return;\n                    }\n\n                    let value = childItem.get(option.itemOptionId || option.cartOptionId);\n                    if (!value) {\n                        const selectedOption = self.getOption(\n                            option.itemOptionId || option.cartOptionId\n                        );\n                        value = selectedOption && selectedOption.internalid;\n                    }\n                    result += '&' + option.url + '=' + encodeURIComponent(value);\n                });\n            }\n        } else {\n            let options = this.getPosibleOptions();\n            if (options && options.length) {\n                for (let i = 0; i < options.length; i++) {\n                    let option = options.at(i);\n\n                    if (exclude_matrix_options && option.get('isMatrixDimension')) {\n                        return;\n                    }\n\n                    const value = self.getOption(option.get('cartOptionId'));\n                    if (value) {\n                        result += '&' + option.url + '=' + encodeURIComponent(value.internalid);\n                    }\n                }\n            }\n        }\n\n        return result;\n    },\n\n    //SCIS specific, added as workaround\n    getQueryString: function () {\n        return this.getQueryStringWithQuantity(this.get('quantity'));\n    },\n\n    // @method  getDefaultPrice Given the price details of an item (class OnlineCustomerPriceDetail) returns the default onlinecustomerprice_formatted and onlinecustomerprice\n    // @param {OnlineCustomerPriceDetail} details_object\n    // @return {ItemPrice}\n    getDefaultPrice: function getDefaultPrice(details_object) {\n        // @class ItemPrice\n        return {\n            // @property {Number} price\n            price: _.isNumber(details_object.onlinecustomerprice) ? details_object.onlinecustomerprice : this.get('onlinecustomerprice'),\n            // @property {String} price_formatted\n            price_formatted: _.isNumber(details_object.onlinecustomerprice) ? details_object.onlinecustomerprice_formatted : Utils.formatCurrency(this.get('onlinecustomerprice'))\n        };\n        // @class Item.Model\n    },\n\n    // IMPORTANT: The following method are shared with Product.Model, allowing to use Products or Items interchangeably\n    // If you edit them, please consider reflect the same changes in the Product.Model and potentially in the\n    // Transaction.Line.Model\n\n    // @method getPrice Gets the price based on the selection of the item and the quantity\n    // @param {Number} quantity\n    // @param {Array<Item.Model>?} selected_matrix_children\n    // @return {ItemPrice}\n    getPrice: function getPrice(quantity, selected_matrix_children) {\n        selected_matrix_children =\n            selected_matrix_children ||\n            (this.get('_matrixChilds') ? this.get('_matrixChilds').models : []);\n        quantity = quantity || 1;\n\n        const details_object = this.get('_priceDetails') || {};\n        let result = this.getDefaultPrice(details_object);\n\n        // Computes Quantity pricing based on the quantity specified as parameter\n        if (details_object.priceschedule && details_object.priceschedule.length) {\n            let price_schedule;\n            let min;\n            let max;\n\n            for (let i = 0; i < details_object.priceschedule.length; i++) {\n                price_schedule = details_object.priceschedule[i];\n\n                min = parseInt(price_schedule.minimumquantity, 10);\n                max = parseInt(price_schedule.maximumquantity, 10);\n\n                if ((min <= quantity && quantity < max) || (min <= quantity && !max)) {\n                    result = {\n                        price: price_schedule.price,\n                        price_formatted: price_schedule.price_formatted\n                    };\n                }\n            }\n        }\n\n        // if it's a matrix it will compute the matrix price\n        if (selected_matrix_children.length) {\n            // Gets the price of each child\n            const children_prices = [];\n\n            _.each(selected_matrix_children, function (child: any) {\n                children_prices.push(child.getPrice(quantity));\n            });\n\n            if (children_prices.length === 1) {\n                // If there is only one it means there is only one price to show\n                result = children_prices[0];\n            } else {\n                // otherwise we should compute max and min to show a range in the GUI\n                const children_prices_values = _.pluck(children_prices, 'price');\n                const min_value = _.min(children_prices_values); // Minimum price from all children items\n                const max_value = _.max(children_prices_values); // Maximum price from all children items\n\n                if (min_value !== max_value) {\n                    // We return them alongside the result of the parent\n                    // @class ItemPrice\n                    // @property {Number?} min This value will be present only in the case the current item is Matrix, has a partial selection and its children have different range\n                    // of prices. When this property is present will contain the minimum price of all the children items valid to be selected.\n                    result.min = _.where(children_prices, { price: min_value })[0];\n                    // @property {Number?} max This value will be present only in the case the current item is Matrix, has a partial selection and its children have different range\n                    // of prices. When this property is present will contain the maximum price of all the children items valid to be selected.\n                    result.max = _.where(children_prices, { price: max_value })[0];\n                    // @class Item.Model\n                } else {\n                    // they are all alike so we can show any of them\n                    result = children_prices[0];\n                }\n            }\n        }\n\n        // Adds the compare against price if its not set by one of the children\n        if (!result.compare_price && this.get('_comparePriceAgainst')) {\n            // @class ItemPrice\n            // @property {Number} compare_price\n            result.compare_price = this.get('_comparePriceAgainst');\n            // @property {String} compare_price_formatted\n            result.compare_price_formatted = this.get('_comparePriceAgainstFormated');\n            // @class Item.Model\n        }\n\n        return result;\n    },\n\n    // @method getThumbnail Gets the thumbnail. This method acts as an alias for get('_thumbnail') which allows to use\n    // Item.Model in places where Product.Model or Transaction.Line.Model is expected\n    // @return {ImageContainer}\n    getThumbnail: function getThumbnail() {\n        return this.get('_thumbnail');\n    },\n\n    // @method getSku Returns the sky of the current item. This method exist to complain with the Product.Model interface\n    // @return {String}\n    getSku: function getSku() {\n        return this.get('_sku');\n    },\n    // @method getImages Returns the first image should be displayed\n    // @return ImageContainer\n    getFirstImage: function (flattenedImages) {\n        for (let i = 0; i < flattenedImages.length; i++) {\n            const detail = flattenedImages[i];\n            const splitted = detail.url.split('.');\n            if (splitted[splitted.length - 2] === 'default') {\n                return detail;\n            }\n        }\n        return flattenedImages[0];\n    },\n    // @method getImages Returns the list of the item images\n    // @return {Array<ImageContainer>}\n    getImages: function getImages(filter) {\n        let result = [];\n        let item_images_detail = this.get('itemimages_detail') || {};\n\n        item_images_detail = item_images_detail.media || item_images_detail;\n\n        if (filter) {\n            const image_filters = Configuration.get('productline.multiImageOption', []);\n            item_images_detail = filter.filterImages(item_images_detail, image_filters);\n        }\n\n        result = Utils.imageFlatten(item_images_detail);\n        if (result.length > 1) {\n            const firstImage = this.getFirstImage(result);\n            result = _.filter(result, function (image) {\n                return firstImage != image;\n            });\n            result.unshift(firstImage);\n        }\n        // @class ImageContainer\n        return result.length\n            ? result\n            : [\n                {\n                    // @property {String} url\n                    url: Utils.getThemeAbsoluteUrlOfNonManagedResources(\n                        'img/no_image_available.jpeg',\n                        Configuration.get('imageNotAvailable')\n                    ),\n                    // @property {String} altimagetext\n                    altimagetext: this.get('_name')\n                }\n            ];\n        // @class Item.Model\n    },\n\n    // @method getOption\n    // Returns an item option\n    // @param {String} cart_option_id\n    // @return {Item.Option.Model}\n    getOption: function getOption(cart_option_id) {\n        return this.get('options').findWhere({ cartOptionId: cart_option_id });\n    },\n\n    // @method getStockInfo\n    // Returns an standard formated object for the stock info taking in consideration current matrix option selection.\n    // the login is the following: if there is an unique child selected use that. Else use the parent as default\n    // values and open children properties if it has the same value for all selected children.\n    // @param {Array<Item.Model>} selected_matrix_children\n    // @param {OptionHelper.MatrixSelection} options_selection\n    // @return {Item.StockInfo} the stock information of the current item\n    getStockInfo: function getStockInfo(selected_matrix_children, options_selection) {\n        options_selection = options_selection || {};\n        // Standardize the result object\n\n        selected_matrix_children = selected_matrix_children || [];\n\n        // if we have one selected child we use that - else we use the parent as default\n        const model = selected_matrix_children.length === 1 ? selected_matrix_children[0] : this;\n        const parent = this.get('_matrixParent');\n        // @class Item.StockInfo\n        const stock_info = {\n            // @property {Object}stock\n            stock: model.get('_stock'),\n\n            // @property {Boolean} isInStock\n            isInStock: model.get('_isInStock'),\n\n            // @property {String} outOfStockMessage\n            outOfStockMessage:\n                model.get('_outOfStockMessage') ||\n                this.get('_outOfStockMessage') ||\n                (parent && parent.get('_outOfStockMessage')) ||\n                Utils.translate('Out of Stock'),\n\n            // @property {Boolean} showOutOfStockMessage\n            showOutOfStockMessage:\n                model.get('_showOutOfStockMessage') || this.get('_showOutOfStockMessage'),\n\n            // @property {String} inStockMessage\n            inStockMessage: model.get('_inStockMessage'),\n\n            // @property {Boolean} showInStockMessage\n            showInStockMessage: model.get('_showInStockMessage'),\n\n            // @property {String} stockDescription\n            stockDescription: model.get('_stockDescription') || this.get('_stockDescription'),\n\n            // @property {Boolean} showStockDescription\n            showStockDescription: model.get('_showStockDescription'),\n\n            // @property {String} stockDescriptionClass\n            stockDescriptionClass: model.get('_stockDescriptionClass'),\n\n            // @property {Boolean} isNotAvailableInStore Indicate if the item is present in the store (returned by the store item and the search API)\n            isNotAvailableInStore:\n                _.isUndefined(model.get('_isPurchasable')) || model.get('isdisplayable') === false,\n\n            // @property {Boolean} isPurchasable\n            isPurchasable: !!model.get('_isPurchasable'),\n\n            // @property {Object} stockPerLocation\n            stockPerLocation: model.get('_quantityavailableforstorepickup_detail'),\n\n            // @propery {Boolean} isAvailableForPickUp\n            isAvailableForPickup: !!model.get('_isstorepickupallowed'),\n\n            // @propery {Boolean} showQuantityAvailable\n            showQuantityAvailable: !!model.get('_showQuantityAvailable')\n        };\n        // @class Item.Model\n\n        const is_something_selected = _(options_selection).keys().length;\n\n        // if this is an open selection we compute them all\n        if (is_something_selected && selected_matrix_children.length > 1) {\n            const matrix_children_stock_info = [];\n\n            _.each(selected_matrix_children, function (child: any) {\n                matrix_children_stock_info.push(child.getStockInfo());\n            });\n\n            // If all matrix children return the same value for a given attribute that becomes the output,\n            // with the exception of stock that is an addition of the stocks of the children - but only if the parent has\n            _.each(stock_info, function (value, key) {\n                let children_values_for_attribute = _.pluck(matrix_children_stock_info, key);\n\n                if (key === 'stock') {\n                    stock_info.stock = _.reduce(\n                        children_values_for_attribute,\n                        function (memo, num) {\n                            return memo + num;\n                        },\n                        0\n                    );\n\n                    if (isNaN(stock_info.stock)) {\n                        delete stock_info.stock;\n                    }\n                } else if (key === 'isInStock') {\n                    // the parent is in stock if any of the child items is in stock\n                    // so, if in the array of the values of 'isInStock' for the childs\n                    // there is a 'true', then the parent item is in stock\n                    stock_info.isInStock = _.contains(children_values_for_attribute, true);\n                } else {\n                    children_values_for_attribute = _.uniq(children_values_for_attribute);\n\n                    if (children_values_for_attribute.length === 1) {\n                        stock_info[key] = children_values_for_attribute[0];\n                    }\n                }\n            });\n        }\n\n        return stock_info;\n    },\n    // @method getBetterPrice\n    // Returns a standard formated object for the price taking in consideration de Base Price and the OnlineCustomerPrice.\n    getBetterPrice: function getBetterPrice(quantity: number): BetterPrice {\n        const priceLevelEnabled: boolean =\n            SC &&\n            SC.CONFIGURATION &&\n            SC.CONFIGURATION.priceLevel &&\n            SC.CONFIGURATION.priceLevel.enabled;\n\n        const defaultPriceLevel: string =\n            SC &&\n            SC.CONFIGURATION &&\n            SC.CONFIGURATION.priceLevel &&\n            SC.CONFIGURATION.priceLevel.default;\n\n        const priceObject = this.getPrice(quantity);\n\n        if (priceObject && priceObject.price < priceObject.compare_price) {\n            return {\n                defaultItemPrice: priceObject.compare_price_formatted,\n                betterItemPrice: priceObject.price_formatted\n            }\n        }\n\n        // We're checking this, besides whether is enabled, because price could not be configured or PCV Item Purchasability functionality (prices are removed from api result)\n        if (!priceLevelEnabled || !this.get(`${defaultPriceLevel}`)) return null;\n\n        const hasPriceSchedule =\n            this.get('onlinecustomerprice_detail') &&\n            this.get('onlinecustomerprice_detail').priceschedule &&\n            this.get('onlinecustomerprice_detail').priceschedule.length;\n\n        let defaultItemPrice = this.get(`${defaultPriceLevel}`);\n        let defaultItemPrice_formatted = this.get(`${defaultPriceLevel}_formatted`);\n        let priceByQuantity;\n        let priceByQuantity_formatted;\n\n        if (hasPriceSchedule) {\n            const priceSchedule = this.get('onlinecustomerprice_detail').priceschedule;\n            _.forEach(priceSchedule, (tier: PriceTier, index: number) => {\n                if (!tier.maximumquantity) tier.maximumquantity = this.get('quantityavailable');\n                tier.index = index;\n            });\n            const itemMaximumQuantity = this.get('maximumquantity');\n            const tiersAmount = (priceSchedule && priceSchedule.length) || 0;\n\n            const currentTier = _.filter(priceSchedule, (tier: PriceTier, index: number) => {\n                if (!tier.maximumquantity && quantity) {\n                    return priceSchedule[priceSchedule.length - 1];\n                }\n                if (\n                    tier.maximumquantity === quantity &&\n                    tier.maximumquantity === itemMaximumQuantity &&\n                    index === tiersAmount - 1\n                ) {\n                    return true;\n                }\n                return tier.minimumquantity <= quantity && tier.maximumquantity > quantity;\n            });\n\n            if (currentTier.length) {\n                const firstCurrentTierIndex = currentTier[0].index;\n                const currentRange = priceSchedule[firstCurrentTierIndex];\n                priceByQuantity = currentRange.price;\n                priceByQuantity_formatted = currentRange.price_formatted;\n\n                const previousIndex = firstCurrentTierIndex - 1;\n                const previousRange = priceSchedule[previousIndex];\n                defaultItemPrice = previousIndex >= 0 ? previousRange.price : defaultItemPrice;\n                defaultItemPrice_formatted =\n                    previousIndex >= 0 ? previousRange.price_formatted : defaultItemPrice_formatted;\n            } else {\n                priceByQuantity = priceSchedule[0].price;\n                priceByQuantity_formatted = priceSchedule[0].price_formatted;\n            }\n        } else {\n            priceByQuantity =\n                this.get('onlinecustomerprice_detail') &&\n                this.get('onlinecustomerprice_detail').onlinecustomerprice;\n            priceByQuantity_formatted =\n                this.get('onlinecustomerprice_detail') &&\n                this.get('onlinecustomerprice_detail').onlinecustomerprice_formatted;\n        }\n\n        const betterPrice = priceByQuantity < defaultItemPrice && {\n            defaultItemPrice: defaultItemPrice_formatted,\n            betterItemPrice: priceByQuantity_formatted\n        };\n\n        return betterPrice || null;\n    }\n});\n\nexport = ItemModel;\n"]}