{"version":3,"sources":["UrlHelper.ts"],"names":[],"mappings":"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","file":"UrlHelper.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"UrlHelper\"/>\n\nimport * as _ from 'underscore';\n\nimport * as Utils from '../../Utilities/JavaScript/Utils';\n\n// @class UrlHelper Keeps track of the URL, triggering custom events to specific parameters.\n// Provides methods to add, get and remove parameters from the url.\n// Extends Utils and add this methods to underscore.\n// As an application module, when mounted to the application will listen to onAfterAppendView\n// and will update itself with the new url @extends ApplicationModule\nconst UrlBaseHelper: any = {\n    // @property {String} url\n    url: '',\n    // @property {Object} listeners\n    listeners: {},\n    // @property {Object} parameters\n    parameters: {},\n\n    // @method setUrl @param {String} url\n    setUrl: function(url: string) {\n        this.url = url;\n        this.parameters = {};\n\n        // for each of the listeners\n        _.each(this.listeners, (fn, token) => {\n            const parameter_value = this.getParameterValue(token);\n\n            // if the key (token) is in the url\n            if (parameter_value) {\n                // we trigger the function\n                const value = _.isFunction(fn) ? fn(parameter_value) : fn;\n\n                // if there is a value, we store it in our parameters object\n                if (value) {\n                    if (_.isBoolean(value)) {\n                        this.parameters[token] = parameter_value;\n                    } else {\n                        this.parameters[token] = value;\n                    }\n                }\n            }\n        });\n    },\n\n    // @method addTokenListener @param {String} token @param {Function} fn\n    addTokenListener: function(token, fn) {\n        this.listeners[token] = fn;\n    },\n\n    // @method getParameters @return {Object}\n    getParameters: function() {\n        return this.parameters;\n    },\n\n    // @method getParameterValue @param {String} parameter @return {String}\n    getParameterValue: function(parameter) {\n        const value = this.url.match(parameter + '{1}\\\\={1}(.*?[^&#]*)');\n\n        if (value && value[1]) {\n            return value[1];\n        }\n        return '';\n    },\n\n    // @method clearValues\n    clearValues: function() {\n        this.url = '';\n        this.listeners = {};\n        this.parameters = {};\n    },\n\n    // @module Utils @class Utils\n    // @method fixUrl added by UrlHelper @param {String} url\n    fixUrl: function(url: string): string {\n        if (!new RegExp('^http').test(url)) {\n            const parameters = UrlHelper.getParameters();\n            let charValue = '';\n            let value;\n\n            // for each of the parameters in the helper\n            _.each(parameters, function(i, parameter) {\n                value = url.match(new RegExp(parameter + '{1}\\\\={1}(.*?[^&]*)'));\n\n                // if the parameter is not in the url\n                if (!value) {\n                    charValue = ~url.indexOf('?') ? '&' : '?';\n                    // we append it\n                    url += charValue + parameter + '=' + parameters[parameter];\n                }\n            });\n        }\n\n        return url;\n    },\n\n    // @method setUrlParameter changes the value of a parameter in the url\n    // @param {String} url @param {String} parameter @param {String} new_value\n    setUrlParameter: function(url: string, parameter, new_value): string {\n        let value;\n        if (parameter) {\n            value = url.match(new RegExp(parameter + '{1}\\\\={1}(.*?[^(&|#)]*)'));\n        }\n\n        let charValue = '';\n\n        if (value) {\n            return url.replace(value[0], parameter + '=' + new_value);\n        }\n        charValue = ~url.indexOf('?') ? '&' : '?';\n        return url + charValue + parameter + '=' + new_value;\n    },\n\n    // @method removeUrlParameter @param {String} url @param {String} parameter\n    removeUrlParameter: function(url: string, parameter): string {\n        let base_url = url.split('?')[0];\n        let param;\n        let parameters_list = [];\n        const query = url.indexOf('?') !== -1 ? url.split('?')[1] : '';\n\n        if (query) {\n            parameters_list = query.split('&');\n\n            for (let i = parameters_list.length - 1; i >= 0; i -= 1) {\n                param = parameters_list[i].split('=')[0];\n\n                if (param === parameter) {\n                    parameters_list.splice(i, 1);\n                }\n            }\n\n            base_url = base_url + '?' + parameters_list.join('&');\n        }\n        return base_url;\n    },\n\n    removeUrlParameters: function(url: string, parameters): string {\n        _.each(parameters, parameter => {\n            url = this.removeUrlParameter(url, parameter);\n        });\n\n        return url;\n    }\n};\n\n_.mixin(Utils);\n\nexport type UrlHelper = any;\n\nexport const UrlHelper: any = _.extend(UrlBaseHelper, {\n    mountToApp: function(Application) {\n        Application.getLayout().on('afterAppendView', () => {\n            // Every time afterAppendView is called, we set the url to the helper\n            this.setUrl(window.location.href);\n        });\n    }\n});\n"]}