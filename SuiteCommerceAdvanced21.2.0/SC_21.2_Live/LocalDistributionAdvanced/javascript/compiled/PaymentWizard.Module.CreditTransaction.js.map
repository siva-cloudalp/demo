{"version":3,"sources":["PaymentWizard.Module.CreditTransaction.ts"],"names":[],"mappings":"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","file":"PaymentWizard.Module.CreditTransaction.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PaymentWizard.Module.CreditTransaction\"/>\n\nimport * as payment_wizard_credit_transaction_module_tpl from 'payment_wizard_credit_transaction_module.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { WizardStepModule } from '../../Wizard/JavaScript/Wizard.StepModule';\n\nimport EditAmountView = require('./PaymentWizard.EditAmount.View');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport RecordViewsSelectableActionableView = require('../../RecordViews/JavaScript/RecordViews.Selectable.View');\nimport PaymentWizardModuleCreditTransactionEditActionView = require('./PaymentWizard.Module.CreditTransaction.Edit.Action.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport LivePaymentModel = require('../../LivePayment/JavaScript/LivePayment.Model');\n\n// @class PaymentWizard.Module.CreditTransaction @extend Wizard.Module\nconst PaymentWizardModuleCreditTransaction: any = WizardStepModule.extend({\n    template: payment_wizard_credit_transaction_module_tpl,\n\n    className: 'PaymentWizard.Module.CreditTransaction',\n\n    events: {\n        'click [data-action=\"transaction\"]': 'toggleTransactionHandler',\n        'click [data-action=\"edit\"]': 'editTransaction'\n    },\n\n    initialize: function(options) {\n        this.transaction_type = options.transaction_type;\n        this.wizard = options.wizard;\n        this.livePaymentModel = LivePaymentModel.getInstance();\n        this.application = this.wizard.application;\n        this.addEventListeners();\n    },\n\n    isActive: function() {\n        const has_elements = !!this.wizard.model.get(\n            this.transaction_type === 'credit' ? 'credits' : 'deposits'\n        ).length;\n\n        if (this.transaction_type === 'deposit') {\n            return has_elements && SC.ENVIRONMENT.permissions.transactions.tranDepAppl >= 2;\n        }\n\n        return has_elements;\n    },\n\n    render: function() {\n        this.collection = this.wizard.model.get(\n            this.transaction_type === 'credit' ? 'credits' : 'deposits'\n        );\n        this._render();\n    },\n\n    addEventListeners: function() {\n        const self = this;\n\n        this.wizard.model.on('change:credits_total', function() {\n            self.render();\n        });\n        this.wizard.model.on('change:deposits_total', function() {\n            self.render();\n        });\n    },\n\n    toggleTransactionHandler: function(e) {\n        const $target = jQuery(e.currentTarget);\n\n        if ($target.hasClass('disabled')) {\n            return;\n        }\n        this.toggleTransaction($target.closest('[data-action=\"transaction\"]').data('id'));\n    },\n\n    toggleTransaction: function(transaction_id) {\n        const transaction = this.collection.get(transaction_id);\n\n        if (transaction) {\n            this[transaction.get('apply') ? 'unselectTransaction' : 'selectTransaction'](\n                transaction\n            );\n            this.render();\n        }\n    },\n\n    selectTransaction: function(transaction) {\n        if (transaction) {\n            transaction.set('checked', true);\n        }\n\n        if (this.transaction_type === 'credit') {\n            return this.livePaymentModel.selectCredit(transaction.id);\n        }\n        return this.livePaymentModel.selectDeposit(transaction.id);\n    },\n\n    unselectTransaction: function(transaction) {\n        if (transaction) {\n            transaction.set('checked', false);\n        }\n\n        if (this.transaction_type === 'credit') {\n            return this.livePaymentModel.unselectCredit(transaction.id);\n        }\n        return this.livePaymentModel.unselectDeposit(transaction.id);\n    },\n\n    editTransaction: function(e) {\n        const transaction_id = jQuery(e.target)\n            .parents('[data-action=\"transaction\"]')\n            .data('id');\n        const transaction = this.collection.get(transaction_id);\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.application.getLayout().showInModal(\n            new EditAmountView({\n                application: this.application,\n                parentView: this,\n                model: transaction,\n                type: this.transaction_type,\n                selectedInvoicesLength: this.wizard.model.getSelectedInvoices().length,\n                invoicesTotal: this.wizard.model.get('invoices_total')\n            }),\n            { application: this.application }\n        );\n    },\n\n    childViews: {\n        'Transaction.Collection': function() {\n            const positive_total = this.wizard.model.calculeTotal(true) > 0;\n\n            const transactions_to_show = this.collection.map(function(transaction) {\n                const is_checked = transaction.get('apply');\n\n                return new Backbone.Model({\n                    internalid: transaction.id,\n                    check: is_checked,\n                    active: is_checked || positive_total,\n                    navigable: false,\n\n                    url: '',\n                    title: (transaction.get('type') || '') + '#' + transaction.get('refnum'),\n\n                    actionType: 'transaction',\n\n                    columns: [\n                        {\n                            label: Utils.translate('Original Amount:'),\n                            type: 'currency',\n                            name: 'original-amount',\n                            value:\n                                transaction.get('remaining_formatted') !==\n                                transaction.get('total_formatted')\n                                    ? transaction.get('total_formatted')\n                                    : ' '\n                        },\n                        {\n                            label: Utils.translate('Remaining Amount:'),\n                            type: 'currency',\n                            name: 'remaining-amount',\n                            value: transaction.get('remaining_formatted')\n                        },\n                        {\n                            label: Utils.translate('Amount'),\n                            type: 'currency',\n                            name: 'amount',\n                            value: transaction.get('amount_formatted')\n                        }\n                    ]\n                });\n            });\n\n            return new BackboneCollectionView({\n                childView: RecordViewsSelectableActionableView,\n                viewsPerRow: 1,\n                collection: transactions_to_show,\n                childViewOptions: {\n                    actionView: PaymentWizardModuleCreditTransactionEditActionView\n                }\n            });\n        }\n    },\n\n    // @method getContext @return {PaymentWizard.Module.CreditTransaction.Context}\n    getContext: function() {\n        // @class PaymentWizard.Module.CreditTransaction.Context\n        return {\n            // @property {String} accordionId\n            accordionId: 'accordion-' + this.cid,\n            // @property {Boolean} isTransactionTypeCredit\n            isTransactionTypeCredit: this.transaction_type === 'credit',\n            // @property {Number} collectionLength\n            collectionLength: this.collection.length,\n            // @property {Boolean} areElementsCollapsed\n            areElementsCollapsed: !!Configuration.get('sca.collapseElements'),\n            // @property {String} totalFormatted\n            totalFormatted: this.wizard.model.get(\n                this.transaction_type === 'credit'\n                    ? 'credits_total_formatted'\n                    : 'deposits_total_formatted'\n            )\n        };\n    }\n});\n\nexport = PaymentWizardModuleCreditTransaction;\n"]}