{"version":3,"sources":["Cart.Confirmation.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAYF,OAAS,YAAY,CAAC,MAAM,CAAC;QACzB,gCAAgC;QAChC,QAAQ,EAAE,2BAA2B;QAErC,2BAA2B;QAC3B,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC;QAEvC,UAAU,EAAE,0BAA0B;QAEtC,iCAAiC;QACjC,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC;QAE7C,gCAAgC;QAChC,UAAU,EAAE;YACR,EAAE,EAAE,wBAAwB;YAC5B,KAAK,EAAE,oDAAoD;SAC9D;QAED,qBAAqB;QACrB,UAAU,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC/C,CAAC;QAED,OAAO,EAAE,SAAS,OAAO;YACrB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC;QAED,gCAAgC;QAChC,UAAU,EAAE;YACR,YAAY,EAAE;gBACV,OAAO,IAAI,6BAA6B,CAAC;oBACrC,KAAK,EAAE,IAAI,CAAC,KAAK;iBACpB,CAAC,CAAC;YACP,CAAC;YACD,sBAAsB,EAAE;gBACpB,OAAO,IAAI,uCAAuC,CAAC;oBAC/C,KAAK,EAAE,IAAI,CAAC,KAAK;iBACpB,CAAC,CAAC;YACP,CAAC;YACD,UAAU,EAAE;gBACR,OAAO,IAAI,kBAAkB,CAAC;oBAC1B,KAAK,EAAE,IAAI,CAAC,KAAK;iBACpB,CAAC,CAAC;YACP,CAAC;SACJ;QAED,qBAAqB;QACrB,2CAA2C;QAC3C,UAAU,EAAE;YACR,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAEpC,wCAAwC;YACxC,OAAO;gBACH,yCAAyC;gBACzC,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,uCAAuC;gBACvC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;gBACpC,mCAAmC;gBACnC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC;gBACpF,8BAA8B;gBAC9B,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC;aACpC,CAAC;QACN,CAAC;QAED,gCAAgC;KACnC,CAAC,CAAC","file":"Cart.Confirmation.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Cart.Confirmation.View\"/>\n\nimport * as cart_confirmation_modal_tpl from 'cart_confirmation_modal.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\n\nimport TransactionLineViewsPriceView = require('../../Transaction.Line.Views/JavaScript/Transaction.Line.Views.Price.View');\nimport TransactionLineViewsOptionsSelectedView = require('../../Transaction.Line.Views/JavaScript/Transaction.Line.Views.Options.Selected.View');\nimport ProductLineSkuView = require('../../ProductLine/JavaScript/ProductLine.Sku.View');\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\nexport = BackboneView.extend({\n    // @property {Function} template\n    template: cart_confirmation_modal_tpl,\n\n    // @property {String} title\n    title: Utils.translate('Added to Cart'),\n\n    modalClass: 'global-views-modal-large',\n\n    // @property {String} page_header\n    page_header: Utils.translate('Added to Cart'),\n\n    // @property {Object} attributes\n    attributes: {\n        id: 'Cart.Confirmation.View',\n        class: 'add-to-cart-confirmation-modal shopping-cart-modal'\n    },\n\n    // @method initialize\n    initialize: function() {\n        this.model.on('change', this.render, this);\n    },\n\n    destroy: function destroy() {\n        this.model.off('change', this.render, this);\n        this._destroy();\n    },\n\n    // @property {Object} childViews\n    childViews: {\n        'Line.Price': function() {\n            return new TransactionLineViewsPriceView({\n                model: this.model\n            });\n        },\n        'Line.SelectedOptions': function() {\n            return new TransactionLineViewsOptionsSelectedView({\n                model: this.model\n            });\n        },\n        'Line.Sku': function() {\n            return new ProductLineSkuView({\n                model: this.model\n            });\n        }\n    },\n\n    // @method getContext\n    // @return {Cart.Confirmation.View.Context}\n    getContext: function() {\n        const item = this.model.get('item');\n\n        // @class Cart.Confirmation.View.Context\n        return {\n            // @property {LiveOrder.Line.Model} model\n            model: this.model,\n            // @property {ImageContainer} thumbnail\n            thumbnail: this.model.getThumbnail(),\n            // @property {Boolean} showQuantity\n            showQuantity: item.get('_itemType') !== 'GiftCert' && this.model.get('quantity') > 0,\n            // @property {String} itemName\n            itemName: item.get('_name', true)\n        };\n    }\n\n    // @class Cart.Confirmation.View\n});\n"]}