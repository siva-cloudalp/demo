{"version":3,"sources":["Cart.Promocode.List.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAYF,OAAS,YAAY,CAAC,MAAM,CAAC;QACzB,gCAAgC;QAChC,QAAQ,EAAE,uBAAuB;QAEjC,MAAM,EAAE;YACJ,wCAAwC,EAAE,iBAAiB;SAC9D;QAED,qBAAqB;QACrB,+DAA+D;QAC/D,iBAAiB;QACjB,UAAU,EAAE,SAAS,UAAU;YAC3B,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;YAChE,IAAI,CAAC,yBAAyB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAC;YAE9E,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,kCAAkC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACrF,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,2BAA2B,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC/E,CAAC;QAED,OAAO,EAAE,SAAS,OAAO;YACrB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,kCAAkC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACtF,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAE5E,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC;QAED,kBAAkB,EAAE,SAAS,kBAAkB;YAC3C,mCAAmC;YACnC,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QACvC,CAAC;QAED,yBAAyB,EAAE,SAAS,yBAAyB;YACzD,0CAA0C;YAC1C,IAAI,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;QAC9C,CAAC;QAED,oEAAoE;QACpE,mHAAmH;QACnH,6HAA6H;QAC7H,2CAA2C;QAC3C,uBAAuB;QACvB,iBAAiB;QACjB,UAAU,EAAE,SAAS,UAAU,CAAC,OAAO;YACnC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;QAC7C,CAAC;QAED,8DAA8D;QAC9D,oBAAoB;QACpB,iBAAiB;QACjB,eAAe,EAAE,SAAS,eAAe,CAAC,CAAC;YACvC,CAAC,CAAC,cAAc,EAAE,CAAC;YAEnB,IAAM,qBAAqB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;YAEpF,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,qBAAqB,CAAC,CAAC;QACtD,CAAC;QAED,UAAU,EAAE;YACR,aAAa,EAAE;gBACX,OAAO,IAAI,sBAAsB,CAAC;oBAC9B,UAAU,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,UAAS,SAAc;wBAC5E,OAAO,SAAS,CAAC,UAAU,CAAC;oBAChC,CAAC,CAAC;oBACF,WAAW,EAAE,CAAC;oBACd,SAAS,EAAE,yBAAyB;oBACpC,gBAAgB,EAAE;wBACd,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU;wBACnC,MAAM,EAAE,SAAS;qBACpB;iBACJ,CAAC,CAAC;YACP,CAAC;SACJ;QAED,qBAAqB;QACrB,6CAA6C;QAC7C,UAAU,EAAE,SAAS,UAAU;YAC3B,0CAA0C;YAC1C,OAAO,EAAE,CAAC;YACV,kCAAkC;QACtC,CAAC;KACJ,CAAC,CAAC;;AAEH,qDAAqD;AACrD,oCAAoC;AACpC,iCAAiC","file":"Cart.Promocode.List.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Cart.Promocode.List.View\"/>\n\nimport * as _ from 'underscore';\nimport * as cart_promocode_list_tpl from 'cart_promocode_list.tpl';\n\nimport CartPromocodeListItemView = require('./Cart.Promocode.List.Item.View');\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport BackboneCollectionView = require('../../Backbone.CollectionView/JavaScript/Backbone.CollectionView');\n\n// @class Cart.Promocode.List.View @extend Backbone.View\nexport = BackboneView.extend({\n    // @property {Function} template\n    template: cart_promocode_list_tpl,\n\n    events: {\n        'click [data-action=\"remove-promocode\"]': 'removePromocode'\n    },\n\n    // @method initialize\n    // @param {Cart.Promocode.List.View.Initialize.Options} options\n    // @return {Void}\n    initialize: function initialize() {\n        this.removing_promocode = _.bind(this.removing_promocode, this);\n        this.remove_promocode_finished = _.bind(this.remove_promocode_finished, this);\n\n        this.model.cancelableOn('before:LiveOrder.removePromotion', this.removing_promocode);\n        this.model.on('remove_promocode_finished', this.remove_promocode_finished);\n    },\n\n    destroy: function destroy() {\n        this.model.cancelableOff('before:LiveOrder.removePromotion', this.removing_promocode);\n        this.model.off('remove_promocode_finished', this.remove_promocode_finished);\n\n        this._destroy();\n    },\n\n    removing_promocode: function removing_promocode() {\n        // @event {Void} removing_promocode\n        this.trigger('removing_promocode');\n    },\n\n    remove_promocode_finished: function remove_promocode_finished() {\n        // @event {Void} remove_promocode_finished\n        this.trigger('remove_promocode_finished');\n    },\n\n    // @method setOptions Allow changing the internal model and options.\n    // This is necessary as in some cases (Order wizard) the model from which the list of promocodes is read changes in\n    // the middle of the process. (In OrderWizard the read model is the instance of the LiveOrder.Model until the order is places\n    // and by some hacks another model is read)\n    // @param {Any} options\n    // @return {Void}\n    setOptions: function setOptions(options) {\n        this.options = options;\n        this.model = options.model || this.model;\n    },\n\n    // @method removePromocode Handles the remove promocode button\n    // @param {DOMEvent}\n    // @return {Void}\n    removePromocode: function removePromocode(e) {\n        e.preventDefault();\n\n        const promo_code_internalid = (this.$(e.currentTarget).data('id') || '').toString();\n\n        this.model.removePromotion(promo_code_internalid);\n    },\n\n    childViews: {\n        PromocodeList: function() {\n            return new BackboneCollectionView({\n                collection: _.filter(this.model.get('promocodes') || [], function(promocode: any) {\n                    return promocode.internalid;\n                }),\n                viewsPerRow: 1,\n                childView: CartPromocodeListItemView,\n                childViewOptions: {\n                    isReadOnly: this.options.isReadOnly,\n                    source: 'summary'\n                }\n            });\n        }\n    },\n\n    // @method getContext\n    // @return {Cart.Promocode.List.View.context}\n    getContext: function getContext() {\n        // @class Cart.Promocode.List.View.context\n        return {};\n        // @class Cart.Promocode.List.View\n    }\n});\n\n// @class Cart.Promocode.List.View.Initialize.Options\n// @property {LiveOrder.Model} model\n// @property {Boolean} isReadOnly\n"]}