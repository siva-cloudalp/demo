{"version":3,"sources":["LoginRegister.Register.View.ts"],"names":[],"mappings":"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","file":"LoginRegister.Register.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"LoginRegister.Register.View\"/>\n\nimport * as _ from 'underscore';\nimport * as register_tpl from 'login_register_register.tpl';\nimport { Loggers } from '../../../Commons/Loggers/JavaScript/Loggers';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\n\nimport AccountRegisterModel = require('../../Account/JavaScript/Account.Register.Model');\nimport Tracker = require('../../../Commons/Tracker/JavaScript/Tracker');\nimport LiveOrderModel = require('../../../Commons/LiveOrder/JavaScript/LiveOrder.Model');\nimport BackboneFormView = require('../../../Commons/Backbone.FormView/JavaScript/Backbone.FormView');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class LoginRegister.Register.View @extend BackboneView\nconst LoginRegisterRegisterView: any = BackboneView.extend({\n    template: register_tpl,\n\n    attributes: {\n        id: 'register'\n    },\n\n    title: Utils.translate('Register'),\n\n    events: {\n        'submit form': 'submitForm'\n    },\n\n    bindings: {\n        '[name=\"firstname\"]': 'firstname',\n        '[name=\"lastname\"]': 'lastname',\n        '[name=\"company\"]': 'company',\n        '[name=\"email\"]': 'email',\n        '[name=\"password\"]': 'password',\n        '[name=\"password2\"]': 'password2'\n    },\n\n    initialize: function(options) {\n        this.options = options;\n        this.application = options.application;\n        this.parentView = options.parentView;\n\n        this.model = options.model || new AccountRegisterModel();\n        // on save we redirect the user out of the registration page\n        // as we know there hasn't been an error\n        this.model.on('save', _.bind(this.redirect, this));\n\n        BackboneFormView.add(this);\n    },\n\n    submitForm: function(e, model, props) {\n        e.preventDefault();\n\n        const loggers = Loggers.getLogger();\n        const actionId = loggers.start('Customer Registration');\n\n        const self = this;\n        const data = (<any>jQuery(e.target).closest('form')).serializeObject();\n\n        return this.cancelableTrigger('before:LoginRegister.register', data).then(function() {\n            const promise = self.saveForm(e, model, props);\n\n            if (promise) {\n                promise.done(() => {\n                    loggers.end(actionId, {\n                        operationIds: self.model.getOperationIds(),\n                        status: 'success'\n                    });\n                });\n            }\n        });\n    },\n    beforeShowContent: function beforeShowContent() {\n        const promise = jQuery.Deferred();\n        const profileModel = ProfileModel.getInstance();\n\n        if (profileModel.get('isLoggedIn') === 'T' && profileModel.get('isGuest') === 'F') {\n            Backbone.history.navigate('', { trigger: true });\n\n            promise.reject();\n        } else {\n            promise.resolve();\n        }\n\n        return promise;\n    },\n\n    // @method trackEvent tracks the 'create-account' event using the global Tracker instance\n    // @param {Function} callback\n    trackEvent: function(callback: Function) {\n        Tracker.getInstance().trackRegister({\n            action: 'Checkout - User Interaction',\n            category: 'Register',\n            callback: callback\n        });\n    },\n\n    // @method redirect redirects the user after successful account registration taking into account redirect (origin and origin_hash) parameters.\n    // @param {Object} response the http response data object result of calling the account-register service.\n    redirect: function(_context, response) {\n        const self = this;\n        return this.cancelableTrigger('after:LoginRegister.register').then(function() {\n            const url_options = Utils.parseUrlOptions(window.location.search);\n            const { touchpoints } = response;\n            const { application } = self;\n\n            if (url_options.is && url_options.is === 'checkout') {\n                const profile_model = ProfileModel.getInstance();\n\n                response.user && profile_model.set(response.user);\n                response.cart && LiveOrderModel.getInstance().set(response.cart);\n                response.address && profile_model.get('addresses').reset(response.address);\n                response.paymentmethod &&\n                    profile_model.get('paymentmethods').reset(response.paymentmethod);\n\n                // Track Guest Checkout Event\n                self.trackEvent(function() {\n                    application.setConfig('currentTouchpoint', 'checkout');\n                    Backbone.history.navigate('', { trigger: true });\n                });\n            } else {\n                // Track Login Event\n                self.trackEvent(function() {\n                    // if we know from which touchpoint the user is coming from\n                    if (url_options.origin && touchpoints[url_options.origin]) {\n                        // we save the url to that touchpoint\n                        let url = touchpoints[url_options.origin];\n                        // if there is an specific hash\n                        if (url_options.origin_hash) {\n                            // we add it to the url as a fragment\n                            url = Utils.addParamsToUrl(url, { fragment: url_options.origin_hash });\n                        }\n                        window.location.href = url;\n                    } else {\n                        // We've got to disable passwordProtectedSite feature if customer registration is disabled.\n                        if (\n                            Configuration.getRegistrationType() !== 'disabled' &&\n                            SC.ENVIRONMENT.siteSettings.siteloginrequired === 'T'\n                        ) {\n                            window.location.href = touchpoints.home;\n                        } else {\n                            // otherwise we need to take it to the customer center\n                            window.location.href = touchpoints.customercenter;\n                        }\n                    }\n                });\n            }\n        });\n    },\n\n    // @method getContext @return {LoginRegister.Register.View.Context}\n    getContext: function() {\n        const url_options = Utils.parseUrlOptions(window.location.search);\n\n        // @class LoginRegister.Register.View.Context\n        return {\n            // @property {Boolean} showCompanyField\n            showCompanyField: SC.ENVIRONMENT.siteSettings.registration.showcompanyfield === 'T',\n            // @property {Boolean} isCompanyFieldRequire\n            isCompanyFieldRequire:\n                SC.ENVIRONMENT.siteSettings.registration.companyfieldmandatory === 'T',\n            // @property {Boolean} isEmailSubscribeChecked\n            isEmailSubscribeChecked:\n                this.options.isEmailSubscribeChecked ||\n                SC.ENVIRONMENT.siteSettings.defaultSubscriptionStatus,\n            // @property {String} siteName\n            siteName: SC.ENVIRONMENT.siteSettings.displayname,\n            // @property {Boolean} showFormFieldsOnly\n            showFormFieldsOnly: this.options.showFormFieldsOnly || false,\n            // @property {Boolean} isRedirect\n            isRedirect: !!(url_options.is !== 'checkout' && url_options.origin !== 'checkout'),\n            // @property {Boolean} hasAutoFocus\n            hasAutoFocus: url_options.is === 'register' && Utils.isDesktopDevice()\n        };\n    }\n    // @class LoginRegister.Register.View\n});\n\nexport = LoginRegisterRegisterView;\n"]}