{"version":3,"sources":["Subscriptions.Details.View.ts"],"names":[],"mappings":"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","file":"Subscriptions.Details.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Subscriptions.Details.View\"/>\n\nimport * as _ from 'underscore';\nimport * as subscriptions_details_tpl from 'subscriptions_details.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Loggers } from '../../../Commons/Loggers/JavaScript/Loggers';\nimport { SubscriptionLineView as SubscriptionLinesView } from './Subscriptions.Line.View';\nimport { SubscriptionsStatusView } from './Subscriptions.Status.View';\nimport { SubscriptionsModel } from './Subscriptions.Model';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { AjaxRequestsKiller } from '../../../Commons/AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\n\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport GlobalViewsConfirmationView = require('../../../Commons/GlobalViews/JavaScript/GlobalViews.Confirmation.View');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\nconst SubscriptionsDetailsView: any = BackboneView.extend({\n    template: subscriptions_details_tpl,\n\n    title: Utils.translate('My Subscriptions'),\n\n    page_header: Utils.translate('My Subscriptions'),\n\n    events: {\n        'click [data-action=\"goToAddOnsMarket\"]': 'goToAddOnsMarket',\n        'click [data-action=\"cancel-subscription\"]': 'cancel',\n        'click [data-action=\"reactivate-subscription\"]': 'reactivate'\n    },\n\n    attributes: {\n        id: 'Subscriptions',\n        class: 'Subscriptions'\n    },\n\n    initialize: function(options) {\n        this.application = options.application;\n        this.options = options;\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        const promise = jQuery.Deferred();\n        const loggersActionId = Loggers.getLogger().start('SUBSCRIPTIONS_DETAILS');\n        this.model = new SubscriptionsModel({ internalid: this.options.routerArguments[0] });\n        this.model\n            .fetch({\n                killerId: AjaxRequestsKiller.getKillerId()\n            })\n            .done(() => Loggers.getLogger().end(loggersActionId))\n            .always(() => promise.resolve());\n\n        return promise;\n    },\n    // @method getSelectedMenu @return {String}\n    getSelectedMenu: function() {\n        return 'subscriptions';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return [\n            {\n                text: this.title,\n                href: '/subscriptions-list'\n            },\n            {\n                text: this.model.get('name'),\n                href: `subscription/${this.model.get('internalid')}`\n            }\n        ];\n    },\n\n    goToAddOnsMarket: function() {\n        const subscription_id = this.model.get('internalid');\n        Backbone.history.navigate(`subscription/${subscription_id}/addons`, {\n            trigger: true\n        });\n    },\n    // @property {Object} childViews\n    childViews: {\n        StatusView: function() {\n            return new SubscriptionsStatusView({ status: this.model.getStatusLabel('status') });\n        },\n\n        'Optional.Lines.Collection': function() {\n            return new BackboneCollectionView({\n                childView: SubscriptionLinesView,\n                viewsPerRow: 1,\n                collection: this.model.get('optionalSubscriptionLines'),\n                childViewOptions: _.extend(this.options, {\n                    subscription: this.model\n                })\n            });\n        },\n        'Required.Lines.Collection': function() {\n            return new BackboneCollectionView({\n                childView: SubscriptionLinesView,\n                viewsPerRow: 1,\n                collection: this.model.get('requiredSubscriptionLines'),\n                childViewOptions: _.extend(this.options, {\n                    subscription: this.model\n                })\n            });\n        }\n    },\n    cancel: function(e) {\n        e.preventDefault();\n        const deleteConfirmationView = new GlobalViewsConfirmationView({\n            callBack: this._cancelSubscription,\n            callBackParameters: {\n                context: this\n            },\n            title: Utils.translate('Suspend Subscription'),\n            body: Utils.translate('Are you sure you want to suspend your subscription?'),\n            autohide: true\n        });\n        return this.application.getLayout().showInModal(deleteConfirmationView);\n    },\n    _cancelSubscription: function(options) {\n        const componentArea =\n            Configuration.get('subscriptions.generalStatusChange') === 'Allow Suspending / Resuming'\n                ? 'SUBSCRIPTIONS_PAUSED'\n                : 'SUBSCRIPTIONS_CANCELED';\n\n        const params = {\n            componentArea: componentArea\n        };\n\n        const loggersActionId = Loggers.getLogger().start(componentArea);\n        options.context.model.destroy().done(function() {\n            Loggers.getLogger().end(loggersActionId);\n            Backbone.history.navigate(\n                `subscription/${options.context.model.get('internalid')}`,\n                true\n            );\n        });\n    },\n    reactivate: function(e) {\n        e.preventDefault();\n        const deleteConfirmationView = new GlobalViewsConfirmationView({\n            callBack: this._reactivateSubscription,\n            callBackParameters: {\n                context: this\n            },\n            title: Utils.translate('Reactivate Subscription'),\n            body: Utils.translate('Please, confirm you want to reactivate this subscription'),\n            autohide: true\n        });\n        return this.application.getLayout().showInModal(deleteConfirmationView);\n    },\n    _reactivateSubscription: function(options) {\n        const loggersActionId = Loggers.getLogger().start('SUBSCRIPTIONS_RESUMED');\n        options.context.model.save().done(function() {\n            Loggers.getLogger().end(loggersActionId);\n            Backbone.history.navigate(\n                `subscription/${options.context.model.get('internalid')}`,\n                true\n            );\n        });\n    },\n    // @method getContext @return {Subscriptions.Details.View.Context}\n    getContext: function() {\n        // @class Subscriptions.List.View.Context\n        const subscriptionplan_name = this.model.get('name') || '';\n        const end_date = this.model.get('endDate') || Utils.translate('N/A');\n\n        return {\n            // @property {String} name\n            name: subscriptionplan_name,\n            // @property {Boolean} isOptionalLinesCountGreaterThan0\n            isOptionalLinesCountGreaterThan0:\n                this.model.get('optionalSubscriptionLines').length > 0,\n            // @property {Boolean} isRequiredLinesCountGreaterThan0\n            isRequiredLinesCountGreaterThan0:\n                this.model.get('requiredSubscriptionLines').length > 0,\n            // @property {Boolean} isNonIncludedLinesCountGreaterThan0\n            isNonIncludedLinesCountGreaterThan0:\n                this.model.get('nonIncludedLinesCollection').length > 0,\n            // @property {String} internalId\n            internalId: this.model.get('internalid'),\n            // @property {Boolean) hasNextBillCycleDate\n            hasNextBillCycleDate: !!this.model.get('nextBillCycleDate'),\n            // @property {String} nextBillCycleDate\n            nextBillCycleDate: this.model.get('nextBillCycleDate'),\n            // @property {Boolean} hasLastBillDate\n            hasLastBillDate: !!this.model.get('lastBillDate'),\n            // @property {String} lastBillDate\n            lastBillDate: this.model.get('lastBillDate'),\n            // @property {Boolean} hasStartDate\n            hasStartDate: !!this.model.get('startDate'),\n            // @property {String} startDate\n            startDate: this.model.get('startDate'),\n            // @property {String} endDate\n            endDate: end_date,\n            // @property {Boolean} canBeSuspended\n            canBeSuspended: this.model.get('canBeSuspended'),\n            // @property {Boolean} canBeReactivated\n            canBeReactivated: this.model.get('canBeReactivated'),\n            // @property {Boolean} hasNextRenewalStartDate\n            hasNextRenewalStartDate: !!this.model.get('nextRenewalStartDate'),\n            // @property {String} nextRenewalStartDate\n            nextRenewalStartDate: this.model.get('nextRenewalStartDate')\n        };\n    }\n});\n\nexport = SubscriptionsDetailsView;\n"]}