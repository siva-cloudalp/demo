{"version":3,"sources":["Loggers.Appender.Sensors.ts"],"names":[],"mappings":"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","file":"Loggers.Appender.Sensors.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Loggers.Appender.Sensors\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/GlobalDeclarations.d.ts\" />\n\nimport * as _ from 'underscore';\nimport { LoggersAppender } from '../../../Commons/Loggers/JavaScript/Loggers.Appender';\n\nimport { ItemTrack } from '../../../Commons/Instrumentation/JavaScript/APMTrackerParameters';\n\nimport { dataContractVersion } from './Logger.Appender.Sensor.DataContractVersion';\nimport { bundle } from './Loggers.Appender.Sensors.Bundle';\nimport { shopper } from './Loggers.Appender.Sensors.Shopper';\nimport { device } from './Loggers.Appender.Sensors.Device';\nimport { site } from './Loggers.Appender.Sensors.SiteData';\nimport { errorStatus } from './Loggers.Appender.Sensors.ErrorStatus';\nimport { customer } from './Loggers.Appender.Sensors.Customer';\nimport { cart } from './Loggers.Appender.Sensors.Cart';\nimport { cookieConsent, CookieConsentFormatted } from './Loggers.Appender.Sensors.CookieConsent';\n\ninterface LoggersOptions {\n    baseLabel: string;\n    buildNo: string;\n    bundleId: string;\n    bundleName: string;\n    bundleVersion: string;\n    currencyCode: string;\n    customerSessionStatus: string;\n    dateLabel: string;\n    device: string;\n    shopperInternalId: string;\n    siteUrl: string;\n    dataContractVersion: number;\n    shopperAnalyticsConsent?: CookieConsentFormatted;\n}\n\nexport interface NavigationLoggerOptionalsOptions {\n    searchQuery: string;\n    searchResultCount: number;\n    searchPageNumber: number;\n    itemId: number;\n    displayedInModal: true;\n}\n\ninterface StandardLoggerOptionsOptionals extends Partial<ItemTrack> {\n    operationIds: string[];\n    status: string;\n    transactionId?: number;\n    cartLines?: string;\n}\n\ninterface NavigationLoggersOptions\n    extends LoggersOptions,\n        Partial<NavigationLoggerOptionalsOptions> {\n    errorStatus: undefined | string;\n    siteFragment: string;\n    sitePage: string;\n    sitePageDisplayName: string;\n    showContentTime: number;\n}\n\ninterface StandardLoggersOptions extends LoggersOptions, StandardLoggerOptionsOptionals {\n    actionId: string;\n    cartLines: string;\n}\n\ntype LoggerEndOptions = Partial<NavigationLoggerOptionalsOptions> &\n    Partial<StandardLoggerOptionsOptionals>;\n\nexport class LoggersAppenderSensors implements LoggersAppender {\n    private static instance: LoggersAppenderSensors;\n\n    private NLRUM: any;\n\n    private firstTime: boolean = true;\n\n    private applicationStartTime: number;\n\n    private paramsMap = {};\n\n    private enabled = !SC.isPageGenerator();\n\n    private registerMap() {\n        this.paramsMap = {\n            status: {\n                key: 'status',\n                values: {\n                    success: this.NLRUM.status.completed,\n                    fail: this.NLRUM.status.incomplete,\n                    cancelled: this.NLRUM.status.cancelled\n                }\n            }\n        };\n    }\n\n    private mapParams(params: StandardLoggersOptions) {\n        const mapped = {};\n\n        _.mapObject(params, (value, key) => {\n            if (this.paramsMap[key]) {\n                mapped[this.paramsMap[key].key] =\n                    this.paramsMap[key].values && this.paramsMap[key].values[value]\n                        ? this.paramsMap[key].values[value]\n                        : value;\n            } else {\n                mapped[key] = value;\n            }\n        });\n\n        return mapped;\n    }\n\n    protected constructor() {\n        // don't execute in Page Generator\n        if (this.enabled) {\n            this.NLRUM = (<any>window).NLRUM;\n\n            if (this.NLRUM && this.NLRUM.addSCData) {\n                this.applicationStartTime = (<any>window).applicationStartTime;\n                this.NLRUM.setCommerceContext(this.NLRUM.commerceContext.SCA);\n                this.registerMap();\n            } else {\n                this.enabled = false;\n                console.log('nlRUM.js failed to load');\n            }\n        }\n    }\n\n    public ready() {\n        return this.enabled;\n    }\n\n    public info() {}\n\n    public error() {}\n\n    private startNavigation() {\n        if (this.applicationStartTime) {\n            const options: any = { action: 'Navigation' };\n            if (this.firstTime) {\n                this.firstTime = false;\n                options.startTime = this.applicationStartTime;\n            } else {\n                if (this.NLRUM.markIndirectStart) {\n                    this.NLRUM.markIndirectStart();\n                }\n\n                options.startTime = Date.now();\n            }\n            return options;\n        }\n    }\n\n    public start(action: string, _options: object) {\n        if (action === 'Navigation') {\n            return this.startNavigation();\n        }\n        const actionId = this.NLRUM.actionStart(action);\n        return { actionId };\n    }\n\n    private endNavigation(\n        options: Partial<NavigationLoggerOptionalsOptions> & { startTime: number }\n    ) {\n        if (this.applicationStartTime) {\n            const showContentTime = Date.now() - options.startTime;\n\n            const data: NavigationLoggersOptions = {\n                ...bundle(),\n                ...shopper(),\n                ...customer(),\n                ...device(),\n                ...site(),\n                ...errorStatus(),\n                ...dataContractVersion(),\n                shopperAnalyticsConsent: cookieConsent(),\n                showContentTime\n            };\n            if (options.itemId) {\n                data.itemId = options.itemId;\n            }\n            if (options.searchQuery) {\n                data.searchQuery = options.searchQuery;\n            }\n            if (options.searchResultCount !== undefined) {\n                data.searchResultCount = options.searchResultCount;\n            }\n            if (options.searchPageNumber !== undefined) {\n                data.searchPageNumber = options.searchPageNumber;\n            }\n            if (options.displayedInModal) {\n                data.displayedInModal = options.displayedInModal;\n            }\n            this.NLRUM.addSCData(data);\n        }\n    }\n\n    private extractOperationIds(options) {\n        if (_.isString(options.operationIds)) {\n            return [options.operationIds];\n        }\n        if (_.isArray(options.operationIds)) {\n            return options.operationIds.slice(0);\n        }\n        return [];\n    }\n\n    public end(dataStart, options?: LoggerEndOptions) {\n        if (dataStart.action === 'Navigation') {\n            dataStart = _.extend(dataStart, options);\n            this.endNavigation(dataStart);\n        } else {\n            const trackOptions: StandardLoggersOptions = {\n                actionId: dataStart.actionId,\n                operationIds: this.extractOperationIds(options),\n                status: options.status,\n                cartLines: options.cartLines || cart(),\n                ...shopper(),\n                ...bundle(),\n                ...site(),\n                ...customer(),\n                ...device(),\n                ...dataContractVersion(),\n                shopperAnalyticsConsent: cookieConsent()\n            };\n            if (options.itemId) {\n                trackOptions.itemId = options.itemId;\n            }\n            if (options.itemQuantity) {\n                trackOptions.itemQuantity = options.itemQuantity;\n            }\n            if (options.transactionId) {\n                trackOptions.transactionId = options.transactionId;\n            }\n            this.NLRUM.actionEnd(dataStart.actionId, this.mapParams(trackOptions));\n        }\n    }\n\n    public static getInstance() {\n        if (!LoggersAppenderSensors.instance) {\n            LoggersAppenderSensors.instance = new LoggersAppenderSensors();\n        }\n        return LoggersAppenderSensors.instance;\n    }\n}\n"]}