{"version":3,"sources":["Notifications.Order.Promocodes.View.ts"],"names":[],"mappings":"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","file":"Notifications.Order.Promocodes.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Notifications.Order.Promocodes.View\"/>\n// @module Notifications.Order.Promocodes.View\n\nimport * as notifications_order_promocodes from 'notifications_order_promocodes.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\n\nimport { GlobalViewsMessageView } from '../../GlobalViews/JavaScript/GlobalViews.Message.View';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class Notification.Order.Promocodes.View @extend Backbone.View\nconst NotificationsOrderPromocodesView: any = BackboneView.extend({\n    // @property {Function} template\n    template: notifications_order_promocodes,\n\n    // @method initialize\n    // @return {Void}\n    initialize: function initialize() {\n        this.on('afterCompositeViewRender', this.afterViewRender, this);\n    },\n\n    // @property {ChildViews} childViews\n    childViews: {\n        'Promocode.Notification': function() {\n            let notification;\n\n            if (this.model.get('type') === 'FREEGIFT' && !!this.model.get('freegiftinfo')) {\n                notification = this.getFreeGiftNotification(\n                    this.model.get('freegiftinfo')[0],\n                    this.model.get('freegiftinfo')[1]\n                );\n            } else {\n                notification = this.getNotification();\n            }\n\n            if (notification && notification.message && notification.type) {\n                return new GlobalViewsMessageView({\n                    message: notification.message,\n                    type: notification.type,\n                    closable: true\n                });\n            }\n        }\n    },\n\n    // @method afterViewRender lets parent model know the promotion\n    // already shwoed its current notification\n    // @return {Void}\n    afterViewRender: function() {\n        this.options.parentModel.trigger(\n            'promocodeNotificationShown',\n            this.model.get('internalid')\n        );\n    },\n\n    // @method getNotification\n    // @return {Notification}\n    getNotification: function() {\n        const notification: any = {};\n\n        if (this.model.get('applicabilitystatus') === 'APPLIED') {\n            notification.type = 'success';\n            notification.message = Utils.translate(\n                'Promotion <strong>$(0)</strong> is now discounting your order.',\n                this.model.get('code')\n            );\n        } else if (this.model.get('applicabilityreason') === 'CRITERIA_NOT_MET') {\n            notification.type = !this.model.get('isautoapplied') ? 'warning' : 'info';\n            notification.message = Utils.translate(\n                'Promotion <strong>$(0)</strong> is not discounting your order. $(1)',\n                this.model.get('code'),\n                this.model.get('errormsg')\n            );\n        } else if (this.model.get('applicabilityreason') === 'DISCARDED_BEST_OFFER') {\n            notification.type = 'info';\n            notification.message = Utils.translate(\n                'We have chosen the best possible offer for you. Promotion <strong>$(0)</strong> is not discounting your order.',\n                this.model.get('code')\n            );\n        }\n\n        return notification;\n    },\n\n    // @method getFreeGiftNotification\n    // @return {Notification}\n    getFreeGiftNotification: function(free_gift_info_old, free_gift_info_current) {\n        let gift_quantity;\n        let message_type;\n\n        if (!free_gift_info_old) {\n            gift_quantity = free_gift_info_current.added_quantity;\n            message_type = 'success';\n        } else if (!free_gift_info_current) {\n            gift_quantity = free_gift_info_old.added_quantity;\n            message_type = 'warning';\n        } else {\n            const qty_diff =\n                free_gift_info_current.added_quantity - free_gift_info_old.added_quantity;\n\n            if (qty_diff > 0) {\n                gift_quantity = qty_diff;\n                message_type = 'success';\n            } else {\n                gift_quantity = qty_diff * -1;\n                message_type = 'warning';\n            }\n        }\n\n        if (message_type && gift_quantity) {\n            return this.setFreeGifttNotificationText(message_type, gift_quantity);\n        }\n    },\n\n    setFreeGifttNotificationText: function(message_type, gift_quantity) {\n        const notification: any = {};\n\n        notification.type = message_type;\n\n        if (message_type === 'success') {\n            if (gift_quantity > 1) {\n                notification.message = Utils.translate(\n                    'Congratulations! $(0) FREE $(1) were added to your cart.',\n                    gift_quantity,\n                    this.model.get('freegiftname')\n                );\n            } else {\n                notification.message = Utils.translate(\n                    'Congratulations! $(0) FREE $(1) was added to your cart.',\n                    gift_quantity,\n                    this.model.get('freegiftname')\n                );\n            }\n        } else if (message_type === 'warning') {\n            const errormsg = this.model.get('errormsg') ? this.model.get('errormsg') : '';\n\n            if (gift_quantity > 1) {\n                notification.message = Utils.translate(\n                    '$(0) $(1) were removed from your cart. $(2)',\n                    gift_quantity,\n                    this.model.get('freegiftname'),\n                    errormsg\n                );\n            } else {\n                notification.message = Utils.translate(\n                    '$(0) $(1) was removed from your cart. $(2)',\n                    gift_quantity,\n                    this.model.get('freegiftname'),\n                    errormsg\n                );\n            }\n        }\n\n        return notification;\n    },\n\n    // @method getContext\n    // @return {Notifications.Order.Promocodes.View.context}\n    getContext: function getContext() {\n        // @class Notifications.Order.Promocodes.View.context\n        return {};\n        // @class Notifications.Order.Promocodes.View\n    }\n});\n\nexport = NotificationsOrderPromocodesView;\n"]}