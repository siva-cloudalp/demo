{"version":3,"sources":["SocialSharing.Plugins.Pinterest.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IASF,4DAA4D;IAC5D,IAAM,eAAe,GAAQ;QACzB,oBAAoB,EAAE,IAAI;QAC1B,2BAA2B;QAC3B,oDAAoD;QACpD,sCAAsC;QACtC,gBAAgB,EAAE,UAAS,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE,aAAa;YAC7D,IAAM,oBAAoB,GAAG,IAAI,CAAC,+BAA+B,CAC7D,aAAa,IAAI,6BAAa,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAC/D,CAAC;YACF,IAAM,UAAU,GACZ,8CAA8C;gBAC9C,kBAAkB,CAAC,GAAG,CAAC;gBACvB,SAAS;gBACT,kBAAkB,CAAC,KAAK,CAAC;gBACzB,eAAe;gBACf,kBAAkB,CAAC,WAAW,CAAC,CAAC;YAEpC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,oBAAoB,CAAC,CAAC;QACxE,CAAC;QAED,wCAAwC;QACxC,kEAAkE;QAClE,6BAA6B,EAAE,UAAS,CAAC;YACrC,CAAC,CAAC,cAAc,EAAE,CAAC;YAEnB,IAAM,gBAAgB,GAAG,6BAAa,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAC/D,IAAM,GAAG,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAM,KAAK,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;YACjD,IAAM,KAAK,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;YAEjD,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC;QAED,UAAU,EAAE,UAAS,WAAW;YAC5B,IAAI,6BAAa,CAAC,GAAG,CAAC,wBAAwB,CAAC,EAAE;gBAC7C,IAAM,MAAM,GAAG,WAAW,CAAC,SAAS,EAAE,CAAC;gBAEvC,iFAAiF;gBACjF,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE;oBACb,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;iBAC1C,CAAC,CAAC;gBAEH,wCAAwC;gBACxC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;oBACpB,0CAA0C,EAAE,IAAI,CAAC,6BAA6B;iBACjF,CAAC,CAAC;gBAEH,wDAAwD;gBACxD,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC;oBAClC,IAAI,EAAE,iBAAiB;oBACvB,QAAQ,EAAE,EAAE;oBACZ,OAAO,EAAE,UAAS,WAAW;wBACzB,IAAM,MAAM,GAAG,WAAW,CAAC,SAAS,EAAE,CAAC;wBAEvC,MAAM,CAAC,GAAG;6BACL,IAAI,CAAC,kCAAkC,CAAC;6BACxC,MAAM,CACH,gMAAgM,CACnM,CAAC;oBACV,CAAC;iBACJ,CAAC,CAAC;aACN;QACL,CAAC;KACJ,CAAC;IAEF,OAAS,eAAe,CAAC","file":"SocialSharing.Plugins.Pinterest.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"SocialSharing.Plugins.Pinterest\"/>\n\nimport * as _ from 'underscore';\nimport { Configuration } from '../../../Commons/Utilities/JavaScript/Configuration';\n\nimport SocialSharing = require('./SocialSharing');\n\n// @class SocialSharing.Pinterest @extends ApplicationModule\nconst pinterestPlugin: any = {\n    excludeFromMyAccount: true,\n    // @method shareInPinterest\n    // opens a new window to share the page in Pinterest\n    // based on some configuration options\n    shareInPinterest: function(url, image, description, popup_options) {\n        const popup_options_string = this.getPopupOptionsStringFromObject(\n            popup_options || Configuration.get('pinterest.popupOptions')\n        );\n        const target_url =\n            'http://pinterest.com/pin/create/button/?url=' +\n            encodeURIComponent(url) +\n            '&media=' +\n            encodeURIComponent(image) +\n            '&description=' +\n            encodeURIComponent(description);\n\n        window.open(target_url, _.uniqueId('window'), popup_options_string);\n    },\n\n    // @method shareInPinterestEventListener\n    // calls shareInPinterest method passing the configuration options\n    shareInPinterestEventListener: function(e) {\n        e.preventDefault();\n\n        const metaTagMappingOg = Configuration.get('metaTagMappingOg');\n        const url = metaTagMappingOg['og:url'](this);\n        const image = metaTagMappingOg['og:image'](this);\n        const title = metaTagMappingOg['og:title'](this);\n\n        this.shareInPinterest(url, image, title);\n    },\n\n    mountToApp: function(application) {\n        if (Configuration.get('pinterest.enableButton')) {\n            const layout = application.getLayout();\n\n            // This are mostly related to the dom, or to events, so we add them in the layout\n            _.extend(layout, {\n                shareInPinterest: this.shareInPinterest\n            });\n\n            // extend Layout and add event listeners\n            _.extend(layout.events, {\n                'click [data-action=\"share-in-pinterest\"]': this.shareInPinterestEventListener\n            });\n\n            // @class SocialSharing.Pinterest.Plugin @extends Plugin\n            SocialSharing.afterAppendView.install({\n                name: 'pinterestPlugin',\n                priority: 10,\n                execute: function(application) {\n                    const layout = application.getLayout();\n\n                    layout.$el\n                        .find('[data-type=\"social-share-icons\"]')\n                        .append(\n                            '<a href=\"#\" class=\"social-sharing-flyout-content-social-pinterest\" data-action=\"share-in-pinterest\"><i class=\"social-sharing-flyout-content-social-pinterest-icon\"></i> <span>Pinit</span></a>'\n                        );\n                }\n            });\n        }\n    }\n};\n\nexport = pinterestPlugin;\n"]}