{"version":3,"sources":["OrderWizard.Module.PromocodeNotifications.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAcF,OAAS,oCAAgB,CAAC,MAAM,CAAC;QAC7B,gCAAgC;QAChC,QAAQ,EAAE,uCAAuC;QAEjD,qBAAqB;QACrB,UAAU,EAAE,SAAS,UAAU;YAC3B,oCAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAE7D,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;gBACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBAE7D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAChB,4BAA4B,EAC5B,IAAI,CAAC,2BAA2B,EAChC,IAAI,CACP,CAAC;aACL;QACL,CAAC;QAED,QAAQ,EAAE,SAAS,QAAQ;YACvB,OAAO,CAAC,iBAAiB,IAAI,CAAC,CAAC,uCAAuC,CAAC;QAC3E,CAAC;QAED,MAAM,EAAE;YACJ,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;gBACjB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;oBACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,OAAO,EAAE,CAAC;iBAClB;gBAED,IAAM,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,UACnE,SAAc;oBAEd,OAAO,SAAS,CAAC,YAAY,KAAK,IAAI,CAAC;gBAC3C,CAAC,CAAC,CAAC;gBAEH,IAAI,UAAU,CAAC,MAAM,EAAE;oBACnB,IAAM,uBAAuB,GAAG,IAAI,sBAAsB,CAAC;wBACvD,UAAU,EAAE,UAAU;wBACtB,WAAW,EAAE,CAAC;wBACd,SAAS,EAAE,8BAA8B;wBACzC,gBAAgB,EAAE;4BACd,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK;yBACjC;qBACJ,CAAC,CAAC;oBAEH,uBAAuB,CAAC,MAAM,EAAE,CAAC;oBAEjC,MAAM,CAAC,uCAAuC,CAAC,CAAC,IAAI,CAChD,uBAAuB,CAAC,GAAG,CAAC,IAAI,EAAE,CACrC,CAAC;iBACL;aACJ;QACL,CAAC;QAED,sCAAsC;QACtC,6BAA6B;QAC7B,iBAAiB;QACjB,2BAA2B,EAAE,UAAS,YAAY;YAC9C,IAAM,SAAS,GAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;gBACpE,UAAU,EAAE,YAAY;aAC3B,CAAC,CAAC;YAEH,OAAO,SAAS,CAAC,YAAY,CAAC;QAClC,CAAC;QAED,qBAAqB;QACrB,+DAA+D;QAC/D,UAAU,EAAE,SAAS,UAAU;YAC3B,2DAA2D;YAC3D,OAAO,EAAE,CAAC;YACV,mDAAmD;QACvD,CAAC;KACJ,CAAC,CAAC","file":"OrderWizard.Module.PromocodeNotifications.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"OrderWizard.Module.PromocodeNotifications\"/>\n\nimport * as _ from 'underscore';\nimport * as order_wizard_promocodenotifications_tpl from 'order_wizard_promocodenotifications.tpl';\nimport * as notifications_tpl from 'notifications.tpl';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { WizardStepModule } from '../../Wizard/JavaScript/Wizard.StepModule';\n\nimport CartPromocodeNotificationsView = require('../../../Commons/Cart/JavaScript/Cart.Promocode.Notifications.View');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\n\n// @class OrderWizard.Module.PromocodeNotifications @extends Wizard.Module\nexport = WizardStepModule.extend({\n    // @property {Function} template\n    template: order_wizard_promocodenotifications_tpl,\n\n    // @method initialize\n    initialize: function initialize() {\n        WizardStepModule.prototype.initialize.apply(this, arguments);\n\n        if (this.isActive()) {\n            this.wizard.model.on('change:promocodes', this.render, this);\n\n            this.wizard.model.on(\n                'promocodeNotificationShown',\n                this.removePromocodeNotification,\n                this\n            );\n        }\n    },\n\n    isActive: function isActive(): boolean {\n        return !notifications_tpl && !!order_wizard_promocodenotifications_tpl;\n    },\n\n    render: function() {\n        if (this.isActive()) {\n            if (!this.was_rendered) {\n                this.was_rendered = true;\n                this._render();\n            }\n\n            const promocodes = _.filter(this.wizard.model.get('promocodes') || [], function(\n                promocode: any\n            ) {\n                return promocode.notification === true;\n            });\n\n            if (promocodes.length) {\n                const message_collection_view = new BackboneCollectionView({\n                    collection: promocodes,\n                    viewsPerRow: 1,\n                    childView: CartPromocodeNotificationsView,\n                    childViewOptions: {\n                        parentModel: this.wizard.model\n                    }\n                });\n\n                message_collection_view.render();\n\n                jQuery('[data-type=\"Promocode.Notifications\"]').html(\n                    message_collection_view.$el.html()\n                );\n            }\n        }\n    },\n\n    // @method removePromocodeNotification\n    // @param String promocode_id\n    // @return {Void}\n    removePromocodeNotification: function(promocode_id) {\n        const promocode: any = _.findWhere(this.wizard.model.get('promocodes'), {\n            internalid: promocode_id\n        });\n\n        delete promocode.notification;\n    },\n\n    // @method getContext\n    // @returns {OrderWizard.Module.PromocodeNotifications.Context}\n    getContext: function getContext() {\n        // @class OrderWizard.Module.PromocodeNotifications.Context\n        return {};\n        // @class OrderWizard.Module.PromocodeNotifications\n    }\n});\n"]}