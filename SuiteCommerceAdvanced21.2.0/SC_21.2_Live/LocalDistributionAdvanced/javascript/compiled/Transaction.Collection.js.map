{"version":3,"sources":["Transaction.Collection.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAUF,IAAM,qBAAqB,GAAQ,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC;QAC1D,sCAAsC;QACtC,KAAK,EAAE,gBAAgB;QAEvB,uGAAuG;QACvG,YAAY,EAAE,KAAK;QACnB,sBAAsB;QACtB,UAAU,EAAE;YACR,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAM,MAAI,GAAG,IAAI,CAAC;gBAElB,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,UAAS,EAAE,EAAE,IAAI;oBACxC,MAAI,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBACrD,CAAC,CAAC,CAAC;aACN;QACL,CAAC;QAED,yBAAyB;QACzB,GAAG,EAAE,iCAAiC;QAEtC,gGAAgG;QAChG,0CAA0C;QAC1C,kDAAkD;QAClD,iDAAiD;QACjD,KAAK,EAAE,UAAS,QAAQ;YACpB,IAAI,QAAQ,CAAC,IAAI,EAAE;gBACf,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,iBAAiB,CAAC;gBACpD,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;gBAC9C,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC1B,OAAO,QAAQ,CAAC,OAAO,CAAC;aAC3B;YACD,OAAO,QAAQ,CAAC;QACpB,CAAC;QAED,iBAAiB;QACjB,wDAAwD;QACxD,iBAAiB;QACjB,MAAM,EAAE,UAAS,OAAO;YACpB,8CAA8C;YAC9C,+BAA+B;YAC/B,IAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;YAElC,IAAI,CAAC,KAAK,CAAC;gBACP,IAAI,EAAE;oBACF,mCAAmC;oBACnC,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK;oBAC9C,iCAAiC;oBACjC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK;oBACxB,4BAA4B;oBAC5B,KAAK,EAAE,OAAO,CAAC,KAAK;oBACpB,IAAI,EAAE,KAAK,CAAC,IAAI;oBAChB,EAAE,EAAE,KAAK,CAAC,EAAE;oBACZ,2BAA2B;oBAC3B,IAAI,EAAE,OAAO,CAAC,IAAI;iBACrB;gBACD,KAAK,EAAE,IAAI;gBACX,+BAA+B;gBAC/B,QAAQ,EAAE,OAAO,CAAC,QAAQ;aAC7B,CAAC,CAAC;QACP,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,qBAAqB,CAAC","file":"Transaction.Collection.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Transaction.Collection\"/>\n\nimport * as _ from 'underscore';\n\nimport TransactionModel = require('./Transaction.Model');\nimport Backbone = require('../../Utilities/JavaScript/backbone.custom');\nimport BackboneCachedSync = require('../../BackboneExtras/JavaScript/Backbone.CachedSync');\n\nconst TransactionCollection: any = Backbone.Collection.extend({\n    // @property {Transaction.Model} model\n    model: TransactionModel,\n\n    // @property {Boolean} cacheSupport enable or disable the support for cache (Backbone.CachedCollection)\n    cacheSupport: false,\n    // @method  initialize\n    initialize: function() {\n        if (this.cacheSupport) {\n            const self = this;\n\n            _.each(BackboneCachedSync, function(fn, name) {\n                self[name === 'cachedSync' ? 'sync' : name] = fn;\n            });\n        }\n    },\n\n    // @property {String} url\n    url: 'services/Transaction.Service.ss',\n\n    // @method parse Transform the JSON response to extract away the array of model from the correct\n    // response as to know what page is loaded\n    // @param {Transaction.Model.List.Result} response\n    // @return {Transaction.Model.List.Result.Record}\n    parse: function(response) {\n        if (response.page) {\n            this.totalRecordsFound = response.totalRecordsFound;\n            this.recordsPerPage = response.recordsPerPage;\n            this.page = response.page;\n            return response.records;\n        }\n        return response;\n    },\n\n    // @method update\n    // @param {Transaction.Collection.UpdateOptions} options\n    // @return {Void}\n    update: function(options) {\n        // @class Transaction.Collection.UpdateOptions\n        // @property {DateRange?} range\n        const range = options.range || {};\n\n        this.fetch({\n            data: {\n                // @property {value:String?} filter\n                filter: options.filter && options.filter.value,\n                // @property {value:String?} sort\n                sort: options.sort.value,\n                // @property {String?} order\n                order: options.order,\n                from: range.from,\n                to: range.to,\n                // @property {String?} page\n                page: options.page\n            },\n            reset: true,\n            // @property {String?} killerId\n            killerId: options.killerId\n        });\n    }\n});\n\nexport = TransactionCollection;\n"]}