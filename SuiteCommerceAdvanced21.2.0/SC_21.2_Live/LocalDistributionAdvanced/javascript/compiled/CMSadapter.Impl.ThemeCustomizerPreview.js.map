{"version":3,"sources":["CMSadapter.Impl.ThemeCustomizerPreview.ts"],"names":[],"mappings":"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","file":"CMSadapter.Impl.ThemeCustomizerPreview.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CMSadapter.Impl.ThemeCustomizerPreview\"/>\n/// <reference path=\"./CMS.d.ts\" />\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { Url } from '../../../Commons/Utilities/JavaScript/Url';\nimport { Environment } from '../../../Commons/Core/JavaScript/Environment';\n\nimport Sass = require('../../../Commons/Utilities/JavaScript/Sass');\n\nconst EDITABLE_REGEX = /\\/\\*\\s+<<\\s+var:([^\\s]+)\\s+\\*\\/\\s+([^\\/]+)\\s+\\/\\*\\s+>>\\s+\\*\\//gi;\nconst ESCAPED_INTERPOLATION_REGEX = /\\\\#{/gi;\nconst VARIABLE_REGEX = /\\$[A-Za-z0-9_-]*|([_a-zA-Z][A-Za-z0-9_-]*)\\s*\\(/g;\nconst FUNCTION_WHITELIST = [\n    'rgb',\n    'rgba',\n    'red',\n    'green',\n    'blue',\n    'mix',\n    'hsl',\n    'hsla',\n    'hue',\n    'saturation',\n    'lightness',\n    'adjust-hue',\n    'lighten',\n    'darken',\n    'saturate',\n    'desaturate',\n    'grayscale',\n    'complement',\n    'invert',\n    'alpha',\n    'rgba',\n    'opacify',\n    'transparentize',\n    'adjust-color',\n    'scale-color',\n    'change-color',\n    'ie-hex-str',\n    'unquote',\n    'quote',\n    'str-length',\n    'str-insert',\n    'str-index',\n    'str-slice',\n    'to-upper-case',\n    'to-lower-case',\n    'percentage',\n    'round',\n    'ceil',\n    'floor',\n    'abs',\n    'min',\n    'max',\n    'random',\n    'length',\n    'nth',\n    'set-nth',\n    'join',\n    'append',\n    'zip',\n    'index',\n    'list-separator',\n    'is-bracketed',\n    'map-get',\n    'map-merge',\n    'map-remove',\n    'map-keys',\n    'map-values',\n    'map-has-key',\n    'keywords',\n    'selector-nest',\n    'selector-append',\n    'selector-extend',\n    'selector-replace',\n    'selector-unify',\n    'is-superselector',\n    'simple-selectors',\n    'selector-parse',\n    'feature-exists',\n    'variable-exists',\n    'global-variable-exists',\n    'function-exists',\n    'mixin-exists',\n    'content-exists',\n    'inspect',\n    'type-of',\n    'unit',\n    'unit-less',\n    'comprable',\n    'call',\n    'get-function',\n    'if',\n    'unique-id',\n    'fade_in',\n    'expression',\n    'calc'\n];\nconst URL_REGEX = /url\\(([^)]+)(\\))/g;\ninterface Variable {\n    expr: string;\n    derived: Variable[];\n    name: string;\n    editable: true;\n    parents?: { [variableName: string]: true };\n    nonCompilable?: true;\n    defaultValue?: string;\n}\ninterface VariablesValue {\n    [variableName: string]: string;\n}\nexport class CMSAdapterImplThemeCustomizerPreview {\n    private applicationName: string;\n\n    private CMS: any;\n\n    private sassCompiler: any;\n\n    private previewCSS: string;\n\n    private originalPreviewCSS: string;\n\n    private originalChangedVariables;\n\n    private completeSetOfVariablesInOrder: Variable[];\n\n    private readonly variablesByName: { [varName: string]: Variable } = {};\n\n    private toProcess: any;\n\n    private isCompiling: boolean;\n\n    private stylesheetHref: string;\n\n    private reloadCSSRequestId: any;\n\n    private compileEndpoint: any;\n\n    private saveEndpoint: any;\n\n    private skinsEndpoint: any;\n\n    public constructor(application, CMS) {\n        this.applicationName = application.getName();\n        Sass.setWorkerUrl(Utils.getAbsoluteUrl('javascript/sass.worker.js'));\n        this.CMS = CMS;\n        this.sassCompiler = null;\n        this.previewCSS = '';\n        this.originalPreviewCSS = '';\n        this.originalChangedVariables = {};\n        // Ordered list, if element A depends of B, A will appear first\n        this.completeSetOfVariablesInOrder = [];\n        this.toProcess = null;\n        this.isCompiling = false;\n        // URL of the css with the metadata\n        this.stylesheetHref = '';\n        // variables used to synchronize CSS reloading\n        this.reloadCSSRequestId = null;\n        this.listenForCMS();\n    }\n\n    public listenForCMS() {\n        const SC = Environment.getSC();\n        if (SC.ENVIRONMENT.isExtended && SC.ENVIRONMENT.embEndpointUrl) {\n            this.CMS.on('theme:config:get', (promise: CMSPromise) => {\n                this.loadPreviewEnvironment(\n                    CMSAdapterImplThemeCustomizerPreview.wrapForLogging(promise)\n                );\n            });\n            this.CMS.on('theme:styles:overrideCss', (promise: CMSPromise, changedVariables) => {\n                if (_.size(changedVariables) > 0) {\n                    this.toProcess = {\n                        promise: CMSAdapterImplThemeCustomizerPreview.wrapForLogging(promise),\n                        changedVariables: changedVariables\n                    };\n                    this.previewChangedVariables();\n                } else {\n                    // Restore theme defaults\n                    this.restoreThemeDefaults(\n                        CMSAdapterImplThemeCustomizerPreview.wrapForLogging(promise)\n                    );\n                }\n            });\n            this.CMS.on('theme:styles:save', (promise: CMSPromise, changedVariables, skinId) => {\n                this.saveThemeStyles(\n                    CMSAdapterImplThemeCustomizerPreview.wrapForLogging(promise),\n                    changedVariables,\n                    skinId\n                );\n            });\n            this.CMS.on('theme:styles:revertCss', (promise: CMSPromise) => {\n                // cancel button click\n                this.themeRevertCss(CMSAdapterImplThemeCustomizerPreview.wrapForLogging(promise));\n            });\n            this.CMS.on('theme:skins:add', (promise: CMSPromise, skin) => {\n                this.addSkin(CMSAdapterImplThemeCustomizerPreview.wrapForLogging(promise), skin);\n            });\n            this.CMS.on('theme:skins:remove', (promise: CMSPromise, skinId) => {\n                this.removeSkin(\n                    CMSAdapterImplThemeCustomizerPreview.wrapForLogging(promise),\n                    skinId\n                );\n            });\n            this.CMS.on('theme:skins:edit', (promise: CMSPromise, skin) => {\n                this.editSkin(CMSAdapterImplThemeCustomizerPreview.wrapForLogging(promise), skin);\n            });\n        }\n    }\n\n    /**\n     * By calling this method the sass.js compiler is going to be loaded as well as\n     * the css+metadata for the current application(shopping, my account, checkout)\n     * This method should be triggered when SMT admin is opened\n     **/\n    private loadPreviewEnvironment(promise) {\n        // Prevent to get the css url when edition is canceled\n        if (!this.stylesheetHref) {\n            this.setStylesheetHref();\n        }\n        let loadedCSS;\n        const self = this;\n        // Load and add the css with metadata to the DOM\n        const variablesCalculatedValuePromise = jQuery\n            .ajax({\n                url: self.stylesheetHref,\n                dataType: 'text'\n            })\n            .then(function(css) {\n                loadedCSS = css;\n                const variablesMetadata = CMSAdapterImplThemeCustomizerPreview.extractVariablesMetadata(\n                    css\n                );\n                self.completeSetOfVariablesInOrder = self.identifyNonCompilableVariables(\n                    self.getDependenciesInOrder(variablesMetadata.values)\n                );\n                self.setVariablesByName();\n                self.setVariablesParent(self.completeSetOfVariablesInOrder);\n                return variablesMetadata;\n            });\n        const SC = Environment.getSC();\n        const themeDataPromise = jQuery\n            .ajax(SC.ENVIRONMENT.embEndpointUrl)\n            .then(function(themeData) {\n                self.saveEndpoint = themeData.saveEndpoint;\n                self.compileEndpoint = themeData.compileEndpoint;\n                self.skinsEndpoint = themeData.skinsEndpoint;\n                return themeData;\n            });\n        jQuery\n            .when(variablesCalculatedValuePromise, themeDataPromise)\n            .then(function(variablesMetadata, themeData) {\n                const areEditableVariables = _.findWhere(self.completeSetOfVariablesInOrder, {\n                    editable: true\n                });\n                if (areEditableVariables) {\n                    self.applyLoadedCSS(loadedCSS, themeData.editedSettings)\n                        .then(function(calculatedVariablesValue) {\n                            // Used if theme edition is canceled\n                            self.originalPreviewCSS = self.previewCSS;\n                            self.originalChangedVariables = themeData.editedSettings;\n                            // Remove defaults css from the dom, all stylesheets in the header are\n                            // going to be removed\n                            self.removeDefaultStyles();\n                            const themeSettings: ThemeSettings = {\n                                skins: themeData.skins,\n                                userSkins: themeData.userSkins,\n                                formData: {\n                                    values: variablesMetadata.values,\n                                    structure: variablesMetadata.groups,\n                                    warnings: variablesMetadata.warnings\n                                },\n                                editedSettings: themeData.editedSettings,\n                                currentSettings: calculatedVariablesValue\n                            };\n                            const activeSkin: Skin = _.find(\n                                themeData.userSkins,\n                                (skin: any) => skin.current === true\n                            );\n                            if (activeSkin) {\n                                themeSettings.skinId = activeSkin.id;\n                            }\n                            promise.resolve(themeSettings);\n                        })\n                        .fail(function(error) {\n                            promise.reject({\n                                errors: `Error loading or processing metadata. Details: ${JSON.stringify(\n                                    error\n                                )}`\n                            });\n                        });\n                } else {\n                    // if there are not editable variables, the theme is not editable\n                    promise.resolve({});\n                }\n            })\n            .fail(function(error) {\n                promise.reject({\n                    errors: `Error loading or processing metadata. Details: ${JSON.stringify(\n                        error\n                    )}`\n                });\n            });\n    }\n\n    private setVariablesParent(variables: Variable[], parent?: string): void {\n        variables.forEach(variable => {\n            if (parent) {\n                if (!this.variablesByName[variable.name].parents) {\n                    this.variablesByName[variable.name].parents = {};\n                }\n                this.variablesByName[variable.name].parents[parent] = true;\n            }\n            if (variable.derived) {\n                this.setVariablesParent(variable.derived, variable.name);\n            }\n        });\n    }\n\n    private setVariablesByName(): void {\n        for (let i = this.completeSetOfVariablesInOrder.length - 1; i >= 0; i--) {\n            const variable = this.completeSetOfVariablesInOrder[i];\n            this.variablesByName[variable.name] = variable;\n        }\n    }\n\n    private themeRevertCss(promise): void {\n        this.discardReload();\n        this.applyLoadedCSS(this.originalPreviewCSS, this.originalChangedVariables)\n            .then(promise.resolve)\n            .fail(function(error) {\n                promise.reject({\n                    errors: `Error reverting the changes. Details: ${JSON.stringify(error)}`\n                });\n            });\n    }\n\n    private previewChangedVariables(): void {\n        if (this.toProcess !== null && !this.isCompiling) {\n            this.isCompiling = true;\n            const self = this;\n            const { promise } = this.toProcess;\n            const { changedVariables } = this.toProcess;\n            this.toProcess = null;\n            // The back-end compilation needs to be planned before starting fron-end\n            // compilation because of concurrency management\n            this.themeStylesReloadValues(changedVariables);\n            const { reloadCSSRequestId } = this;\n            this.getVariablesCalculatedValue(changedVariables, true)\n                .then(function(variablesComputedValue) {\n                    if (self.toProcess === null) {\n                        const newCSS = self.replaceVariablesValueOnPreviewCSS(\n                            variablesComputedValue\n                        );\n                        self.applyPreviewCSS(newCSS);\n                        promise.resolve(self.getEditableVariablesOnly(variablesComputedValue));\n                    }\n                })\n                .fail(function(error) {\n                    if (self.toProcess === null) {\n                        // if the front-end compilation fails, the back-end compilation\n                        // should be canceled\n                        if (reloadCSSRequestId === self.reloadCSSRequestId) {\n                            self.discardReload();\n                        }\n                        promise.reject({\n                            errors: `Error previewing. Details: ${JSON.stringify(error)}`\n                        });\n                    }\n                })\n                .always(function() {\n                    self.isCompiling = false;\n                    self.previewChangedVariables();\n                });\n        }\n    }\n\n    private saveThemeStyles(promise: CMSPromise, changedVariables, skinId?: number) {\n        const self = this;\n        const callbacks = {\n            then: function(variablesValue) {\n                promise.resolve(variablesValue);\n                // Used if theme edition is canceled\n                self.originalPreviewCSS = self.previewCSS;\n                self.originalChangedVariables = changedVariables;\n            },\n            fail: function(error) {\n                promise.reject({\n                    errors: `Error saving the theme. Details: ${JSON.stringify(error)}`\n                });\n            }\n        };\n        self.reloadCSS(changedVariables, true, callbacks, skinId);\n    }\n\n    private addSkin(promise: CMSPromise, skin) {\n        const endpoint = Utils.deepCopy(this.skinsEndpoint);\n        endpoint.data.operation = 'create';\n        endpoint.data.name = skin.name;\n        endpoint.data.values = JSON.stringify(skin.values);\n        jQuery\n            .ajax(endpoint)\n            .then(response => {\n                if (response.header && response.header.status.code !== 'SUCCESS') {\n                    promise.reject({\n                        errors: `Error loading or processing metadata. Details: ${JSON.stringify(\n                            response\n                        )}`\n                    });\n                } else {\n                    promise.resolve(response.result.skin_id);\n                }\n            })\n            .fail(error => {\n                promise.reject({\n                    errors: `Error loading or processing metadata. Details: ${JSON.stringify(\n                        error\n                    )}`\n                });\n            });\n    }\n\n    private restoreThemeDefaults(promise: CMSPromise) {\n        const self = this;\n        const callbacks = {\n            then: function(variablesValue) {\n                promise.resolve(variablesValue);\n            },\n            fail: function(error) {\n                promise.reject({\n                    errors: `Error restoring theme defaults. Details:${JSON.stringify(error)}`\n                });\n            }\n        };\n        self.reloadCSS({}, false, callbacks);\n    }\n\n    private reloadCSS(changedVariables, save, callbacks, skinId?: number) {\n        const self = this;\n        const endPoint = save ? this.saveEndpoint : this.compileEndpoint;\n        if (save && skinId) {\n            endPoint.data.skin_id = skinId;\n        }\n        // Build endpoint url\n        endPoint.data.skin = JSON.stringify(changedVariables);\n        endPoint.data.app = this.applicationName.toLowerCase();\n        // discard reloadCSS or planned reloadCSS\n        self.discardReload();\n        const { reloadCSSRequestId } = self;\n\n        function doIfIsLastReloadExec(fn) {\n            reloadCSSRequestId === self.reloadCSSRequestId && fn();\n        }\n\n        const promise = jQuery.ajax(endPoint).then(function(response) {\n            if (response.header && response.header.status.code !== 'SUCCESS') {\n                if (callbacks && callbacks.fail) {\n                    doIfIsLastReloadExec(function() {\n                        callbacks.fail(response);\n                    });\n                }\n            } else {\n                doIfIsLastReloadExec(function() {\n                    self.applyLoadedCSS(response.css, changedVariables).then(function(\n                        variablesValue\n                    ) {\n                        if (callbacks && callbacks.then) {\n                            callbacks.then(variablesValue);\n                        }\n                    });\n                });\n            }\n        });\n        if (callbacks) {\n            if (callbacks.fail) {\n                promise.fail(function(xhr, textStatus, errorThrown) {\n                    doIfIsLastReloadExec(function() {\n                        callbacks.fail(`${textStatus}--${errorThrown}`);\n                    });\n                });\n            }\n            if (callbacks.always) {\n                promise.always(function(result) {\n                    doIfIsLastReloadExec(function() {\n                        callbacks.always(result);\n                    });\n                });\n            }\n        }\n    }\n\n    /**\n     * After previewing the changed variables a server side compilation is performed,\n     * this method triggers that compilation after a wait time. If there is a pending\n     * server side compilation, it will be canceled an rescheduled a new one\n     */\n    private themeStylesReloadValues(changedVariables): void {\n        const self = this;\n        // discard reloadCSS or planned reloadCSS\n        this.discardReload();\n        self.reloadCSSRequestId = setTimeout(function() {\n            const callbacks = {\n                then: function(variablesValue) {\n                    self.CMS.trigger('theme:styles:reloadValues', {\n                        errors: null,\n                        values: variablesValue\n                    });\n                },\n                fail: function(error) {\n                    self.CMS.trigger('theme:styles:reloadValues', {\n                        errors: `Error reloading values from server. Details: ${JSON.stringify(\n                            error\n                        )}`\n                    });\n                }\n            };\n            self.reloadCSS(changedVariables, false, callbacks);\n        }, 7000);\n    }\n\n    private fixRelativeURLs(css: string, baseURL: string): string {\n        const output = css.replace(URL_REGEX, function(_matched, relative) {\n            // remove spaces, single and double quotes\n            relative = relative.trim();\n            if (relative[0] === \"'\" || relative[0] === '\"') {\n                relative = relative.substr(1, relative.length - 2);\n            }\n            return `url(${new Url(relative).resolve(baseURL).toString()})`;\n        });\n        return output;\n    }\n\n    private getEditableVariablesOnly(variablesCalculatedValue): VariablesValue {\n        // Filter the variables to return only the editable ones\n        const editableVariables: VariablesValue = {};\n        _.each(this.completeSetOfVariablesInOrder, function(variable: Variable) {\n            if (variable.editable && variablesCalculatedValue[variable.name] !== undefined) {\n                editableVariables[variable.name] = variablesCalculatedValue[variable.name];\n            }\n        });\n        return editableVariables;\n    }\n\n    private applyPreviewCSS(css: string): void {\n        const tagId = 'nsCSSWithMetadata';\n        let styleTag = document.getElementById(tagId);\n        if (!styleTag) {\n            styleTag = window.document.createElement('style');\n            styleTag.id = tagId;\n            window.document.body.appendChild(styleTag);\n        }\n        styleTag.innerHTML = css;\n    }\n\n    private applyLoadedCSS(css, changedVariables) {\n        const self = this;\n        this.previewCSS = this.fixRelativeURLs(css, this.stylesheetHref);\n        this.applyPreviewCSS(this.previewCSS);\n        const variablesValuesFromCSS = this.extractVariablesValuesFromCSS(this.previewCSS);\n        this.setVariablesDefaultValue(variablesValuesFromCSS);\n        return this.getVariablesCalculatedValue(changedVariables).then(function(\n            calculatedVariablesValue\n        ) {\n            return self.getEditableVariablesOnly(calculatedVariablesValue);\n        });\n    }\n\n    private static extractVariablesMetadata(css: string) {\n        // extract values\n        let start = css.indexOf('/* values */');\n        let metadata = css.substring(start + 16);\n        let end = metadata.indexOf('*/');\n        const values = metadata.substring(0, end);\n\n        // extract groups\n        start = metadata.indexOf('/* groups */');\n        metadata = metadata.substring(start + 16);\n        end = metadata.indexOf('*/');\n        const groups = metadata.substring(0, end);\n\n        // extract warnings\n        let warnings = '';\n        start = metadata.indexOf('/* warnings */');\n        if (start >= 0) {\n            metadata = metadata.substring(start + 18);\n            end = metadata.indexOf('*/');\n            warnings = metadata.substring(0, end);\n        }\n        return {\n            values: JSON.parse(this.unescapeNumberSign(values)).values,\n            groups: JSON.parse(this.unescapeNumberSign(groups)).groups,\n            warnings: warnings\n        };\n    }\n\n    private getAffectedVariables(editedVariables: VariablesValue): Variable[] {\n        const affectedVariables = [];\n        const derivedVars = {};\n\n        function addToDerivedVars(derivedVar: Variable) {\n            derivedVars[derivedVar.name] = true;\n        }\n\n        for (let i = this.completeSetOfVariablesInOrder.length - 1; i >= 0; i--) {\n            const variableName = this.completeSetOfVariablesInOrder[i].name;\n            // Avoid to add duplicated variables in \"affectedVariables\" array\n            if (\n                editedVariables[variableName] !== undefined ||\n                derivedVars[variableName] !== undefined\n            ) {\n                affectedVariables.push(this.completeSetOfVariablesInOrder[i]);\n                _.each(this.completeSetOfVariablesInOrder[i].derived, addToDerivedVars);\n            }\n        }\n        return affectedVariables.reverse();\n    }\n\n    private buildDummySass(affectedVariables: Variable[], editedVariables: VariablesValue): string {\n        const self = this;\n        const wrapFunction =\n            '@function quotes-verbatim($value) {\\n' +\n            '  @if (type-of($value) == \"string\") {\\n' +\n            \"    // SASS doesn't have str-is-quoted, and quoted and unquoted strings compare\\n\" +\n            '    // equal. I noticed that list expressions give away whether a string is quoted,\\n' +\n            \"    // though, so here's how we can return a string with explicit quotes.\\n\" +\n            '    $list-expr: \"#{inspect(($value, \"\"))}\";\\n' +\n            '    @return str-slice($list-expr, 0, str-length($list-expr) - 4);\\n' +\n            '  }\\n' +\n            '  @else {\\n' +\n            '    @return $value;\\n' +\n            '  }\\n' +\n            '}\\n' +\n            '  \\n' +\n            '@function wrap($name, $value) {\\n' +\n            '  @if (outputstyle() != \"COMPRESSED\") {\\n' +\n            '    @if ($value) {\\n' +\n            '      @return unquote(\"/* << var:\" + $name + \" */ \" + quotes-verbatim($value) + \" /* >> */\");\\n' +\n            '    }\\n' +\n            '    @return null;\\n' +\n            '  }\\n' +\n            '  @return $value;\\n' +\n            '};';\n        let variablesDeclaration = '';\n        let dummyClassBody = '';\n        for (let i = affectedVariables.length - 1; i >= 0; i--) {\n            const variableName = affectedVariables[i].name;\n            let variableValue;\n            if (editedVariables[variableName] !== undefined) {\n                variableValue = editedVariables[variableName];\n            } else if (affectedVariables[i].nonCompilable) {\n                // use the value in the css\n                variableValue = affectedVariables[i].defaultValue;\n            } else {\n                variableValue = affectedVariables[i].expr;\n            }\n            if (variableValue !== undefined) {\n                variablesDeclaration += self.buildSASSVariableDeclaration(\n                    variableName,\n                    variableValue\n                );\n                dummyClassBody += self.buildSASSVariableUsageStatement(variableName);\n            }\n        }\n        return `${wrapFunction + variablesDeclaration}\\n.dummyClass {\\n${dummyClassBody}\\n}`;\n    }\n\n    private buildDummyCSS(sassStr) {\n        const self = this;\n        const promise = jQuery.Deferred();\n        let retried = false;\n\n        function compilerHandler(compilerOutput) {\n            if (compilerOutput.status === 0) {\n                promise.resolve(compilerOutput.text);\n            } else if (!retried) {\n                retried = true;\n                self.getSassCompiler(true).compile(sassStr, compilerHandler);\n            } else {\n                promise.reject(\n                    compilerOutput.message\n                        ? compilerOutput.message\n                        : 'Unexpected error compiling front-end SASS variables'\n                );\n            }\n        }\n\n        self.getSassCompiler().compile(sassStr, compilerHandler);\n        return promise;\n    }\n\n    private extractVariablesValuesFromCSS(css: string): VariablesValue {\n        let result;\n        const variables: VariablesValue = {};\n        while ((result = EDITABLE_REGEX.exec(css)) !== null) {\n            const name = result[1];\n            variables[name] = result[2];\n        }\n        return variables;\n    }\n\n    /**\n     * @method replaceVariablesValueOnPreviewCSS\n     * @param {variableName: String} editedVariables\n     * @returns {string} copy the the attribute \"previewCSS\" with the supplied values changed\n     */\n    private replaceVariablesValueOnPreviewCSS(editedVariables) {\n        const output = this.previewCSS.replace(EDITABLE_REGEX, function(matched, name) {\n            const editedValue = editedVariables[name] !== undefined;\n            if (!editedValue) {\n                return matched;\n            }\n            return `/* << var:${name} */ ${editedVariables[name]} /* >> */`;\n        });\n        return output;\n    }\n\n    private addMissingDependenciesOfAffectedVariables(affectedVariables: Variable[]): Variable[] {\n        const variablesToCompile = [];\n        const includedVariables = {};\n        const addDependencies = (variable: Variable) => {\n            if (!includedVariables[variable.name]) {\n                if (variable.parents) {\n                    Object.keys(variable.parents).forEach((parentName: string) => {\n                        const parent: Variable = this.variablesByName[parentName];\n                        addDependencies(parent);\n                    });\n                }\n                variablesToCompile.push(variable);\n                includedVariables[variable.name] = true;\n            }\n        };\n        for (let i = affectedVariables.length - 1; i >= 0; i--) {\n            addDependencies(affectedVariables[i]);\n        }\n        return variablesToCompile.reverse();\n    }\n\n    /**\n     *    @method getVariablesCalculatedValue For each variable in the metadata compute his value\n     *    using the supplied changes\"\n     *    @param changedVariables {Object} Map with all edited variables\n     *    @return Promise The promise is resolved with an object with each variables and his\n     *    calculated value\n     * */\n    private getVariablesCalculatedValue(changedVariables, affectedsOnly?: boolean) {\n        const self = this;\n        const variablesToCompile: Variable[] = affectedsOnly\n            ? this.addMissingDependenciesOfAffectedVariables(\n                  this.getAffectedVariables(changedVariables)\n              )\n            : this.completeSetOfVariablesInOrder;\n        const sass = this.buildDummySass(variablesToCompile, changedVariables || {});\n        return this.buildDummyCSS(sass).then(function(css) {\n            return self.extractVariablesValuesFromCSS(css);\n        });\n    }\n\n    /**\n     * @method getDependenciesInOrder The method should be called only once, when the environment\n     * is initialised\n     * @param Array<Object> siblings SASS variables metadata\n     * @return Array<Object> Ordered list, if element A depends of B, A will appear first\n     * */\n    private getDependenciesInOrder(siblings: Variable[]): Variable[] {\n        let orderedDependencies = [];\n        function find(startIndex, array, elementName) {\n            for (let i = startIndex; i < array.length; i++) {\n                if (array[i].name === elementName) {\n                    return i;\n                }\n            }\n            return -1; // not found\n        }\n\n        function mergeBranches(branch1: Variable[], branch2: Variable[]): Variable[] {\n            let branch1Index = 0;\n            let branch2Index = 0;\n            let mergeResult = [];\n            const mergedElements = {};\n\n            while (branch1Index < branch1.length || branch2Index < branch2.length) {\n                if (branch1Index < branch1.length) {\n                    const searchedElementIndex = find(\n                        branch2Index,\n                        branch2,\n                        branch1[branch1Index].name\n                    );\n                    if (searchedElementIndex >= 0) {\n                        while (branch2Index <= searchedElementIndex) {\n                            if (!mergedElements[branch2[branch2Index].name]) {\n                                mergeResult.push(branch2[branch2Index]);\n                                mergedElements[branch2[branch2Index].name] = true;\n                            }\n                            branch2Index++;\n                        }\n                    } else if (!mergedElements[orderedDependencies[branch1Index].name]) {\n                        mergeResult.push(orderedDependencies[branch1Index]);\n                        mergedElements[orderedDependencies[branch1Index].name] = true;\n                    }\n                    branch1Index++;\n                } else {\n                    // add all elements in  branch2 that were not included yet\n                    mergeResult = mergeResult.concat(branch2.slice(branch2Index));\n                    branch2Index = branch2.length;\n                }\n            }\n            return mergeResult;\n        }\n\n        const self = this;\n        _.each(siblings, function(sibling: Variable) {\n            if (sibling.derived && sibling.derived.length) {\n                const branchOrderedDependencies = self.getDependenciesInOrder(sibling.derived);\n                if (orderedDependencies.length) {\n                    // merge two sets of ordered dependencies\n                    orderedDependencies = mergeBranches(\n                        orderedDependencies,\n                        branchOrderedDependencies\n                    );\n                } else {\n                    orderedDependencies = branchOrderedDependencies;\n                }\n            }\n        });\n        return mergeBranches(orderedDependencies, siblings);\n    }\n\n    private buildSASSVariableDeclaration(name: string, value: string) {\n        return `${name}:${value};`;\n    }\n\n    private buildSASSVariableUsageStatement(name: string) {\n        const cssPropertyName = name.substring(1);\n        return `\\t${cssPropertyName}: wrap('${name}', ${name});`;\n    }\n\n    private getSassCompiler(cleanUp: boolean = false) {\n        if (!this.sassCompiler) {\n            this.sassCompiler = new Sass();\n        } else if (cleanUp) {\n            this.sassCompiler.destroy();\n            this.sassCompiler = new Sass();\n        }\n        return this.sassCompiler;\n    }\n\n    private identifyNonCompilableVariables(variables: Variable[]): Variable[] {\n        const availableVariables = {};\n\n        function setAsNotCompilable(variable: Variable) {\n            variable.nonCompilable = true;\n            _.each(variable.derived, function(derived: Variable) {\n                setAsNotCompilable(derived);\n            });\n        }\n\n        function findInFunctionsWhiteList(func) {\n            return _.find(FUNCTION_WHITELIST, function(validFunc) {\n                return validFunc === func;\n            });\n        }\n\n        for (let i = variables.length - 1; i >= 0; i--) {\n            const variable = variables[i];\n            /* The $overrides variable should not be part of metadata, is used to apply\n             * new variables values during backend compilation, pre-processor is adding\n             * it so need's to be removed during frontend compilation*/\n            if (variable.name === '$overrides') {\n                setAsNotCompilable(variable);\n            } else if (!variable.nonCompilable) {\n                // if has not been labeled as not compilable yet, check the expression\n                // parse expression to extract variables and functions\n                const parsed = variable.expr.match(VARIABLE_REGEX);\n                if (parsed) {\n                    for (let j = 0; j < parsed.length; j++) {\n                        let member = parsed[j];\n                        if (member[0] !== '$') {\n                            // if is a function must exist in the white list\n                            member = member.substring(0, member.indexOf('('));\n                            const isValidFunc = findInFunctionsWhiteList(member);\n                            if (!isValidFunc) {\n                                setAsNotCompilable(variable);\n                            }\n                        } else if (!availableVariables[member]) {\n                            // if is a variable must exist in \"availableVariables\"\n                            setAsNotCompilable(variable);\n                        }\n                    }\n                }\n                if (!variable.nonCompilable) {\n                    // set the variable as existing and compilable\n                    availableVariables[variables[i].name] = true;\n                }\n            }\n        }\n        return variables;\n    }\n\n    private static unescapeNumberSign(str: string): string {\n        return str.replace(ESCAPED_INTERPOLATION_REGEX, '#{');\n    }\n\n    private setVariablesDefaultValue(variablesDefaultValue) {\n        _.each(this.completeSetOfVariablesInOrder, function(variable: Variable) {\n            variable.defaultValue = variablesDefaultValue[variable.name];\n        });\n    }\n\n    private setStylesheetHref() {\n        const stylesheets = jQuery('link[rel=\"stylesheet\"]', window.document.head);\n        // Build the path to the css with the metadata\n        // Get a non IE url\n        let stylesheetHref: any = _.find(stylesheets.get(), function(linkDomElement) {\n            if (!(<any>linkDomElement).href.match(/((_\\d+){2}\\.css(\\?.*)*)$/)) {\n                return true;\n            }\n            return false;\n        });\n        // Get the url of the production css without the extension\n        stylesheetHref = stylesheetHref.href.match(/(.*)(\\.css(\\?.*)*)$/)[1];\n        this.stylesheetHref = `${stylesheetHref.substring(\n            0,\n            stylesheetHref.lastIndexOf('/') + 1\n        )}smt_${stylesheetHref.substring(\n            stylesheetHref.lastIndexOf('/') + 1\n        )}.css?t=${new Date().getTime()}`;\n    }\n\n    private removeDefaultStyles(): void {\n        const stylesheets = jQuery('link[rel=\"stylesheet\"]', window.document.head);\n        const stylesheetHref: any = _.find(stylesheets.get(), linkDomElement =>\n            /_\\d+\\.css(\\?.*)?$/.test((<any>linkDomElement).href)\n        );\n        stylesheetHref.remove();\n    }\n\n    private discardReload(): void {\n        // discard reloadCSS or planned reloadCSS\n        clearTimeout(this.reloadCSSRequestId);\n        this.reloadCSSRequestId = _.uniqueId('id_');\n    }\n\n    private removeSkin(promise: CMSPromise, skinId: number): void {\n        const endpoint = Utils.deepCopy(this.skinsEndpoint);\n        endpoint.data.operation = 'delete';\n        endpoint.data.id = skinId;\n\n        jQuery\n            .ajax(endpoint)\n            .then(response => {\n                if (response.header && response.header.status.code !== 'SUCCESS') {\n                    promise.reject({\n                        errors: `Error loading or processing metadata. Details: ${JSON.stringify(\n                            response\n                        )}`\n                    });\n                } else {\n                    promise.resolve();\n                }\n            })\n            .fail(error => {\n                promise.reject({\n                    errors: `Error loading or processing metadata. Details: ${JSON.stringify(\n                        error\n                    )}`\n                });\n            });\n    }\n\n    private editSkin(promise: CMSPromise, skin: any): void {\n        const endpoint = Utils.deepCopy(this.skinsEndpoint);\n        endpoint.data.operation = 'edit';\n        endpoint.data.id = skin.id;\n        endpoint.data.name = skin.name;\n        endpoint.data.values = JSON.stringify(skin.values);\n\n        jQuery\n            .ajax(endpoint)\n            .then(response => {\n                if (response.header && response.header.status.code !== 'SUCCESS') {\n                    promise.reject({\n                        errors: `Error loading or processing metadata. Details: ${JSON.stringify(\n                            response\n                        )}`\n                    });\n                } else {\n                    promise.resolve();\n                }\n            })\n            .fail(error => {\n                promise.reject({\n                    errors: `Error loading or processing metadata. Details: ${JSON.stringify(\n                        error\n                    )}`\n                });\n            });\n    }\n\n    private static wrapForLogging(promise: CMSPromise): CMSPromise {\n        return {\n            resolve(...args): void {\n                promise.resolve(...args);\n            },\n            reject(error): void {\n                promise.reject(error);\n                console.log('Theme customizer error: ', error);\n            }\n        };\n    }\n}\n"]}