{"version":3,"sources":["ProductList.ControlSingle.View.ts"],"names":[],"mappings":"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","file":"ProductList.ControlSingle.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductList.ControlSingle.View\"/>\n\nimport '../../../Commons/BackboneExtras/JavaScript/Backbone.View.render';\nimport * as _ from 'underscore';\nimport * as product_list_control_single_tpl from 'product_list_control_single.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport ProductListItemCollection = require('../../../Commons/ProductList/JavaScript/ProductList.Item.Collection');\nimport ControlView = require('../../../Commons/ProductList/JavaScript/ProductList.Control.View');\n\n// @class ProductList.ControlSingle.View @extends Backbone.View\nexport = BackboneView.extend({\n    template: product_list_control_single_tpl,\n\n    attributes: { class: 'product-lists-single' },\n\n    events: {\n        'click [data-type=\"add-product-to-single-list\"]': 'addItemToSingleList'\n    },\n\n    addItemToList: ControlView.prototype.addItemToList,\n\n    doAddItemToList: ControlView.prototype.doAddItemToList,\n\n    saveAndShowConfirmationMessage: ControlView.prototype.saveAndShowConfirmationMessage,\n\n    validateGiftCertificate: ControlView.prototype.validateGiftCertificate,\n\n    getItemOptions: ControlView.prototype.getItemOptions,\n\n    validateLogin: ControlView.prototype.validateLogin,\n\n    getProductId: ControlView.prototype.getProductId,\n\n    getNewItemData: ControlView.prototype.getNewItemData,\n\n    initialize: function(options) {\n        this.product = options.product;\n        this.collection = options.collection;\n        this.application = options.application;\n\n        // single list\n        this.single_list = this.collection.at(0);\n    },\n\n    render: function() {\n        this._render();\n    },\n\n    // @method isProductAlreadyAdded Determines if the current product with the selected options is already in the product list\n    // @return {Boolean} Indicate is the product is already added into the current single list\n    isProductAlreadyAdded: function() {\n        return this.single_list.checked(this.product);\n    },\n\n    // @method getProductsInternalid Get list internal ids @returns {Array<String>}\n    getProductsInternalid: function() {\n        return _.map(this.single_list.get('items').models, function(item: any) {\n            return item.get('item').internalid;\n        });\n    },\n\n    // @method addItemToSingleList Before adding item to the list, checks for not created predefined list\n    addItemToSingleList: function(e) {\n        e.preventDefault();\n\n        if (!this.validateLogin(e)) {\n            return;\n        }\n\n        const self = this;\n\n        if (self.product.isValid(true)) {\n            // Check if predefined list was not created yet\n            if (!self.single_list.get('internalid')) {\n                self.single_list.save().done(function() {\n                    self.single_list.set('items', new ProductListItemCollection([]));\n                    self.renderAfterAdded(self);\n                });\n            } else {\n                self.renderAfterAdded(self);\n            }\n        }\n    },\n\n    // @method renderAfterAdded Adds the item to the list\n    renderAfterAdded: function(self) {\n        if (!this.validateGiftCertificate(self.product)) {\n            return;\n        }\n\n        self.addItemToList(self.product, self.single_list);\n        self.render();\n\n        self.saveAndShowConfirmationMessage(\n            Utils.translate('Good! You added this item to your product list')\n        );\n\n        this.$('[data-action=\"add-product-to-single-list\"]').attr('disabled', 'true');\n    },\n\n    // @method getContext @return {ProductList.ControlSingle.View.Context}\n    getContext: function getContext() {\n        const model = this.single_list;\n\n        // @class ProductList.ControlSingle.View.Context\n        return {\n            // @property {Boolean} isProductAlreadyAdded\n            isProductAlreadyAdded: this.isProductAlreadyAdded(),\n            // @property {String} name\n            name: model.get('name'),\n            // @property {String} id\n            id: model.get('internalid')\n        };\n    }\n});\n"]}