{"version":3,"sources":["OrderWizard.Module.Shipmethod.ts"],"names":[],"mappings":"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","file":"OrderWizard.Module.Shipmethod.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"OrderWizard.Module.Shipmethod\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/UnderscoreExtended.d.ts\" />\n/// <reference path=\"../../../Commons/Utilities/JavaScript/GlobalDeclarations.d.ts\"/>\n\nimport * as _ from 'underscore';\nimport * as order_wizard_shipmethod_module_tpl from 'order_wizard_shipmethod_module.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { WizardStepModule } from '../../Wizard/JavaScript/Wizard.StepModule';\nimport { GlobalViewsMessageView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.Message.View';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\n\n// @class OrderWizard.Module.Shipmethod @extends Wizard.Module\nexport = WizardStepModule.extend({\n    // @property {Function} template\n    template: order_wizard_shipmethod_module_tpl,\n    // @property {Object} events\n    events: {\n        'change [data-action=\"select-delivery-option\"]': 'changeDeliveryOptions',\n        'click [data-action=\"select-delivery-option-radio\"]': 'changeDeliveryOptions'\n    },\n    // @property {Array} errors\n    errors: ['ERR_CHK_SELECT_SHIPPING_METHOD', 'ERR_WS_INVALID_SHIPPING_METHOD'],\n\n    shippingMethodsCache: {},\n\n    // @method initialize\n    initialize: function() {\n        this.waitShipmethod = SC.ENVIRONMENT.CART\n            ? !SC.ENVIRONMENT.CART.shipmethod\n            : !(this.model && this.model.get('shipmethod'));\n\n        this.profileModel = ProfileModel.getInstance();\n\n        this.addresses = this.profileModel.get('addresses');\n\n        WizardStepModule.prototype.initialize.apply(this, arguments);\n        // So we allways have a the reload promise\n        this.reloadMethodsPromise = jQuery.Deferred().resolve();\n        this.wizard.model.on('ismultishiptoUpdated', _.bind(this.render, this));\n    },\n\n    isActive: function(): boolean {\n        const is_shipping_required = this.wizard.model.shippingAddressIsRequired();\n        if (!is_shipping_required) {\n            this.wizard.model.unset('shipmethod');\n        }\n        return is_shipping_required && !this.wizard.model.get('ismultishipto');\n    },\n\n    // @method present\n    present: function() {\n        this.currentAddress = this.previousAddress = this.model.get('shipaddress');\n        this.eventHandlersOn();\n    },\n    // @method future\n    future: function() {\n        this.currentAddress = this.previousAddress = this.model.get('shipaddress');\n        this.eventHandlersOn();\n    },\n    // @method past\n    past: function() {\n        this.waitShipmethod = !this.model.get('shipmethod');\n        this.currentAddress = this.previousAddress = this.model.get('shipaddress');\n        this.eventHandlersOn();\n    },\n    // @method eventHandlersOn\n    eventHandlersOn: function() {\n        // Removes any leftover observer\n        this.eventHandlersOff();\n        // Adds the observer for this step\n        this.model.on('change:shipaddress', this.shipAddressChange, this);\n\n        this.model.on(\n            'change:shipmethods',\n            function() {\n                _.defer(_.bind(this.render, this));\n            },\n            this\n        );\n\n        const selected_address = this.addresses.get(this.currentAddress);\n\n        if (selected_address) {\n            selected_address.on('sync', jQuery.proxy(this, 'reloadMethods'), this);\n        }\n    },\n    // @method eventHandlersOff\n    eventHandlersOff: function() {\n        // removes observers\n        this.model.off('change:shipmethods', null, this);\n        this.model.off('change:shipaddress', this.shipAddressChange, this);\n\n        const current_address = this.addresses.get(this.currentAddress);\n        const previous_address = this.addresses.get(this.previousAddress);\n\n        if (current_address) {\n            current_address.off('change:country change:zip', null, this);\n            current_address.off('sync');\n        }\n\n        if (previous_address && previous_address !== current_address) {\n            previous_address.off('change:country change:zip', null, this);\n        }\n    },\n    // @method render\n    render: function() {\n        if (this.state === 'present') {\n            if (this.model.get('shipmethod') && !this.waitShipmethod) {\n                this.trigger('ready', true);\n            }\n            this._render();\n        }\n    },\n    // @method shipAddressChange\n    shipAddressChange: function(model, value) {\n        this.currentAddress = value;\n\n        const order_address = this.model.get('addresses');\n        const previous_address =\n            this.previousAddress &&\n            (order_address.get(this.previousAddress) || this.addresses.get(this.previousAddress));\n        const current_address =\n            (this.currentAddress && order_address.get(this.currentAddress)) ||\n            this.addresses.get(this.currentAddress);\n        let changed_zip =\n            previous_address &&\n            current_address &&\n            previous_address.get('zip') !== current_address.get('zip');\n        let changed_state =\n            previous_address &&\n            current_address &&\n            previous_address.get('state') !== current_address.get('state');\n        let changed_country =\n            previous_address &&\n            current_address &&\n            previous_address.get('country') !== current_address.get('country');\n\n        // if previous address is equal to current address we\n        // compare the previous values on the model.\n        if (previous_address && current_address && previous_address === current_address) {\n            changed_zip = current_address.previous('zip') !== current_address.get('zip');\n            changed_country =\n                current_address.previous('country') !== current_address.get('country');\n            changed_state = current_address.previous('state') !== current_address.get('state');\n        }\n\n        // reload ship methods only if there is no previous\n        // address or when change the country or zipcode\n        if (\n            (!previous_address && current_address) ||\n            changed_zip ||\n            changed_country ||\n            changed_state\n        ) {\n            // if its selected a valid address, reload Methods\n            if (\n                this.model.get('isEstimating') ||\n                this.addresses.get(this.model.get('shipaddress'))\n            ) {\n                this.reloadMethods();\n            }\n        } else {\n            this.render();\n        }\n\n        if (value) {\n            this.previousAddress = value;\n        }\n\n        // if we select a new address, bind the sync method for possible address edits\n        if (this.currentAddress) {\n            const selected_address = this.addresses.get(this.currentAddress);\n            if (selected_address) {\n                selected_address.on('sync', jQuery.proxy(this, 'reloadMethods'), this);\n            }\n\n            // if there was a different previous address, remove the sync handler\n            if (this.previousAddress && this.previousAddress !== this.currentAddress) {\n                const previous_selected_address = this.addresses.get(this.previousAddress);\n                if (previous_selected_address) {\n                    previous_selected_address.off('sync');\n                }\n            }\n        }\n    },\n\n    // @method reloadMethods\n    reloadMethods: function reloadMethods() {\n        if (this.model.get('confirmation').internalid || this.model.get('confirmation').id) {\n            return;\n        }\n        // to reload the shipping methods we just save the order\n        const self = this;\n        const $container = this.$el;\n\n        $container.addClass('loading');\n\n        // Abort the previous ajax call\n        if (this.reloadMethodsPromise.abort) {\n            this.reloadMethodsPromise.abort();\n        }\n\n        this.reloadingMethods = true;\n        this.render();\n\n        // Cache shipping methods by country, state and zip\n        const orderAddress = this.model.get('addresses');\n        const currentAddressId = this.model.get('shipaddress');\n        const currentAddress =\n            orderAddress.get(currentAddressId) || this.addresses.get(currentAddressId);\n        let shippingMethodsCacheKey = '';\n        if (currentAddress) {\n            shippingMethodsCacheKey = [\n            currentAddress.get('country'),\n            currentAddress.get('state'),\n            currentAddress.get('zip')\n        ].join('-');\n        }\n\n        let shippingMethodsData = this.shippingMethodsCache[shippingMethodsCacheKey];\n        // Use cache only if is not estimating\n        if (!this.model.get('isEstimating') && shippingMethodsData) {\n            this.model.set(shippingMethodsData);\n            this.reloadMethodsPromise = jQuery.Deferred().resolve();\n        } else {\n            this.reloadMethodsPromise = this.model.save(null, {\n                parse: false,\n                success: (model, attributes): void => {\n                    shippingMethodsData = {\n                        shipmethods: attributes.shipmethods,\n                        shipmethod: attributes.shipmethod,\n                        summary: attributes.summary\n                    };\n                    this.shippingMethodsCache[shippingMethodsCacheKey] = shippingMethodsData;\n                    model.set(shippingMethodsData);\n                }\n            });\n        }\n\n        this.reloadMethodsPromise.always(function(xhr) {\n            // .always() method is excecuted even if the ajax call was aborted\n            if (!xhr || xhr.statusText !== 'abort') {\n                $container.removeClass('loading');\n                self.render();\n                self.step.enableNavButtons();\n                self.reloadingMethods = false;\n            }\n        });\n\n        if (this.reloadMethodsPromise.state() === 'pending') {\n            self.step.disableNavButtons();\n        }\n    },\n\n    // @method submit\n    submit: function submit(): any {\n        return this.isValid();\n    },\n\n    // @method isValid\n    isValid: function isValid(): any {\n        const { model } = this;\n        const valid_promise = jQuery.Deferred();\n\n        this.reloadMethodsPromise.always(function() {\n            if (model.get('shipmethod') && model.get('shipmethods').get(model.get('shipmethod'))) {\n                valid_promise.resolve();\n            } else {\n                valid_promise.reject({\n                    errorCode: 'ERR_CHK_SELECT_SHIPPING_METHOD',\n                    errorMessage: Utils.translate('Please select a delivery method')\n                });\n            }\n        });\n\n        return valid_promise;\n    },\n\n    // @method changeDeliveryOptions\n    changeDeliveryOptions: function changeDeliveryOptions(e) {\n        const target = jQuery(e.currentTarget);\n        const targetValue = target.val() || target.attr('data-value');\n\n        this.waitShipmethod = true;\n        this.model.setShipMethod(targetValue).always(() => {\n            this.clearError();\n            this.step.enableNavButtons();\n        });\n        this.step.disableNavButtons();\n    },\n\n    // @method showError render the error message\n    showError: function showError() {\n        const global_view_message = new GlobalViewsMessageView({\n            message: this.error.errorMessage,\n            type: 'error',\n            closable: true\n        });\n\n        // Note: in special situations (like in payment-selector),\n        // there are modules inside modules, so we have several place holders,\n        // so we only want to show the error in the first place holder.\n        this.$('[data-type=\"alert-placeholder-module\"]:first').html(\n            global_view_message.render().$el.html()\n        );\n\n        this.error = null;\n    },\n\n    // @method getContext\n    // @returns {OrderWizard.Module.Shipmethod.Context}\n    getContext: function getContext() {\n        const self = this;\n        const show_enter_shipping_address_first =\n            !this.model.get('isEstimating') &&\n            !this.profileModel.get('addresses').get(this.model.get('shipaddress'));\n        const shipping_methods = this.model.get('shipmethods').map(function(shipmethod) {\n            return {\n                name: shipmethod.get('name'),\n                rate_formatted: shipmethod.get('rate_formatted'),\n                internalid: shipmethod.get('internalid'),\n                isActive: shipmethod.get('internalid') === self.model.get('shipmethod')\n            };\n        });\n\n        // @class OrderWizard.Module.Shipmethod.Context\n        return {\n            // @property {LiveOrder.Model} model\n            model: this.model,\n            // @property {Boolean} showEnterShippingAddressFirst\n            showEnterShippingAddressFirst: show_enter_shipping_address_first,\n            // @property {Boolean} showLoadingMethods\n            showLoadingMethods: this.reloadingMethods,\n            // @property {Boolean} hasShippingMethods\n            hasShippingMethods: !!shipping_methods.length,\n            // @property {Boolean} display select instead of radio buttons\n            showSelectForShippingMethod: shipping_methods.length > 5,\n            // @property {Array} shippingMethods\n            shippingMethods: shipping_methods,\n            // @property {Boolean} showTitle\n            showTitle: !this.options.hide_title,\n            // @property {Straing} title\n            title: this.options.title || Utils.translate('Delivery Method')\n        };\n        // @class OrderWizard.Module.Shipmethod\n    }\n});\n"]}