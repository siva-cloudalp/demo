{"version":3,"sources":["CustomContentType.Base.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAQF,4BAA4B;IAC5B,IAAM,yBAAyB,GAAQ,YAAY,CAAC,MAAM,CAAC;QACvD,UAAU,EAAE,SAAS,UAAU,CAAC,OAAO;YACnC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC;QAED,kGAAkG;QAClG,oGAAoG;QACpG,wCAAwC;QACxC,sGAAsG;QACtG,gCAAgC;QAChC,4GAA4G;QAC5G,4GAA4G;QAC5G,uEAAuE;QACvE,4BAA4B;QAC5B,OAAO,EAAE,SAAS,OAAO,CAAC,QAAQ,EAAE,YAAY;YAC5C,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QACjD,CAAC;QAED,kBAAkB;QAClB,2EAA2E;QAC3E,iBAAiB;QACjB,QAAQ,EAAE,SAAS,QAAQ,CAAC,QAAQ,EAAE,YAAY;YAC9C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;YAEhC,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC,CAAC;QAED,+DAA+D;QAC/D,wFAAwF;QACxF,uGAAuG;QACvG,kCAAkC;QAClC,uFAAuF;QACvF,mFAAmF;QACnF,2EAA2E;QAC3E,4BAA4B;QAC5B,MAAM,EAAE,SAAS,MAAM,CAAC,QAAQ;YAC5B,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC;QAED,kBAAkB;QAClB,2EAA2E;QAC3E,iBAAiB;QACjB,OAAO,EAAE,SAAS,OAAO,CAAC,QAAQ;YAC9B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC,CAAC;QAED,OAAO,EAAE,SAAS,OAAO;YACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC;QACvC,CAAC;QACD,qBAAqB;QACrB,gDAAgD;QAChD,UAAU,EAAE,SAAS,UAAU;YAC3B,6CAA6C;YAC7C,OAAO;gBACH,kDAAkD;gBAClD,QAAQ,EAAE,IAAI,CAAC,QAAQ;aAC1B,CAAC;YACF,qCAAqC;QACzC,CAAC;KACJ,CAAC,CAAC;IAEH,yBAAyB,CAAC,gBAAgB,CAAC,OAAO,CAAC;QAC/C,IAAI,EAAE,+BAA+B;QACrC,QAAQ,EAAE,CAAC;QACX,OAAO,EAAE;YACL,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YAC1C,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;QAC9B,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,yBAAyB,CAAC;;AAEnC,uHAAuH;AACvH,2BAA2B;AAC3B,IAAI;AACJ,mFAAmF;AACnF,qDAAqD;AACrD,QAAQ;AACR,IAAI","file":"CustomContentType.Base.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CustomContentType.Base.View\"/>\n\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @module CustomContentType\nconst CustomContentTypeBaseView: any = BackboneView.extend({\n    initialize: function initialize(options) {\n        this._initialize(options);\n    },\n\n    // @method install called the first time a CCT is dragged from the admin panel to the application.\n    // It indicates when does the CCT instance has finished making all the ajax call that are necessary.\n    // Also it initializes the CCT settings.\n    // If in a custom CCT is there any ajax calls or other logic, then the CCT has to override this method\n    // and return a jQuery.deferred.\n    // Any error that cause that the CustomContentType object could not be installed, means that the cct will be\n    // removed from the DOM (call the destroy method -to be defined??- ) and it will return a deferred rejected.\n    // @param {CustomContentType.Settings} settings the settings of the CCT\n    // @return {jQuery.Deferred}\n    install: function install(settings, context_data) {\n        return this._install(settings, context_data);\n    },\n\n    // @method _instal\n    // @param {CustomContentType.Settings} settings the new settings of the CCT\n    // @return {Void}\n    _install: function _install(settings, context_data) {\n        this.settings = settings;\n        this.contextData = context_data;\n\n        return jQuery.Deferred().resolve();\n    },\n\n    // @method update used every time the user wants to edit a CCT.\n    // To do this, the user will select one, interact with the CMS configuration side panel,\n    // CMS will in turn trigger the adapter:cct:update event, and SCA code will call this method to finally\n    // update the settings of the CCT.\n    // Each specific CCT will have to override this method in order to update the settings,\n    // trigger a re-render of the CCT View, and return a deferred resolved or rejected.\n    // @param {CustomContentType.Settings} settings the new settings of the CCT\n    // @return {jQuery.Deferred}\n    update: function update(settings) {\n        return this._update(settings);\n    },\n\n    // @method _update\n    // @param {CustomContentType.Settings} settings the new settings of the CCT\n    // @return {Void}\n    _update: function _update(settings) {\n        this.settings = settings;\n        return jQuery.Deferred().resolve();\n    },\n\n    destroy: function destroy() {\n        this._destroy();\n        return jQuery.Deferred().resolve();\n    },\n    // @method getContext\n    // @return {CustomContentType.Base.View.Context}\n    getContext: function getContext() {\n        // @class CustomContentType.Base.View.Context\n        return {\n            // @property {CustomContentType.Settings} settings\n            settings: this.settings\n        };\n        // @class CustomContentType.Base.View\n    }\n});\n\nCustomContentTypeBaseView.beforeInitialize.install({\n    name: 'customContentTypeBaseViewInit',\n    priority: 1,\n    execute: function() {\n        this.settings = {};\n        this.instanceId = this.options.instanceId;\n        this.id = this.options.id;\n    }\n});\n\nexport = CustomContentTypeBaseView;\n\n// @class CustomContentType.Settings This class defines the available settings that a CustomContentType object support.\n// It is an obj of the form\n// {\n//\t\ttemplate: {String} name of the template/path to the module in the file cabinet?\n//\t\thtml: to be defined, in case of the four core CCT\n//\t\t....\n// }\n"]}