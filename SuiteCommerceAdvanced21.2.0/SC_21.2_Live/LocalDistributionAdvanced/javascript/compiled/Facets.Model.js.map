{"version":3,"sources":["Facets.Model.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAcF,iBAAiB;IACjB,IAAM,cAAc,GAAG,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC;IAK3D,OAAS,mBAAmB,CAAC,MAAM,CAAC;QAChC,OAAO,EAAE,EAAE;QAEX,GAAG,EAAE;YACD,IAAM,OAAO,GAAG,4BAAY,CAAC,WAAW,EAAE,CAAC;YAC3C,IAAM,GAAG,GAAG,KAAK,CAAC,cAAc,CAC5B,OAAO,CAAC,eAAe,EAAE,EACzB,CAAC,CAAC,MAAM,CACJ,6BAAa,CAAC,GAAG,CAAC,0BAA0B,CAAC;gBACzC,6BAAa,CAAC,GAAG,CAAC,2BAA2B,CAAC;gBAC9C,CAAC,CAAC;oBACI,yBAAyB,EAAE,6BAAa,CAAC,GAAG,CAAC,2BAA2B,CAAC;iBAC5E;gBACH,CAAC,CAAC,EAAE,EACR,IAAI,CAAC,sBAAsB,EAC3B,OAAO,CAAC,kBAAkB,EAAE,CAC/B,EACD,OAAO,CAAC,wBAAwB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAC9D,CAAC;YAEF,OAAO,GAAG,CAAC;QACf,CAAC;QAED,UAAU,EAAE,UAAS,OAAO;YACxB,IAAI,OAAO,IAAI,OAAO,CAAC,sBAAsB,EAAE;gBAC3C,IAAI,CAAC,sBAAsB,GAAG,OAAO,CAAC,sBAAsB,CAAC;aAChE;iBAAM;gBACH,IAAI,CAAC,sBAAsB,GAAG,yCAAmB,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;aACxF;YAED,+EAA+E;YAC/E,IAAI,CAAC,EAAE,CAAC,cAAc,EAAE,UAAS,KAAK,EAAE,KAAK;gBACzC,IAAI,CAAC,CAAC,KAAK,YAAY,cAAc,CAAC,EAAE;oBACpC,4DAA4D;oBAC5D,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC5D;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,6FAA6F;QAC7F,KAAK,EAAE,UAAS,OAAO;YACnB,KAAK,CAAC,UAAU,CAAC,OAAO,IAAI,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE;gBAC7B,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC;aACxB;YACD,OAAO,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;YAElC,IAAI,CAAC,oBAAoB,GAAG,OAAO,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC;YAEzF,OAAO,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACjD,CAAC;KACJ,CAAC,CAAC","file":"Facets.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Facets.Model\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { MasterOptionsHelper } from '../../SC/JavaScript/MasterOptionsHelper';\nimport { ProfileModel } from '../../Profile/JavaScript/Profile.Model';\n\nimport BackboneCachedModel = require('../../BackboneExtras/JavaScript/Backbone.CachedModel');\nimport ItemCollection = require('../../../Commons/Item/JavaScript/Item.Collection');\nimport Session = require('../../../Commons/Session/JavaScript/Session');\n\n// @module Facets\nconst original_fetch = BackboneCachedModel.prototype.fetch;\n\n// @class Facets.Model @extends Backbone.CachedModel\n// Connects to the search api to get all the items and the facets\n// A Model Contains a Collection of items and the list of facet groups with its values\nexport = BackboneCachedModel.extend({\n    options: {},\n\n    url: function() {\n        const profile = ProfileModel.getInstance();\n        const url = Utils.addParamsToUrl(\n            profile.getSearchApiUrl(),\n            _.extend(\n                Configuration.get('matrixchilditems.enabled') &&\n                    Configuration.get('matrixchilditems.fieldset')\n                    ? {\n                          matrixchilditems_fieldset: Configuration.get('matrixchilditems.fieldset')\n                      }\n                    : {},\n                this.searchApiMasterOptions,\n                Session.getSearchApiParams()\n            ),\n            profile.isAvoidingDoubleRedirect(this.force_avoid_redirect)\n        );\n\n        return url;\n    },\n\n    initialize: function(options) {\n        if (options && options.searchApiMasterOptions) {\n            this.searchApiMasterOptions = options.searchApiMasterOptions;\n        } else {\n            this.searchApiMasterOptions = MasterOptionsHelper.getSearchAPIMasterOption('Facets');\n        }\n\n        // Listen to the change event of the items and converts it to an ItemCollection\n        this.on('change:items', function(model, items) {\n            if (!(items instanceof ItemCollection)) {\n                // NOTE: Compact is used to filter null values from response\n                model.set('items', new ItemCollection(_.compact(items)));\n            }\n        });\n    },\n\n    // @method fetch overrides fetch so we make sure that the cache is set to true, so we wrap it\n    fetch: function(options) {\n        Utils.deepExtend(options || {}, this.options);\n        if (options.cache === undefined) {\n            options.cache = true;\n        }\n        options.cache = !this.ignoreCache;\n\n        this.force_avoid_redirect = options && options.data && options.data.force_avoid_redirect;\n\n        return original_fetch.apply(this, arguments);\n    }\n});\n"]}