{"version":3,"sources":["Case.List.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;;;;;;;;;;;;;;IAoCF;QAAkC,gCAAsD;QA4CpF,sBAAmB,OAA4B;YAA/C,YACI,kBAAM,OAAO,CAAC,SAUjB;YAtDS,cAAQ,GAAG,aAAa,CAAC;YAEzB,WAAK,GAAG,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;YAEzC,gBAAU,GAAG,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;YAEhD,iBAAW,GAAkB;gBACjC;oBACI,KAAK,EAAE,YAAY;oBACnB,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC;oBACvC,QAAQ,EAAE,IAAI;iBACjB;gBACD;oBACI,KAAK,EAAE,aAAa;oBACpB,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,kBAAkB,CAAC;iBAC5C;gBACD;oBACI,KAAK,EAAE,iBAAiB;oBACxB,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,sBAAsB,CAAC;iBAChD;aACJ,CAAC;YAEK,gBAAU,GAAG;gBAChB,EAAE,EAAE,WAAW;gBACf,KAAK,EAAE,gBAAgB;aAC1B,CAAC;YAoHK,wBAAkB,GAAG;gBACxB,OAAO;oBACH;wBACI,IAAI,EAAE,KAAI,CAAC,KAAK;wBAChB,IAAI,EAAE,QAAQ;qBACjB;iBACJ,CAAC;YACN,CAAC,CAAC;YAvGE,KAAI,CAAC,UAAU,GAAG,IAAI,gCAAc,EAAE,CAAC;YACvC,KAAI,CAAC,MAAM,GAAG,IAAI,mCAAe,EAAE,CAAC;YACpC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,eAAe,EAAE,CAAC;YACzC,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,KAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;;QAC7B,CAAC;QAES,sCAAe,GAAzB;YACI,OAAO,IAAI,gCAAc,CAAC;gBACtB,IAAI,EAAE,IAAI;gBACV,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;gBACrC,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,KAAK,EAAE,IAAI,CAAC,WAAW;gBACvB,cAAc,EAAE,IAAI;aACvB,CAAC,CAAC;QACP,CAAC;QAEO,iCAAU,GAAlB,UAAmB,KAAc;YAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC;QAEO,uCAAgB,GAAxB;YAAA,iBAcC;YAbG,IAAI,CAAC,UAAU,CAAC,EAAE,CACd,OAAO,EACP;gBACI,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACvB,KAAI,CAAC,MAAM,EAAE,CAAC;YAClB,CAAC,CACJ,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,EAAE,CACd,SAAS,EACT;gBACI,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC,CACJ,CAAC;QACN,CAAC;QAEM,wCAAiB,GAAxB;YACI,IAAM,IAAI,GAAG,IAAI,CAAC;YAClB,OAAO,IAAI,CAAC,MAAM;iBACb,KAAK,CAAC;gBACH,QAAQ,EAAE,uCAAkB,CAAC,WAAW,EAAE;aAC7C,CAAC;iBACD,IAAI,CACD;gBACI,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBACzD,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,EAAE;oBAC/C,IAAA,SAAS,GAAK,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,UAA1D,CAA2D;oBAExE,IAAA,cAAc,GACd,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,eADvC,CACwC;oBAC1D,IAAI,cAAc,IAAI,SAAS,EAAE;wBAC7B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;wBACrC,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;wBACnC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC;wBACvE,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE;6BACvD,cAAc,CAAC;qBACvB;iBACJ;YACL,CAAC,CACJ,CAAC;QACV,CAAC;QAED,kCAAkC;QAClC,kDAAkD;QAC1C,8CAAuB,GAA/B;YACI,IAAM,aAAa,GAAoB;gBACnC;oBACI,KAAK,EAAE,KAAK;oBACZ,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,mBAAmB,CAAC;oBAC1C,QAAQ,EAAE,IAAI;iBACjB;aACJ,CAAC;YAEF,IAAM,QAAQ,GAAoB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAEjF,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAS,MAAqB;gBAC3C,IAAM,YAAY,GAAkB;oBAChC,KAAK,EAAE,MAAM,CAAC,EAAE;oBAChB,IAAI,EAAE,MAAM,CAAC,IAAI;iBACpB,CAAC;gBACF,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;YAEH,OAAO,aAAa,CAAC;QACzB,CAAC;QAES,sCAAe,GAAzB;YACI,OAAO,WAAW,CAAC;QACvB,CAAC;QAWM,6BAAM,GAAb;YACI,iBAAM,MAAM,WAAE,CAAC;YACf,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAE7B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;iBAC9B;aACJ;YACD,OAAO,IAAI,CAAC;QAChB,CAAC;QAEO,4CAAqB,GAA7B;YACI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC9C,IAAI,IAAI,CAAC,cAAc,EAAE;gBACrB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aACrF;QACL,CAAC;QAEO,uCAAgB,GAAxB,UAAyB,UAAkB;YACvC,IAAM,SAAS,GAAG,qBAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAa,UAAU,MAAG,CAAC,CAAC;YAEnE,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;gBACrC,SAAS,CAAC,QAAQ,CAAC,8BAA8B,CAAC,CAAC;gBAEnD,UAAU,CAAC;oBACP,SAAS,CAAC,WAAW,CAAC,8BAA8B,CAAC,CAAC;gBAC1D,CAAC,EAAE,IAAI,CAAC,CAAC;aACZ;QACL,CAAC;QAES,oCAAa,GAAvB;YAAA,iBAqEC;YApEG,OAAO;gBACH,iBAAiB,EAAE;oBACf,IAAM,iBAAiB,GAA0B,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UACjE,YAAuB;wBAEvB,OAAO;4BACH,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY,EAAE,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;4BACpE,UAAU,EAAE,aAAW,YAAY,CAAC,GAAG,CAAC,YAAY,CAAG;4BACvD,UAAU,EAAE,KAAG,YAAY,CAAC,GAAG,CAAC,YAAY,CAAG;4BAE/C,OAAO,EAAE;gCACL;oCACI,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC;oCAClC,IAAI,EAAE,SAAS;oCACf,IAAI,EAAE,SAAS;oCACf,KAAK,EAAE,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC;iCACnC;gCACD;oCACI,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC;oCACxC,IAAI,EAAE,eAAe;oCACrB,IAAI,EAAE,eAAe;oCACrB,KAAK,EAAE,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iCACvD;gCACD;oCACI,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC;oCACvC,IAAI,EAAE,MAAM;oCACZ,IAAI,EAAE,cAAc;oCACpB,KAAK,EAAE,YAAY,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;iCAC3D;gCACD;oCACI,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;oCACjC,IAAI,EAAE,QAAQ;oCACd,IAAI,EAAE,QAAQ;oCACd,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wCACzC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI;wCACjC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI;iCACxC;6BACJ;yBACJ,CAAC;oBACN,CAAC,CAAC,CAAC;oBAEH,OAAO,IAAI,yDAA2B,CAAC,iBAAiB,CAAC,CAAC;gBAC9D,CAAC;gBACD,wBAAwB,EAAE;oBACtB,OAAO,IAAI,uDAAyB,CAChC,CAAC,CAAC,MAAM,CACJ;wBACI,UAAU,EAAE,IAAI,CAAC,IAAI,CACjB,KAAI,CAAC,UAAU,CAAC,iBAAiB,GAAG,KAAI,CAAC,UAAU,CAAC,cAAc,CACrE;qBACJ,EACD,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,yBAAyB,CACjE,CACJ,CAAC;gBACN,CAAC;gBACD,6BAA6B,EAAE;oBAC3B,OAAO,IAAI,+DAA6B,CAAC;wBACrC,cAAc,EAAE,KAAI,CAAC,UAAU,CAAC,cAAc;wBAC9C,WAAW,EAAE,KAAI,CAAC,UAAU,CAAC,iBAAiB;wBAC9C,WAAW,EAAE,IAAI,CAAC,IAAI,CAClB,KAAI,CAAC,UAAU,CAAC,iBAAiB,GAAG,KAAI,CAAC,UAAU,CAAC,cAAc,CACrE;qBACJ,CAAC,CAAC;gBACP,CAAC;gBACD,aAAa,EAAE;oBACX,OAAO,KAAI,CAAC,UAAU,CAAC;gBAC3B,CAAC;aACJ,CAAC;QACN,CAAC;QAEM,iCAAU,GAAjB;YACI,OAAO;gBACH,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;gBAChC,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC;gBACvF,eAAe,EAAE,IAAI,CAAC,eAAe;gBACrC,iBAAiB,EACb,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,YAAY,CAAC,QAAQ,KAAK,UAAU;aAChF,CAAC;QACN,CAAC;QACL,mBAAC;IAAD,CAxQA,AAwQC,CAxQiC,qCAAiB,GAwQlD;IAxQY,oCAAY","file":"Case.List.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Case.List.View\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/GlobalDeclarations.d.ts\" />\n// @Typescript-full\n\nimport * as _ from 'underscore';\nimport * as case_list_tpl from 'case_list.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { CaseCollection } from './Case.Collection';\nimport {\n    FilterOptions,\n    MyAccountListView,\n    SortOptions\n} from '../../RecordViews/JavaScript/MyAccountListView';\nimport { CaseFieldsModel } from './Case.Fields.Model';\nimport { ListHeaderView } from '../../../Commons/ListHeader/JavaScript/ListHeader.View';\nimport { BreadCrumbPage, PageTypeViewOptions } from '../../../Commons/Core/JavaScript/PageTypeView';\nimport { CaseFieldText } from '../../../ServiceContract/SC/Case/Case';\nimport { CaseModel } from './Case.Model';\nimport { CaseListItemElement, CaseListItemsCollectionView } from './CaseListItemsCollectionView';\nimport { jQuery } from '../../../Commons/Core/JavaScript/jquery/JQueryExtras';\nimport { ChildViews } from '../../../Commons/Core/JavaScript/View';\nimport { GlobalViewsPaginationView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.Pagination.View';\nimport { GlobalViewsShowingCurrentView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.ShowingCurrent.View';\nimport { AjaxRequestsKiller } from '../../../Commons/AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\n\ninterface CaseListViewContext {\n    pageHeader: string;\n    hasCases: number;\n    isLoading: boolean;\n    showPagination: boolean;\n    showCurrentPage: boolean;\n    showBackToAccount: boolean;\n}\n\nexport class CaseListView extends MyAccountListView<CaseCollection, CaseListViewContext> {\n    protected template = case_list_tpl;\n\n    protected title = Utils.translate('Support Cases');\n\n    protected pageHeader = Utils.translate('Support Cases');\n\n    private sortOptions: SortOptions[] = [\n        {\n            value: 'caseNumber',\n            name: Utils.translate('by Case number'),\n            selected: true\n        },\n        {\n            value: 'createdDate',\n            name: Utils.translate('by Creation date')\n        },\n        {\n            value: 'lastMessageDate',\n            name: Utils.translate('by Last Message date')\n        }\n    ];\n\n    public attributes = {\n        id: 'CasesList',\n        class: 'caseManagement'\n    };\n\n    protected collection: CaseCollection;\n\n    private readonly fields: CaseFieldsModel;\n\n    private isLoading: boolean;\n\n    private readonly listHeader: ListHeaderView;\n\n    private newCaseMessage: string;\n\n    private newCaseInternalId: string;\n\n    private informNewCase: boolean;\n\n    private readonly showCurrentPage: boolean;\n\n    public constructor(options: PageTypeViewOptions) {\n        super(options);\n        this.collection = new CaseCollection();\n        this.fields = new CaseFieldsModel();\n        this.isLoading = true;\n        this.listenCollection();\n        this.listHeader = this.setupListHeader();\n        this.showCurrentPage = true;\n        this.informNewCase = false;\n        this.newCaseInternalId = '';\n        this.newCaseMessage = '';\n    }\n\n    protected setupListHeader(): ListHeaderView {\n        return new ListHeaderView({\n            view: this,\n            application: this.options.application,\n            collection: this.collection,\n            sorts: this.sortOptions,\n            hidePagination: true\n        });\n    }\n\n    private setLoading(value: boolean): void {\n        this.isLoading = value;\n    }\n\n    private listenCollection(): void {\n        this.collection.on(\n            'reset',\n            (): void => {\n                this.setLoading(false);\n                this.render();\n            }\n        );\n        this.collection.on(\n            'request',\n            (): void => {\n                this.setLoading(true);\n            }\n        );\n    }\n\n    public beforeShowContent<CaseFieldsModel>(): Promise<CaseFieldsModel> {\n        const self = this;\n        return this.fields\n            .fetch({\n                killerId: AjaxRequestsKiller.getKillerId()\n            })\n            .then(\n                (): void => {\n                    self.listHeader.filters = self.initializeFilterOptions();\n                    if (self.options.application.getLayout().getCurrentView()) {\n                        const { newCaseId } = self.options.application.getLayout().getCurrentView();\n                        const {\n                            newCaseMessage\n                        } = self.options.application.getLayout().getCurrentView();\n                        if (newCaseMessage && newCaseId) {\n                            self.newCaseMessage = newCaseMessage;\n                            self.newCaseInternalId = newCaseId;\n                            self.informNewCase = true;\n                            delete self.options.application.getLayout().getCurrentView().newCaseId;\n                            delete self.options.application.getLayout().getCurrentView()\n                                .newCaseMessage;\n                        }\n                    }\n                }\n            );\n    }\n\n    // Array of default filter options\n    // filters always apply on the original collection\n    private initializeFilterOptions(): FilterOptions[] {\n        const filterOptions: FilterOptions[] = [\n            {\n                value: 'all',\n                name: Utils.translate('Show All Statuses'),\n                selected: true\n            }\n        ];\n\n        const statuses: CaseFieldText[] = this.fields ? this.fields.get('statuses') : [];\n\n        _.each(statuses, function(status: CaseFieldText): void {\n            const filterOption: FilterOptions = {\n                value: status.id,\n                name: status.text\n            };\n            filterOptions.push(filterOption);\n        });\n\n        return filterOptions;\n    }\n\n    protected getSelectedMenu(): string {\n        return 'cases_all';\n    }\n\n    public getBreadcrumbPages = (): BreadCrumbPage[] => {\n        return [\n            {\n                text: this.title,\n                href: '/cases'\n            }\n        ];\n    };\n\n    public render(): this {\n        super.render();\n        if (this.informNewCase) {\n            this.informNewCaseCreation();\n\n            if (!this.isLoading) {\n                this.informNewCase = false;\n            }\n        }\n        return this;\n    }\n\n    private informNewCaseCreation(): void {\n        this.highlightNewCase(this.newCaseInternalId);\n        if (this.newCaseMessage) {\n            this.options.application.getLayout().showConfirmationMessage(this.newCaseMessage);\n        }\n    }\n\n    private highlightNewCase(internalId: string): void {\n        const $list_dom = jQuery(this.el).find(`a[data-id=${internalId}]`);\n\n        if ($list_dom && $list_dom.length === 1) {\n            $list_dom.addClass('case-list-new-case-highlight');\n\n            setTimeout(function(): void {\n                $list_dom.removeClass('case-list-new-case-highlight');\n            }, 3000);\n        }\n    }\n\n    protected getChildViews(): ChildViews {\n        return {\n            'Case.List.Items': (): CaseListItemsCollectionView => {\n                const recordsCollection: CaseListItemElement[] = this.collection.map(function(\n                    current_case: CaseModel\n                ): CaseListItemElement {\n                    return {\n                        title: Utils.translate('Case #$(0)', current_case.get('caseNumber')),\n                        detailsURL: `#/cases/${current_case.get('internalid')}`,\n                        internalid: `${current_case.get('internalid')}`,\n\n                        columns: [\n                            {\n                                label: Utils.translate('Subject:'),\n                                type: 'subject',\n                                name: 'subject',\n                                value: current_case.get('title')\n                            },\n                            {\n                                label: Utils.translate('Creation Date:'),\n                                type: 'creation-date',\n                                name: 'creation-date',\n                                value: current_case.get('createdDate').split(' ')[0]\n                            },\n                            {\n                                label: Utils.translate('Last Message:'),\n                                type: 'date',\n                                name: 'last-message',\n                                value: current_case.get('lastMessageDate').split(' ')[0]\n                            },\n                            {\n                                label: Utils.translate('Status:'),\n                                type: 'status',\n                                name: 'status',\n                                value: _.isObject(current_case.get('status'))\n                                    ? current_case.get('status').name\n                                    : current_case.get('status').name\n                            }\n                        ]\n                    };\n                });\n\n                return new CaseListItemsCollectionView(recordsCollection);\n            },\n            'GlobalViews.Pagination': (): GlobalViewsPaginationView => {\n                return new GlobalViewsPaginationView(\n                    _.extend(\n                        {\n                            totalPages: Math.ceil(\n                                this.collection.totalRecordsFound / this.collection.recordsPerPage\n                            )\n                        },\n                        this.options.application.getConfig().defaultPaginationSettings\n                    )\n                );\n            },\n            'GlobalViews.ShowCurrentPage': (): GlobalViewsShowingCurrentView => {\n                return new GlobalViewsShowingCurrentView({\n                    items_per_page: this.collection.recordsPerPage,\n                    total_items: this.collection.totalRecordsFound,\n                    total_pages: Math.ceil(\n                        this.collection.totalRecordsFound / this.collection.recordsPerPage\n                    )\n                });\n            },\n            'List.Header': (): ListHeaderView => {\n                return this.listHeader;\n            }\n        };\n    }\n\n    public getContext(): CaseListViewContext {\n        return {\n            pageHeader: this.pageHeader,\n            hasCases: this.collection.length,\n            isLoading: this.isLoading,\n            showPagination: !!(this.collection.totalRecordsFound && this.collection.recordsPerPage),\n            showCurrentPage: this.showCurrentPage,\n            showBackToAccount:\n                this.options.application.getConfig().siteSettings.sitetype === 'STANDARD'\n        };\n    }\n}\n"]}