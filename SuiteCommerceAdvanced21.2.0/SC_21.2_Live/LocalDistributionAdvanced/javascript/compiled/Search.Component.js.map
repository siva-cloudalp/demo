{"version":3,"sources":["Search.Component.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IA0CF,IAAM,eAAe,GAAG;QACpB,UAAU,EAAE,UAAS,SAAS;YAC1B,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;QACpE,CAAC;QAED,kBAAkB,EAAE,UAAS,SAAS;YAClC,OAAO,kCAAe,CAAC,MAAM,CAAC;gBAC1B,aAAa,EAAE,QAAQ;gBAEvB,WAAW,EAAE,SAAS;gBAEtB,+FAA+F;gBAC/F,oBAAoB;gBACpB,yBAAyB;gBACzB,iBAAiB;gBACjB,MAAM,EAAE,SAAS,MAAM,CAAC,OAA0B;oBAC9C,IAAM,OAAO,GAAG,4BAAY,CAAC,WAAW,EAAE,CAAC;oBAC3C,IAAM,gBAAgB,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC;oBAClE,IAAM,GAAG,GAAG,KAAK,CAAC,cAAc,CAC5B,OAAO,CAAC,eAAe,EAAE,EACzB,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,kBAAkB,EAAE,EAAE,OAAO,EAAE,gBAAgB,CAAC,EACrE,OAAO,CAAC,wBAAwB,EAAE,CACrC,CAAC;oBACF,OAAO,GAAG,CAAC;gBACf,CAAC;gBAED,qCAAqC;gBACrC,WAAW;gBACX,iCAAiC;gBACjC,0BAA0B,EAAE,SAAS,0BAA0B,CAAC,OAAgB;oBAC5E,IAAI,gBAAgB,GAAG,EAAE,CAAC;oBAC1B,IAAI,OAAO,IAAI,OAAO,CAAC,gBAAgB,EAAE;wBACrC,gBAAgB,GAAG,yCAAmB,CAAC,wBAAwB,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;wBAC1F,OAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;qBACpC;oBACD,OAAO,gBAAgB,CAAC;gBAC5B,CAAC;aACJ,CAAC,CAAC;QACP,CAAC;KACJ,CAAC;IAEF,OAAS,eAAe,CAAC","file":"Search.Component.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Search.Component\"/>\nimport { SCBaseComponent } from '../../SC/JavaScript/SC.BaseComponent';\nimport { ProfileModel } from '../../Profile/JavaScript/Profile.Model';\nimport { MasterOptionsHelper } from '../../SC/JavaScript/MasterOptionsHelper';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport Session = require('../../Session/JavaScript/Session');\nimport * as _ from 'underscore';\n\ninterface Filters {\n    c: string;\n    n: string;\n    region: string;\n    id: string;\n    url: string;\n    q: string;\n    commercecategoryid: string;\n    commercecategoryurl: string;\n    commercecategoryname: string;\n    use_pcv: string;\n    pcv_entity: string;\n    pcv_groups: string;\n    fields: string;\n    fieldset: string;\n    matrixchilditems_fieldset: string;\n    correlateditems_fieldset: string;\n    relateditems_fieldset: string;\n    limit: string;\n    offset: string;\n    include: string;\n    'facet.exclude': string;\n    sort: string;\n    pricelevel: string;\n    currency: string;\n    language: string;\n    country: string;\n    callback: string;\n    ssdebug: string;\n    apiMasterOptions: string;\n}\n\nconst SearchComponent = {\n    mountToApp: function(container) {\n        container.registerComponent(this.componentGenerator(container));\n    },\n\n    componentGenerator: function(container) {\n        return SCBaseComponent.extend({\n            componentName: 'Search',\n\n            application: container,\n\n            // @method getUrl Returns the Search API URL with the filters provided as parameters in the URL\n            // @public @extlayer\n            // @param Filters filters\n            // @return string\n            getUrl: function getUrl(filters?: Partial<Filters>): string {\n                const profile = ProfileModel.getInstance();\n                const apiMasterOptions = this._getSearchApiMasterOptions(filters);\n                const url = Utils.addParamsToUrl(\n                    profile.getSearchApiUrl(),\n                    _.extend({}, Session.getSearchApiParams(), filters, apiMasterOptions),\n                    profile.isAvoidingDoubleRedirect()\n                );\n                return url;\n            },\n\n            // @method _getSearchApiMasterOptions\n            // @private\n            // @param string apiMasterOptions\n            _getSearchApiMasterOptions: function _getSearchApiMasterOptions(filters: Filters): Partial<Filters> {\n                let apiMasterOptions = {};\n                if (filters && filters.apiMasterOptions) {\n                    apiMasterOptions = MasterOptionsHelper.getSearchAPIMasterOption(filters.apiMasterOptions);\n                    delete(filters.apiMasterOptions);\n                }\n                return apiMasterOptions;\n            },\n        });\n    }\n};\n\nexport = SearchComponent;\n"]}