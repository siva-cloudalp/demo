{"version":3,"sources":["ReferenceMap.ts"],"names":[],"mappings":"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","file":"ReferenceMap.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ReferenceMap\"/>\n\n// @module StoreLocatorReferenceMapsImplementation\n// @class ReferenceMap\n// This class implemented a facade that is used to separate application and map engine and provide an easy way to implement any maps engine.\n// For changing current maps engine re-implement the operations below.\n\nimport * as _ from 'underscore';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\n\nimport ReferenceMapConfiguration = require('./ReferenceMap.Configuration');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\nconst ReferenceMap = function ReferenceMap() {\n    this.configuration = ReferenceMapConfiguration;\n    // Stores instance of the map created in showMap method\n    this.map = null;\n    // Handles markers created in showPoint() method\n    this.points = [];\n    // {Object} containing latitude, longitude and address\n    this.myposition = {};\n};\n\n// @method load\n// @return Promise object which observes maps library loading\nReferenceMap.prototype.load = function load() {};\n\n// @method isInitialized\n// @return {Boolean} If true, library has been initialized. Otherwise false.\nReferenceMap.prototype.isInitialize = function isInitialized() {};\n\n// @method showMap has the responsability of showing the map in a container and set an instance of map in this.map\n// @param {Object} element. HTML element that will be used for rendering the map\n// @return {Void}\nReferenceMap.prototype.showMap = function showMap() {};\n\n// @method centerMapToDefault\nReferenceMap.prototype.centerMapToDefault = function centerMapToDefault() {};\n\n// @method showPoint creates a point for showing in the map\n// @return {Object} point\nReferenceMap.prototype.showPoint = function showPoint() {};\n\n// @method removePoint removed a point from the map\n// @param {Object} point to remove\n// @return {Void}\nReferenceMap.prototype.removePoint = function removePoint() {};\n\n// @method showAutoCompleteInput shows an initialize the automcomplete feature\n// @param {Object} input html input\n// @return {Object} autocomplete object\nReferenceMap.prototype.showAutoCompleteInput = function showAutoCompleteInput() {};\n\n// @method autoCompleteChange executed when the autoComplete input value changes and sets {Object} this.myposition with latitude, longitude and address\nReferenceMap.prototype.autoCompleteChange = function autoCompleteChange() {};\n\n// @method showMyPosition show current position in the map\n// @param {Object} position\nReferenceMap.prototype.showPosition = function showPosition() {};\n\n// @method showPointList iterates on a list of Store.Locator.Model objects and shows the points in the map.\nReferenceMap.prototype.showPointList = function showPointList(list, map) {\n    const self = this;\n\n    list.each(function(point) {\n        self.points.push(self.showPoint(point, map));\n    });\n};\n\n// @method showPointWithoutInfoWindow shows the point the map without rendering the Location details tooltip\n// @param {StoreLocator.Model}\nReferenceMap.prototype.showPointWithoutInfoWindow = function showPointWithoutInfoWindow() {};\n\n// @method getInfoWindow current instance of the view which shows the Location details tooltip\n// @return {Object}\nReferenceMap.prototype.getInfoWindow = function getInfoWindow() {};\n\n// @method getTooltip returns an instance of StoreLocator.Tooltip.View\n// @param {StoreLocator.Model} model\n// @param {Integer} index\n// @return {StoreLocator.Tooltip.View}\nReferenceMap.prototype.getTooltip = function getTooltip() {};\n\n// @method showInfoWindow renders StoreLocator.Tooltip.View into getInfoWindow for showing the information in the map\n// @param {Object} marker\n// @param {StoreLocator.Model} model\n// @param {Integer} index\nReferenceMap.prototype.showInfoWindow = function showInfoWindow() {};\n\n// @method showInfoWindowOnClick obtain the point of a collection and passing parameters to showInfoWindow\n// @param {Object} point\nReferenceMap.prototype.showInfoWindowOnClick = function showInfoWindowOnClick() {};\n\n// @method clearPointList remove all points from map and this.points\nReferenceMap.prototype.clearPointList = function clearPointList() {\n    const self = this;\n    _.each(this.points, function(point) {\n        self.removePoint(point);\n    });\n\n    this.points = [];\n};\n\n// @method fitBounds centers and zooms the map for making all the points fit.\nReferenceMap.prototype.fitBounds = function fitBounds() {};\n\n// @method getCityGeoCode retrieves an address from latitude and longitude and saves the result in this.myposition.address\nReferenceMap.prototype.getCityGeoCode = function getCityGeoCode() {};\n\n// @method zoomToPoint centers the map in one specific point\n// @param {Object} point\nReferenceMap.prototype.zoomToPoint = function zoomToPoint() {};\n\n// @method getDirectionsUrl\n// @param {Object} source\n// @param {Object} destination\n// @returns {String}\nReferenceMap.prototype.getDirectionsUrl = function getDirectionsUrl(source, destination) {\n    source;\n    destination;\n};\n\n// @method getCurrentPositionGeolocation @return {jQuery.Deferred}\nReferenceMap.prototype.getCurrentPositionGeolocation = function getCurrentPositionGeolocation() {\n    const promise = jQuery.Deferred();\n    const self = this;\n\n    navigator.geolocation.getCurrentPosition(\n        function(position) {\n            self.setPosition({\n                latitude: position.coords.latitude,\n                longitude: position.coords.longitude,\n                address: ''\n            });\n\n            promise.resolveWith(self, [self.myposition]);\n        },\n        function() {\n            promise.rejectWith(self, arguments);\n        }\n    );\n\n    return promise;\n};\n\nReferenceMap.prototype.setPosition = function(position) {\n    this.myposition = position || { refineSearch: true };\n\n    this.trigger('change:position', this.myposition);\n};\n\nReferenceMap.prototype.getPosition = function() {\n    return this.myposition || {};\n};\n\n_.extend(ReferenceMap.prototype, Backbone.Events);\n\nexport = ReferenceMap;\n"]}