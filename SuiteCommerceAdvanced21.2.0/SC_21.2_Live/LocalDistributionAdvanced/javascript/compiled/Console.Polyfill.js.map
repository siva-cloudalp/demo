{"version":3,"sources":["Console.Polyfill.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAEF,yCAAyC;IACzC,0BAA0B;IAC1B,wDAAwD;IACxD,8BAA8B;IAC9B,IAAM,UAAU,GAAQ,MAAM,CAAC;IAC/B,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,WAAW,EAAE;QACvC,UAAU,CAAC,OAAO,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,4BAA4B;QAC5B,IAAM,IAAI,GAAG,cAAY,CAAC,CAAC;QAC3B,sCAAsC;QACtC,IAAM,OAAO,GAAG;YACZ,QAAQ;YACR,OAAO;YACP,OAAO;YACP,OAAO;YACP,OAAO;YACP,KAAK;YACL,QAAQ;YACR,WAAW;YACX,OAAO;YACP,gBAAgB;YAChB,UAAU;YACV,MAAM;YACN,KAAK;YACL,SAAS;YACT,YAAY;YACZ,OAAO;YACP,MAAM;YACN,SAAS;YACT,OAAO;YACP,MAAM;SACT,CAAC;QACF,qBAAqB;QACrB,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5B,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SACzC;KACJ;IACD,uBAAuB;IACvB,IAAI,OAAO,UAAU,CAAC,OAAO,CAAC,MAAM,KAAK,WAAW,EAAE;QAClD,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;KAClC;IACD,IAAM,eAAe,GAAQ,UAAU,CAAC,OAAO,CAAC;IAChD,OAAS,eAAe,CAAC","file":"Console.Polyfill.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Console.Polyfill\"/>\n// Defines console for IE.\n// Used to prevent the application to stop working in IE\n// verify if there not console\nconst windowCast: any = window;\nif (typeof window.console === 'undefined') {\n    windowCast.console = {};\n\n    let i = 0;\n    // defining default function\n    const noop = function() {};\n    // defining methods names for console.\n    const methods = [\n        'assert',\n        'error',\n        'clear',\n        'count',\n        'debug',\n        'dir',\n        'dirxml',\n        'exception',\n        'group',\n        'groupCollapsed',\n        'groupEnd',\n        'info',\n        'log',\n        'profile',\n        'profileEnd',\n        'table',\n        'time',\n        'timeEnd',\n        'trace',\n        'warn'\n    ];\n    // adding all methods\n    for (; i < methods.length; i++) {\n        windowCast.console[methods[i]] = noop;\n    }\n}\n// adding memory object\nif (typeof windowCast.console.memory === 'undefined') {\n    windowCast.console.memory = {};\n}\nconst ConsolePolyfill: any = windowCast.console;\nexport = ConsolePolyfill;\n"]}