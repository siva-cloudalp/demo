{"version":3,"sources":["PickupInStore.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAiBF,IAAM,aAAa;IACf,wDAAwD;IACxD;QACI,qBAAqB;QACrB,2CAA2C;QAC3C,iBAAiB;QACjB,UAAU,EAAE,SAAS,UAAU,CAAC,WAAW;YACvC,IAAI,CAAC,6BAAa,CAAC,GAAG,CAAC,qCAAqC,CAAC,EAAE;gBAC3D,OAAO;aACV;YAED,oBAAoB,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAE/D,oBAAoB,CAAC,wBAAwB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAExE,uDAAuD;YACvD,oEAAoE;YACpE,kDAAkD;YAClD,sBAAsB,CAAC,aAAa,CAAC;gBACjC,oBAAoB,EAAE,SAAS,eAAe,CAAC,OAAO;oBAClD,OAAO;wBACH,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;4BAC9C,OAAO,IAAI,iBAAiB,CAAC;gCACzB,KAAK,EAAE,OAAO,CAAC,KAAK;gCACpB,WAAW,EAAE,WAAW;6BAC3B,CAAC,CAAC;yBACN;wBACD,OAAO,IAAI,oBAAoB,CAAC;4BAC5B,KAAK,EAAE,OAAO,CAAC,KAAK;yBACvB,CAAC,CAAC;oBACP,CAAC,CAAC;gBACN,CAAC;aACJ,CAAC,CAAC;YAEH,8CAA8C;YAC9C,aAAa,CAAC,aAAa,CAAC;gBACxB,oBAAoB,EAAE,SAAS,eAAe,CAAC,OAAO;oBAClD,OAAO;wBACH,OAAO,IAAI,iBAAiB,CAAC;4BACzB,KAAK,EAAE,OAAO,CAAC,KAAK;4BACpB,WAAW,EAAE,WAAW;4BACxB,MAAM,EAAE,MAAM;yBACjB,CAAC,CAAC;oBACP,CAAC,CAAC;gBACN,CAAC;aACJ,CAAC,CAAC;YAEH,8CAA8C;YAC9C,iBAAiB,CAAC,aAAa,CAAC;gBAC5B,oBAAoB,EAAE,SAAS,eAAe,CAAC,OAAO;oBAClD,OAAO;wBACH,OAAO,IAAI,iBAAiB,CAAC;4BACzB,KAAK,EAAE,OAAO,CAAC,KAAK;4BACpB,WAAW,EAAE,WAAW;4BACxB,MAAM,EAAE,MAAM;yBACjB,CAAC,CAAC;oBACP,CAAC,CAAC;gBACN,CAAC;aACJ,CAAC,CAAC;YAEH,mDAAmD;YACnD,kBAAkB,CAAC,aAAa,CAAC;gBAC7B,iBAAiB,EAAE,SAAS,eAAe,CAAC,OAAO;oBAC/C,OAAO;wBACH,IACI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,eAAe,CAAC;4BAClC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC,EACrC;4BACE,OAAO,IAAI,mCAAmC,CAAC;gCAC3C,KAAK,EAAE,OAAO,CAAC,KAAK;gCACpB,WAAW,EAAE,WAAW;6BAC3B,CAAC,CAAC;yBACN;wBACD,OAAO,IAAI,oBAAoB,CAAC;4BAC5B,KAAK,EAAE,OAAO,CAAC,KAAK;yBACvB,CAAC,CAAC;oBACP,CAAC,CAAC;gBACN,CAAC;aACJ,CAAC,CAAC;YAEH,WAAW,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAS,IAAI;gBACxD,IAAI,IAAI,YAAY,sBAAsB,EAAE;oBACxC,IAAM,aAAW,GACb,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBAE3E,IAAI,aAAW,EAAE;wBACb,QAAQ,CAAC,cAAc,CAAC,aAAW,CAAC,CAAC,IAAI,CAAC;4BACtC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAG,CAAC,aAAW,CAAC,CAAC,CAAC;wBAC1D,CAAC,CAAC,CAAC;qBACN;iBACJ;YACL,CAAC,CAAC,CAAC;QACP,CAAC;KACJ,CAAC;IAEN,OAAS,aAAa,CAAC","file":"PickupInStore.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PickupInStore\"/>\n\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\n\nimport Location = require('../../Location.SCA/JavaScript/Location');\nimport ProductDetailsFullView = require('../../ProductDetails/JavaScript/ProductDetails.Full.View');\nimport CartLinesView = require('../../../Commons/Cart/JavaScript/Cart.Lines.View');\nimport CartLinesFreeView = require('../../../Commons/Cart/JavaScript/Cart.Lines.Free.View');\nimport FacetsItemCellView = require('../../../Commons/Facets/JavaScript/Facets.ItemCell.View');\nimport PickupInStoreFulfillmentOptionsView = require('./PickupInStore.FulfillmentOptions.View');\nimport ProductLineCommonUrl = require('../../../Commons/ProductLine/JavaScript/ProductLine.Common.Url');\nimport ProductLineStockView = require('../../../Commons/ProductLine/JavaScript/ProductLine.Stock.View');\nimport PickupInStoreView = require('./PickupInStore.View');\nimport Cookies = require('../../../Commons/Utilities/JavaScript/js.cookie');\n\nconst PickUpInStore: any =\n    // @class ProductDetailToQuote @extend ApplicationModule\n    {\n        // @method mountToApp\n        // @param {ApplicationSkeleton} application\n        // @return {Void}\n        mountToApp: function mountToApp(application) {\n            if (!Configuration.get('siteSettings.isPickupInStoreEnabled')) {\n                return;\n            }\n\n            ProductLineCommonUrl.attributesReflectedInURL.push('location');\n\n            ProductLineCommonUrl.attributesReflectedInURL.push('fulfillmentChoice');\n\n            // Set the extra children of the ProductDetailsFullView\n            // We show the pickup in store view only if the item is purchasable.\n            // If it is not, we show the Out of Stock message.\n            ProductDetailsFullView.addChildViews({\n                'Product.Stock.Info': function wrapperFunction(options) {\n                    return function() {\n                        if (options.model.getItem().get('ispurchasable')) {\n                            return new PickupInStoreView({\n                                model: options.model,\n                                application: application\n                            });\n                        }\n                        return new ProductLineStockView({\n                            model: options.model\n                        });\n                    };\n                }\n            });\n\n            // Set the extra children of the CartLinesView\n            CartLinesView.addChildViews({\n                'Product.Stock.Info': function wrapperFunction(options) {\n                    return function() {\n                        return new PickupInStoreView({\n                            model: options.model,\n                            application: application,\n                            source: 'cart'\n                        });\n                    };\n                }\n            });\n\n            // Set the extra children of the CartLinesView\n            CartLinesFreeView.addChildViews({\n                'Product.Stock.Info': function wrapperFunction(options) {\n                    return function() {\n                        return new PickupInStoreView({\n                            model: options.model,\n                            application: application,\n                            source: 'cart'\n                        });\n                    };\n                }\n            });\n\n            // Set the extra children of the FacetsItemCellView\n            FacetsItemCellView.addChildViews({\n                'ItemViews.Stock': function wrapperFunction(options) {\n                    return function() {\n                        if (\n                            options.model.get('ispurchasable') &&\n                            options.model.get('_isfulfillable')\n                        ) {\n                            return new PickupInStoreFulfillmentOptionsView({\n                                model: options.model,\n                                application: application\n                            });\n                        }\n                        return new ProductLineStockView({\n                            model: options.model\n                        });\n                    };\n                }\n            });\n\n            application.getLayout().on('beforeAppendView', function(view) {\n                if (view instanceof ProductDetailsFullView) {\n                    const location_id =\n                        view.model.get('location').get('internalid') || Cookies.get('myStore');\n\n                    if (location_id) {\n                        Location.fetchLocations(location_id).done(function() {\n                            view.model.set('location', Location.get(location_id));\n                        });\n                    }\n                }\n            });\n        }\n    };\n\nexport = PickUpInStore;\n"]}