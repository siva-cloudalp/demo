{"version":3,"sources":["OrderWizard.Module.CartItems.PickupInStore.Package.View.ts"],"names":[],"mappings":"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","file":"OrderWizard.Module.CartItems.PickupInStore.Package.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"OrderWizard.Module.CartItems.PickupInStore.Package.View\"/>\n\nimport '../../SCA/JavaScript/Configuration';\nimport * as order_wizard_cartitems_module_pickup_in_store_package_tpl from 'order_wizard_cartitems_module_pickup_in_store_package.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport Location = require('../../Location.SCA/JavaScript/Location');\nimport LocationVenueDetailsView = require('../../Location.SCA/JavaScript/Location.VenueDetails.View');\nimport { TransactionLineViewsCellNavigableView } from '../../../Commons/Transaction.Line.Views/JavaScript/Transaction.Line.Views.Cell.Navigable.View';\nimport LiveOrderModel = require('../../../Commons/LiveOrder/JavaScript/LiveOrder.Model');\n\n// @class OrderWizard.Module.CartItems.PickupInStore.Package @extends Backbone.View\nexport = BackboneView.extend({\n    // @property {Function} template\n    template: order_wizard_cartitems_module_pickup_in_store_package_tpl,\n\n    initialize: function(options) {\n        this.model = options.model;\n        this.application = options.application;\n        this.lines = options.model.get('lines');\n        this.location = this.lines[0].get('location');\n\n        const self = this;\n\n        if (!this.location.get('name')) {\n            Location.fetchLocations(this.location.get('internalid')).done(function() {\n                self.location = new Backbone.Model(Location.get(self.location.get('internalid')));\n\n                self.render();\n            });\n        }\n    },\n\n    // @property {Object} childViews\n    childViews: {\n        'Items.Collection': function() {\n            return new BackboneCollectionView({\n                collection: this.lines,\n                childView: TransactionLineViewsCellNavigableView,\n                viewsPerRow: 1,\n                childViewOptions: {\n                    navigable: false,\n\n                    detail1Title: Utils.translate('Qty:'),\n                    detail1: 'quantity',\n\n                    detail2Title: Utils.translate('Unit price:'),\n                    detail2: 'rate_formatted',\n\n                    detail3Title: Utils.translate('Amount:'),\n                    detail3: 'total_formatted'\n                }\n            });\n        },\n\n        'PickupInStore.StoreLocationInfo': function() {\n            return new LocationVenueDetailsView({\n                model: this.location,\n                application: this.application,\n                showAddress: true\n            });\n        }\n    },\n\n    // @method getContext @returns {OrderWizard.Module.CartItems.Context}\n    getContext: function() {\n        const { lines } = this;\n        const item_count = LiveOrderModel.countItems(lines);\n        // @class OrderWizard.Module.CartItems.Context\n        return {\n            // @property {LiveOrder.Model} model\n            model: this.model,\n            // @property {Boolean} itemCountGreaterThan1\n            itemCountGreaterThan1: item_count > 1,\n            // @property {Number} itemCount\n            itemCount: item_count,\n            // @property {Boolean} showOpenedAccordion\n            showOpenedAccordion: !!this.options.show_opened_accordion,\n            // @property {Boolean} isAccordionPrimary\n            isAccordionPrimary: !!this.options.is_accordion_primary,\n            // @property {Boolean} showEditCartButton\n            showEditCartButton: !!this.options.show_edit_cart_button,\n            // @property {Boolean} showHeaders\n            showHeaders: !!this.options.show_headers,\n            // @property {Boolean} showMobile\n            showMobile: !!this.options.show_mobile,\n            // @property {StoreLocation.Model} location\n            location: this.location,\n            // @property {Boolean} showLocation\n            showLocation: !!this.location.get('name') && !this.options.hide_location\n        };\n    }\n});\n"]}