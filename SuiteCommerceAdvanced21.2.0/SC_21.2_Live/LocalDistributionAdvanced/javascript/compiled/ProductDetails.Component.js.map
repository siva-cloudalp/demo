{"version":3,"sources":["ProductDetails.Component.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;IAUK,IAAM,uBAAuB,GAAa,SAAS,gCAAgC,CAAC,WAAW;QAClG,yHAAyH;QACzH,qJAAqJ;QACrJ,IAAM,gBAAgB,GAAG,iBAAiB,CAAC,MAAM,CAAC;YAC9C,aAAa,EAAE,KAAK;YAEpB,WAAW,EAAE,WAAW;YAExB,oGAAoG;YACpG,WAAW;YACX,qDAAqD;YACrD,uGAAuG;YACvG,oBAAoB,EAAE,SAAS,oBAAoB,CAAC,IAAI;gBACpD,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,CAAC;gBAEtF,IAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBACtD,IAAM,iBAAiB,GAAG,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAE1E,OAAO,CACH,IAAI;oBACJ,CAAC,eAAe,KAAK,IAAI,CAAC,aAAa;wBACnC,eAAe,KAAK,IAAI,CAAC,cAAc;wBACvC,iBAAiB,KAAK,IAAI,CAAC,aAAa;wBACxC,iBAAiB,KAAK,IAAI,CAAC,cAAc,CAAC,CACjD,CAAC;YACN,CAAC;YAED,YAAY,EAAE,0BAA0B;YAExC,aAAa,EAAE,0BAA0B;YAEzC,cAAc,EAAE,+BAA+B;YAE/C,wBAAwB,EAAE,SAAS,wBAAwB;gBACvD,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACrD,CAAC;YAED,sHAAsH;YACtH,oBAAoB;YACpB,0DAA0D;YAC1D,sHAAsH;YACtH,kFAAkF;YAClF,SAAS,EAAE,SAAS,SAAS,CAAC,cAAc,EAAE,KAAK;gBAC/C,IAAI;oBACA,IAAI,CAAC,cAAc,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;wBAChD,OAAO,IAAI,CAAC,YAAY,CACpB,eAAe,EACf,+DAA+D,CAClE,CAAC;qBACL;oBAED,IAAM,YAAY,GACd,IAAI,CAAC,gBAAgB,IAAI,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,CAAC;oBAEtE,IAAI,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;wBAC/C,OAAO,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC,IAAI,CAC3D,UAAS,gBAAgB;4BACrB,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC;wBACzD,CAAC,EACD;4BACI,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBAC5C,CAAC,CACJ,CAAC;qBACL;oBAED,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC3C;gBAAC,OAAO,KAAK,EAAE;oBACZ,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC3C;YACL,CAAC;YAED,wFAAwF;YACxF,oBAAoB;YACpB,2BAA2B;YAC3B,kFAAkF;YAClF,WAAW,EAAE,SAAS,WAAW,CAAC,QAAQ;gBACtC,IAAI;oBACA,IAAI,YAAY,SAAA,CAAC;oBAEjB,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;wBACvB,OAAO,IAAI,CAAC,YAAY,CACpB,eAAe,EACf,yDAAyD,CAC5D,CAAC;qBACL;oBACD,IAAI,QAAQ,IAAI,CAAC,EAAE;wBACf,OAAO,IAAI,CAAC,YAAY,CACpB,eAAe,EACf,6CAA6C,CAChD,CAAC;qBACL;oBAED,YAAY,GAAG,IAAI,CAAC,gBAAgB,IAAI,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,CAAC;oBAEjF,IAAI,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;wBAC/C,OAAO,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,IAAI,CACpD;4BACI,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;wBAC3C,CAAC,EACD;4BACI,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBAC5C,CAAC,CACJ,CAAC;qBACL;oBAED,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC3C;gBAAC,OAAO,KAAK,EAAE;oBACZ,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC3C;YACL,CAAC;YAED,mHAAmH;YACnH,oBAAoB;YACpB,6CAA6C;YAC7C,WAAW,EAAE,SAAS,WAAW;gBAC7B,IAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,IAAI,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,CAAC;gBAEvF,IAAI,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;oBAC/C,OAAO,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;iBAC7C;gBAED,OAAO,IAAI,CAAC;YAChB,CAAC;YAED,wIAAwI;YACxI,0GAA0G;YAC1G,+DAA+D;YAC/D,2GAA2G;YAC3G,uBAAuB,EAAE,SAAS,uBAAuB,CAAC,cAAc;gBACpE,IAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,IAAI,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,CAAC;gBAEvF,IAAI,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;oBAC/C,OAAO,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC,CAAC;iBACrF;gBAED,OAAO,IAAI,CAAC;YAChB,CAAC;YAED,6EAA6E;YAC7E,2DAA2D;YAC3D,kBAAkB,EAAE,SAAS,kBAAkB;gBAC3C,IAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,IAAI,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,CAAC;gBAEvF,IAAI,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;oBAC/C,IAAM,oBAAoB,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;oBACjF,OAAO,KAAK,CAAC,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;iBACtD;gBACD,OAAO,IAAI,CAAC;YAChB,CAAC;YAED,iFAAiF;YACjF,8DAA8D;YAC9D,2BAA2B;YAC3B,YAAY,EAAE,SAAS,YAAY;gBAC/B,IAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,IAAI,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,CAAC;gBAEvF,IAAI,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;oBAC/C,OAAO,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;iBAC5D;gBAED,OAAO,IAAI,CAAC;YAChB,CAAC;YAED,QAAQ,EAAE,SAAS,QAAQ;gBACvB,IAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,IAAI,WAAW,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,CAAC;gBACvF,IAAI,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;oBAC/C,IAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;oBAChD,IAAI,SAAS,EAAE;wBACX,OAAO,kBAAkB,CAAC,SAAS,CAAC,CAAC;qBACxC;yBAAM;wBACH,OAAO,kBAAkB,CAAC,EAAE,CAAC,CAAC;qBACjC;iBACJ;gBAED,OAAO,kBAAkB,CAAC,EAAE,CAAC,CAAC;YAClC,CAAC;SACJ,CAAC,CAAC;QAEH,IAAM,kBAAkB,GAAG,SAAS,kBAAkB,CAAC,SAAS;YACrD,IAAA,KAAK,GAA6D,SAAS,MAAtE,EAAE,eAAe,GAA4C,SAAS,gBAArD,EAAE,aAAa,GAA6B,SAAS,cAAtC,EAAE,uBAAuB,GAAI,SAAS,wBAAb,CAAc;YACnF,OAAO;gBACH,KAAK,OAAA;gBACL,eAAe,iBAAA;gBACf,aAAa,eAAA;gBACb,uBAAuB,yBAAA;aAC1B,CAAA;QACL,CAAC,CAAA;QAED,IAAM,4BAA4B,GAAG,SAAS,4BAA4B,CACtE,YAAY,EACZ,KAAK;YAEL,OAAO,EAAE,YAAY,cAAA,EAAE,KAAK,OAAA,EAAE,CAAC;QACnC,CAAC,CAAC;QAEF,IAAM,2BAA2B,GAAG,SAAS,2BAA2B,CACpE,IAAI;YAEJ,OAAO;gBACH,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,KAAK;aACpB,CAAC;QACN,CAAC,CAAC;QAEF,IAAM,2BAA2B,GAAG,SAAS,2BAA2B,CACpE,IAAI;YAEJ,OAAO;gBACH,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,SAAS,EAAE,IAAI,CAAC,SAAS;aAC5B,CAAC;QACN,CAAC,CAAC;QAEF,IAAM,eAAe,GAAU;YAC3B,yGAAyG;YACzG;gBACI,KAAK,EAAE,oBAAoB;gBAC3B,KAAK,EAAE,uBAAuB;gBAC9B,SAAS,EAAE,4BAA4B;aAC1C;YACD,sFAAsF;YACtF;gBACI,KAAK,EAAE,mBAAmB;gBAC1B,KAAK,EAAE,sBAAsB;gBAC7B,SAAS,EAAE,2BAA2B;aACzC;YACD,0GAA0G;YAC1G,EAAE,KAAK,EAAE,sBAAsB,EAAE,KAAK,EAAE,sBAAsB,EAAE,SAAS,EAAE,IAAI,EAAE;YACjF,wFAAwF;YACxF,EAAE,KAAK,EAAE,qBAAqB,EAAE,KAAK,EAAE,qBAAqB,EAAE,SAAS,EAAE,IAAI,EAAE;YAC/E,qIAAqI;YACrI;gBACI,KAAK,EAAE,mBAAmB;gBAC1B,KAAK,EAAE,mBAAmB;gBAC1B,SAAS,EAAE,2BAA2B;aACzC;YACD,kHAAkH;YAClH,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,IAAI,EAAE;SAC5E,CAAC;QAEF,WAAW,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,kBAAkB,EAAE,SAAS,6BAA6B,CAAC,IAAI;YACtF,IAAI,gBAAgB,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;gBACnD,gBAAgB,CAAC,sBAAsB,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACxE;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,gBAAgB,CAAC;IAC5B,CAAC,CAAC;IA1PW,QAAA,uBAAuB,2BA0PlC","file":"ProductDetails.Component.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductDetails.Component\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\n\nimport SCVisualComponent = require('../../../Commons/SC/JavaScript/SC.VisualComponent');\n\nexport const ProductDetailsComponent: Function = function ProductDetailsComponentGenerator(application) {\n    // @class ProductDetails.Component The ProductDetails component let's the user interact with most important aspect of the\n    // Product Details Page, like setting options, changing quantity, and obtain item's related information. @extend SC.VisualComponent @public @extlayer\n    const privateComponent = SCVisualComponent.extend({\n        componentName: 'PDP',\n\n        application: application,\n\n        // @method _isViewFromComponent Indicate if the passed-in the View is a PDP of the current component\n        // @private\n        // @param {Backbone.View} view Any view of the system\n        // @return {Boolean} True in case the passed in View is a PDP of the current Component, false otherwise\n        _isViewFromComponent: function _isViewFromComponent(view) {\n            view = view || this.viewToBeRendered || this.application.getLayout().getCurrentView();\n\n            const view_identifier = this._getViewIdentifier(view);\n            const view_prototype_id = view && this._getViewIdentifier(view.prototype);\n\n            return (\n                view &&\n                (view_identifier === this.PDP_FULL_VIEW ||\n                    view_identifier === this.PDP_QUICK_VIEW ||\n                    view_prototype_id === this.PDP_FULL_VIEW ||\n                    view_prototype_id === this.PDP_QUICK_VIEW)\n            );\n        },\n\n        DEFAULT_VIEW: 'ProductDetails.Full.View',\n\n        PDP_FULL_VIEW: 'ProductDetails.Full.View',\n\n        PDP_QUICK_VIEW: 'ProductDetails.QuickView.View',\n\n        _getComponentIdentifiers: function _getComponentIdentifiers(): string[] {\n            return [this.PDP_FULL_VIEW, this.PDP_QUICK_VIEW];\n        },\n\n        // @method setOption Set an option of the current PDP. It will only work if the current view is a Product Details Page\n        // @public @extlayer\n        // @param {String} cart_option_id Identifier of the option\n        // @param {String} value Optional value. In case of invalid or not specified value the option selected will be cleaned\n        // @return {jQuery.Deferred<Boolean>} Indicate if the action was successful or not\n        setOption: function setOption(cart_option_id, value) {\n            try {\n                if (!cart_option_id || !_.isString(cart_option_id)) {\n                    return this._reportError(\n                        'INVALID_PARAM',\n                        'Invalid parameter \"cart_option_id\". It must be a valid string'\n                    );\n                }\n\n                const current_view =\n                    this.viewToBeRendered || application.getLayout().getCurrentView();\n\n                if (this._isViewFromComponent(current_view, true)) {\n                    return current_view.model.setOption(cart_option_id, value).then(\n                        function(operation_result) {\n                            return jQuery.Deferred().resolve(!!operation_result);\n                        },\n                        function() {\n                            return jQuery.Deferred().resolve(false);\n                        }\n                    );\n                }\n\n                return jQuery.Deferred().resolve(false);\n            } catch (error) {\n                return jQuery.Deferred().resolve(false);\n            }\n        },\n\n        // @method setQuantity Set the quantity of the current PDP. If the current View is a PDP\n        // @public @extlayer\n        // @param {Number} quantity\n        // @return {jQuery.Deferred<Boolean>} Indicate if the operation ended successfully\n        setQuantity: function setQuantity(quantity) {\n            try {\n                let current_view;\n\n                if (!_.isNumber(quantity)) {\n                    return this._reportError(\n                        'INVALID_PARAM',\n                        'Invalid parameter \"quantity\". It must be a valid number'\n                    );\n                }\n                if (quantity <= 0) {\n                    return this._reportError(\n                        'INVALID_PARAM',\n                        'Parameter \"quantity\" must be greater than 0'\n                    );\n                }\n\n                current_view = this.viewToBeRendered || application.getLayout().getCurrentView();\n\n                if (this._isViewFromComponent(current_view, true)) {\n                    return current_view.model.set('quantity', quantity).then(\n                        function() {\n                            return jQuery.Deferred().resolve(true);\n                        },\n                        function() {\n                            return jQuery.Deferred().resolve(false);\n                        }\n                    );\n                }\n\n                return jQuery.Deferred().resolve(false);\n            } catch (error) {\n                return jQuery.Deferred().resolve(false);\n            }\n        },\n\n        // @method getItemInfo Get a JSON representation of the current Model. If the current View is a PDP, null otherwise\n        // @public @extlayer\n        // @return {Transaction.Line.Model.JSON|null}\n        getItemInfo: function getItemInfo() {\n            const current_view = this.viewToBeRendered || application.getLayout().getCurrentView();\n\n            if (this._isViewFromComponent(current_view, true)) {\n                return Utils.deepCopy(current_view.model);\n            }\n\n            return null;\n        },\n\n        // @method getSelectedMatrixChilds Filters all the child items that apply for the passed in matrix_options or the current item selection\n        // If no option is sent, and there is no options selected, then it will return all the matrix child items.\n        // @param {Product.OptionHelper.MatrixSelection} matrix_options\n        // @return {Array<Item>} All the children of a matrix that complies with the current or passed in selection\n        getSelectedMatrixChilds: function getSelectedMatrixChilds(matrix_options) {\n            const current_view = this.viewToBeRendered || application.getLayout().getCurrentView();\n\n            if (this._isViewFromComponent(current_view, true)) {\n                return Utils.deepCopy(current_view.model.getSelectedMatrixChilds(matrix_options));\n            }\n\n            return null;\n        },\n\n        // @method getAllMatrixChilds Returns all the matrix child of the matrix item\n        // @returns {Array<Item>} All the children of a matrix item\n        getAllMatrixChilds: function getAllMatrixChilds() {\n            const current_view = this.viewToBeRendered || application.getLayout().getCurrentView();\n\n            if (this._isViewFromComponent(current_view, true)) {\n                const item_matrix_children = current_view.model.get('item').get('_matrixChilds');\n                return Utils.deepCopy(item_matrix_children.models);\n            }\n            return null;\n        },\n\n        // @method getStockInfo Returns information about the stock available of an item.\n        // If it is an Inventory Item will return the stock available.\n        // @return {Item.StockInfo}\n        getStockInfo: function getStockInfo() {\n            const current_view = this.viewToBeRendered || application.getLayout().getCurrentView();\n\n            if (this._isViewFromComponent(current_view, true)) {\n                return Utils.deepCopy(current_view.model.getStockInfo());\n            }\n\n            return null;\n        },\n\n        getPrice: function getPrice() {\n            const current_view = this.viewToBeRendered || application.getLayout().getCurrentView();\n            if (this._isViewFromComponent(current_view, true)) {\n                const priceData = current_view.model.getPrice();\n                if (priceData) {\n                    return _normalizeGetPrice(priceData);\n                } else {\n                    return _normalizeGetPrice({});\n                }\n            }\n\n            return _normalizeGetPrice({});\n        }\n    });\n\n    const _normalizeGetPrice = function _normalizeGetPrice(priceData) {\n        const {price, price_formatted, compare_price, compare_price_formatted} = priceData;\n        return {\n            price,\n            price_formatted,\n            compare_price,\n            compare_price_formatted,\n        }\n    }\n\n    const _normalizeChangeOptionBefore = function _normalizeChangeOptionBefore(\n        optionCartId,\n        value\n    ) {\n        return { optionCartId, value };\n    };\n\n    const _normalizeChangeOptionAfter = function _normalizeChangeOptionAfter(\n        data\n    ) {\n        return {\n            cartOptionId: data.cartOptionId,\n            itemOptionId: data.itemOptionId,\n            label: data.label,\n            type: data.type,\n            value: data.value\n        };\n    };\n\n    const _normalizebeforeImageChange = function _normalizebeforeImageChange(\n        data\n    ) {\n        return {\n            currentIndex: data.currentIndex,\n            nextIndex: data.nextIndex\n        };\n    };\n\n    const innerToOuterMap: any[] = [\n        // @event beforeOptionSelection Cancelable event triggered before an option is selected @public @extlayer\n        {\n            inner: 'beforeChangeOption',\n            outer: 'beforeOptionSelection',\n            normalize: _normalizeChangeOptionBefore\n        },\n        // @event afterOptionSelection Triggered after an option is selected @public @extlayer\n        {\n            inner: 'afterChangeOption',\n            outer: 'afterOptionSelection',\n            normalize: _normalizeChangeOptionAfter\n        },\n        // @event beforeQuantityChange Cancelable event triggered before the quantity is changed @public @extlayer\n        { inner: 'beforeChangeQuantity', outer: 'beforeQuantityChange', normalize: null },\n        // @event afterQuantityChange @public Triggered after the quantity is changed. @extlayer\n        { inner: 'afterChangeQuantity', outer: 'afterQuantityChange', normalize: null },\n        // @event beforeImageChange Cancelable event triggered before the main image displayed in the Details page changes. @public @extlayer\n        {\n            inner: 'beforeChangeImage',\n            outer: 'beforeImageChange',\n            normalize: _normalizebeforeImageChange\n        },\n        // @event afterImageChange Triggered after the main image displayed in the Details page changes. @public @extlayer\n        { inner: 'afterChangeImage', outer: 'afterImageChange', normalize: null }\n    ];\n\n    application.getLayout().on('beforeAppendView', function onApplicationBeforeAppendView(view) {\n        if (privateComponent._isViewFromComponent(view, true)) {\n            privateComponent._suscribeToInnerEvents(innerToOuterMap, view.model);\n        }\n    });\n\n    return privateComponent;\n};\n"]}