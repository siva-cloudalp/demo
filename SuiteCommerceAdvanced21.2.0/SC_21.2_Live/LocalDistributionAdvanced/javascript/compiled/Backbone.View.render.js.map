{"version":3,"sources":["Backbone.View.render.ts"],"names":[],"mappings":"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","file":"Backbone.View.render.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Backbone.View.render\"/>\n\nimport * as _ from 'underscore';\n\nimport '../../Backbone.CompositeView/JavaScript/Backbone.CompositeView';\nimport '../../Utilities/JavaScript/backbone.validation';\nimport '../../Utilities/JavaScript/Handlebars';\nimport '../../HandlebarsExtras/JavaScript/HandlebarsExtras';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\n\nimport { SCBaseComponentChildViewsComponent } from '../../SC/JavaScript/SC.BaseComponent.ChildViewsComponent';\n\nimport PluginContainer = require('../../PluginContainer/JavaScript/PluginContainer');\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\n/*\n@module BackboneExtras\n#Backbone.View.render()\nThis file extends native Backbone.View with a custom rendering method. Basically a View must have the 'template'\nproperty pointing to a Function and that function is evaluated using the result of view.getContext()\n@module Backbone\n@class Backbone.View\n*/\n\n_.extend(BackboneView.prototype, {\n    // @method getTemplateContext @return {Object} the exact object that is passed to the template function as parameter\n    getTemplateContext: function() {\n        let template_context;\n\n        if (this.getContext) {\n            template_context = this.getContext();\n\n            const contextProperties = {\n                ...this.constructor.extraContextProperties,\n                ...SCBaseComponentChildViewsComponent.getModifiedContextProperty(this)\n            };\n\n            if (!_.isEmpty(contextProperties)) {\n                // Item key mapping? >> get item info using item key mapping\n                // what about Model property?\n                const safe_context = Utils.deepCopy(template_context);\n\n                _.each(contextProperties, (propertyGenerator: any, propertyName: string) => {\n                    template_context[propertyName] = propertyGenerator.fn(safe_context);\n                });\n            }\n        } else {\n            template_context = {};\n            if (this.model) {\n                template_context.model = this.model;\n            }\n            if (this.collection) {\n                template_context.collection = this.collection;\n            }\n        }\n        return template_context;\n    },\n\n    // @method compileTemplate executes the template passing the context which generates a HTML string. @return {String}\n    compileTemplate: function() {\n        const template_context = this.getTemplateContext();\n\n        this.template =\n            BackboneView.preCompile.executeAll(this.template, this, template_context) ||\n            this.template;\n\n        if (!this.template) {\n            throw new Error(\"View doesn't have a template\");\n        }\n\n        if (!_.isFunction(this.template)) {\n            const templateName = this.template + '';\n            this.template = Utils.requireModules(templateName);\n            if (!this.template) {\n                console.log('View render error, template not found: ', templateName);\n            }\n        }\n\n        let tmpl_str = this.template(template_context);\n\n        tmpl_str = BackboneView.postCompile.executeAll(tmpl_str, this);\n\n        return tmpl_str;\n    },\n\n    // @method _initialize\n    _initialize: function() {},\n\n    // @method initialize\n    initialize: function() {\n        this._initialize();\n    },\n\n    getEvents: function() {\n        return this.events;\n    },\n\n    // @method _render Implements the templates execution, rendering and append to DOM.\n    // Plugins can be hooked in these interesting 'template rendering' moments to perform customizations.\n    _render: function() {\n        if (this.events) {\n            this.undelegateEvents();\n        }\n\n        const tmpl_str = this.compileTemplate();\n\n        // Rendering: generating DOM from the HTML string\n        let $tmpl =\n            SC.ENVIRONMENT.jsEnvironment === 'server'\n                ? jQuery('<div/>').append(tmpl_str)\n                : jQuery(tmpl_str);\n\n        $tmpl = BackboneView.preRender.executeAll($tmpl, this);\n\n        // @property {PluginContainer} preRenderPlugins Instance prerender plugins. Useful for extending the DOM using plugins per instance or per class using JavaScript\n        $tmpl = this.preRenderPlugins ? this.preRenderPlugins.executeAll($tmpl, this) : $tmpl;\n\n        this.$el.empty();\n\n        this.trigger('beforeViewRender', this);\n\n        // Appends/render the content HTML string to the view's element\n        if (SC.ENVIRONMENT.jsEnvironment === 'server') {\n            // If $el[0] doesn't exists it means that the ExtraChildView don't need to be shown on this page\n            if (this.$el[0]) {\n                // in page generator we append the content this way because of envjs bug.\n                this.$el[0].innerHTML = $tmpl[0].innerHTML;\n            }\n        } else {\n            this.$el.append($tmpl);\n        }\n\n        BackboneView.postRender.executeAll(this.$el, this);\n\n        this.trigger('afterViewRender', this);\n\n        this.events = {\n            ...SCBaseComponentChildViewsComponent.getModifiedEvents(this),\n            ...this.getEvents()\n        };\n\n        this.delegateEvents();\n\n        SCBaseComponentChildViewsComponent.applyModifiedChildViews(this);\n\n        this.renderCompositeView();\n\n        return this;\n    },\n\n    // @method render public overridable render method used as a facade for the internal _render method\n    render: function() {\n        return this._render();\n    },\n\n    // @method _destroy \"private\", shouldn't be overwritten if a custom destroy method is required override the destroy method. This method should still be called\n    // @param {Boolean} softDestroy decides if the view should be empty instead of removed\n    _destroy: function(softDestroy) {\n        SCBaseComponentChildViewsComponent.unregisterViewForPlaceholders(this);\n\n        this.destroyCompositeView();\n\n        if (this.$el) {\n            // http://backbonejs.org/#View-undelegateEvents\n            this.undelegateEvents();\n        }\n\n        // http://backbonejs.org/#Events-off\n        this.model && this.model.off(null, null, this);\n        this.collection && this.collection.off && this.collection.off(null, null, this);\n\n        if (this.$el && softDestroy) {\n            this.$el.empty();\n        } else if (this.$el) {\n            // http://backbonejs.org/#View-remove\n            this.remove();\n            // unbind all DOM events not just delegated ones\n            this.$el.unbind();\n        }\n        this.trigger('destroy');\n    },\n\n    // @method destroy\n    destroy: function(softDestroy) {\n        this._destroy(softDestroy);\n    }\n});\n\nconst isDataTypeValid = function(data_type) {\n    const valid_data_types = ['number', 'string', 'object', 'array', 'boolean', 'null'];\n    if (_.isString(data_type)) {\n        return _.indexOf(valid_data_types, data_type) >= 0;\n    }\n    if (_.isArray(data_type)) {\n        return !_.difference(data_type, valid_data_types).length;\n    }\n    return false;\n};\n\n// Install the plugin containers\n_.extend(BackboneView, {\n    // @property {PluginContainer} preCompile These hooks are executed before the template function is executed and generates a HTML string\n    // Each execute method of each plugin will receive: the template function, the view and the context where the template will execute. @static\n    preCompile: new PluginContainer(),\n\n    // @property {PluginContainer} postCompile These hooks are executed after the template the template function is executed and generates a HTML string\n    // Each execute method of each plugin will receive: the template string (result of having running the template) and the view. @static\n    postCompile: new PluginContainer(),\n\n    // @property {PluginContainer} preRender These hooks are executed before the template result is appended to DOM\n    // Each execute method of each plugin will receive: the template  DOM object (without begin insert into the DOM) and the view. @static\n    preRender: new PluginContainer(),\n\n    // @property {PluginContainer} postRender These hooks are executed after the template is appended to DOM\n    // Each execute method of each plugin will receive: the template DOM object (already in the DOM) and the view. @static\n    postRender: new PluginContainer(),\n\n    // @method addExtraContextProperty Allows adding an extra context property into a view.\n    // @param {String} property_name Unique name of the extra property to be added\n    // @param {String} type Name of the type of the new property\n    // @param {Function} callback Function invoked each time the View's UI context is being generated\n    // @return {Void}\n    // @public\n    // @static\n    addExtraContextProperty: function addExtraContextProperty(property_name, type, callback) {\n        this.extraContextProperties = this.extraContextProperties || {};\n        let error: any = {};\n\n        if (!isDataTypeValid(type)) {\n            error = new Error(\n                'Invalid data type. Please check the json-schema documentation for valid data types.'\n            );\n            error.name = 'INVALID_DATA_TYPE';\n            throw error;\n        }\n        if (this.extraContextProperties[property_name]) {\n            error = new Error(\n                'Duplicated property_name. Trying to add more than one extra context property with the same name.'\n            );\n            error.name = 'DUPLICATED_CONTEXT_PROPERTY';\n            throw error;\n        }\n\n        this.extraContextProperties[property_name] = {\n            type: type,\n            fn: callback\n        };\n    },\n\n    // @method removeExtraContextProperty Removes a previously extra context property\n    // @param {String} property_name Name of the property\n    // @return {Void}\n    // @public\n    // @static\n    removeExtraContextProperty: function removeExtraContextProperty(property_name) {\n        this.extraContextProperties = this.extraContextProperties || {};\n        delete this.extraContextProperties[property_name];\n    }\n});\n\nexport = BackboneView;\n"]}