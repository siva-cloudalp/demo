{"version":3,"sources":["Address.Edit.Fields.View.ts"],"names":[],"mappings":"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","file":"Address.Edit.Fields.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Address.Edit.Fields.View\"/>\n// @module Address\n\nimport * as _ from 'underscore';\nimport '../../Utilities/JavaScript/Utils';\nimport * as address_edit_fields_tpl from 'address_edit_fields.tpl';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport GlobalViewsStatesView = require('../../GlobalViews/JavaScript/GlobalViews.States.View');\nimport CountriesDropdownView = require('../../GlobalViews/JavaScript/GlobalViews.CountriesDropdown.View');\n\n// @class Address.Edit.View @extend Backbone.View\nconst AddressEditFields: any = BackboneView.extend({\n    // @property {Function} template\n    template: address_edit_fields_tpl,\n\n    // @property {Object} events\n    events: {\n        'change [data-action=\"selectcountry\"]': 'updateStates',\n        'change [data-action=\"selectstate\"]': 'eraseZip',\n        'change [data-action=\"inputstate\"]': 'eraseZip',\n        'blur [data-action=\"inputphone\"]': 'formatPhone'\n    },\n\n    // @method initialize Defines this view as composite\n    // @return {Void}\n    initialize: function() {\n        this.calculateState();\n    },\n\n    // @method calculateState Pre-calculate many state variables used in the get context. In this way this is state is calculated once\n    // @return {Void}\n    calculateState: function() {\n        this.site_settings = Configuration.get('siteSettings');\n        this.manage = this.options.manage ? this.options.manage + '-' : '';\n        this.countries = this.options.countries;\n        this.quantity_countries = _.size(this.countries);\n        this.selected_country = this.options.selectedCountry;\n        this.zip_not_required =\n            this.selected_country &&\n            this.site_settings.countries[this.selected_country] &&\n            this.site_settings.countries[this.selected_country].isziprequired === 'F';\n    },\n\n    // @method eraseZip Show and hide the zip field depending on the selected country\n    // @return {Void}\n    eraseZip: function() {\n        const statesView = this.getChildViewInstance('StatesView');\n        if (statesView.options.selectedState !== undefined) {\n            const selected_country = this.$('[name=\"country\"]').val();\n            const countries = Configuration.get('siteSettings.countries', {});\n            const $zip_fieldset = this.$('[data-input=\"zip\"]');\n            const $zip_input = this.$('input[name=\"zip\"]', $zip_fieldset);\n\n            $zip_input.val('');\n\n            if (countries[selected_country] && countries[selected_country].isziprequired === 'F') {\n                $zip_fieldset.hide();\n            } else {\n                $zip_fieldset.show();\n            }\n        }\n    },\n\n    // @method formatPhone Will try to reformat a phone number for a given phone Format,\n    // If no format is given, it will try to use the one in site settings.\n    // @param {jQuery.Event} e\n    // @return {Void}\n    formatPhone: function(e: any) {\n        const $target = jQuery(e.target);\n        $target.val((<any>_($target.val())).formatPhone());\n    },\n\n    // @method updateStates Initialize state of the  dropdowns\n    // @param {jQuery.Event} e\n    // @return {Void}\n    updateStates: function(e: any) {\n        const statesView = this.getChildViewInstance('StatesView');\n        statesView.options.selectedCountry = this.$(e.currentTarget).val();\n        statesView.render();\n        this.eraseZip(e);\n    },\n\n    // @property {Object} childViews\n    childViews: {\n        CountriesDropdown: function() {\n            return new CountriesDropdownView({\n                countries: this.options.countries,\n                selectedCountry: this.selected_country,\n                manage: this.options.manage\n            });\n        },\n        StatesView: function() {\n            return new GlobalViewsStatesView({\n                countries: this.options.countries,\n                selectedCountry: this.selected_country,\n                selectedState: this.model.get('state'),\n                manage: this.manage\n            });\n        }\n    },\n\n    // @method getContext @return Address.Edit.View.Context\n    getContext: function() {\n        // @class Address.Edit.View.Context\n        return {\n            // @property {String} manage\n            manage: this.manage,\n            // @property {String} fullName\n            fullName: this.model.get('fullname'),\n            // @property {Boolean} showCompanyField\n            showCompanyField: this.site_settings.registration.displaycompanyfield === 'T',\n            // @property {Boolean} isCompanyFieldMandatory\n            isCompanyFieldMandatory: this.site_settings.registration.companyfieldmandatory === 'T',\n            // @property {Boolean} isPhoneFieldMandatory\n            isPhoneFieldMandatory:\n                Configuration.get('addresses') && Configuration.get('addresses').isPhoneMandatory,\n            // @property {String} company\n            company: this.model.get('company'),\n            // @property {String} addressLine1\n            addressLine1: this.model.get('addr1'),\n            // @property {String} addressLine2\n            addressLine2: this.model.get('addr2'),\n            // @property {String} city\n            city: this.model.get('city'),\n            // @property {Boolean} showCountriesField\n            showCountriesField: this.quantity_countries > 1,\n            // @property {Boolean} isZipOptional\n            isZipOptional: this.zip_not_required,\n            // @property {Boolean} zip\n            zip: this.model.get('zip'),\n            // @property {String} phone\n            phone: this.model.get('phone'),\n            // @property {Boolean} isAddressResidential\n            isAddressResidential: this.model.get('isresidential') === 'T',\n            // @property {Boolean} showDefaultControls\n            showDefaultControls: !this.options.hideDefaults,\n            // @property {Boolean} isAddressDefaultBilling\n            isAddressDefaultBilling: this.model.get('defaultbilling') === 'T',\n            // @property {Boolean} isCurrentTouchPointCheckout\n            isCurrentTouchPointCheckout: Configuration.get('currentTouchpoint') === 'checkout',\n            // @property {Boolean} isAddressDefaultShipping\n            isAddressDefaultShipping: this.model.get('defaultshipping') === 'T',\n            // @property {Boolean} showAddressFormSecondAddress\n            showAddressFormSecondAddress: Configuration.get('forms.address.showAddressLine2')\n        };\n    }\n});\n\nexport = AddressEditFields;\n"]}