{"version":3,"sources":["QuoteToSalesOrderWizard.Router.ts"],"names":[],"mappings":"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","file":"QuoteToSalesOrderWizard.Router.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"QuoteToSalesOrderWizard.Router\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/UnderscoreExtended.d.ts\" />\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { AjaxRequestsKiller } from '../../../Commons/AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\n\nimport WizardRouter = require('../../Wizard/JavaScript/Wizard.Router');\nimport QuoteToSalesOrderWizardView = require('./QuoteToSalesOrderWizard.View');\nimport QuoteToSalesOrderWizardStep = require('./QuoteToSalesOrderWizard.Step');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\n// @class QuoteToSalesOrderWizard.Router @extend Wizard.Router\nexport = WizardRouter.extend({\n    // @property {QuoteToSalesOrderWizard.Step} step\n    step: QuoteToSalesOrderWizardStep,\n\n    // @property {QuoteToSalesOrderWizard.View} view\n    view: QuoteToSalesOrderWizardView,\n\n    // @method initialize Override default method to update the collection of address in the current transaction model\n    // @return {Void}\n    initialize: function() {\n        WizardRouter.prototype.initialize.apply(this, arguments);\n\n        ProfileModel.getInstance()\n            .get('addresses')\n            .on('add remove change', _.bind(this.reSetModelAddresses, this, this.model));\n    },\n\n    _registerPageType: function _registerPageType(options) {\n        const pageType = this.application.getComponent('PageType');\n\n        pageType.registerPageType({\n            name: 'quote-to-sales-order-wizard',\n            routes: options.routes,\n            view: QuoteToSalesOrderWizardView,\n            defaultTemplate: {\n                name: 'quote_to_salesorder_wizard_layout.tpl',\n                displayName: 'Quote to sales order wizard default',\n                thumbnail: Utils.getThemeAbsoluteUrlOfNonManagedResources(\n                    'img/default-layout-quote-sales-order-wizard.png'\n                )\n            }\n        });\n    },\n\n    // @method runStep override default runstep method to validate that a quote id has been specified in the URL and the corresponding quote is already loaded\n    // @return {Void}\n    runStep: function() {\n        // Computes the position of the user in the flow\n        const fragments = (<any>Backbone.history).fragment.split('?');\n        const url = fragments[0];\n        const options = fragments.length ? fragments[1] : '';\n        const position = this.getStepPosition(url);\n        let content = '';\n        let page_header = '';\n        const layout = this.application.getLayout();\n        const hash_options = Utils.parseUrlOptions(options);\n        const is_external =\n            hash_options.externalPayment === 'DONE' || hash_options.externalPayment === 'FAIL';\n        const self = this;\n        const salesorderid = options && ~options.indexOf('salesorderid=');\n        const promise = jQuery.Deferred();\n\n        if (salesorderid && !is_external) {\n            // wizard just finished and user refreshed the page\n            page_header = Utils.translate('Your Order has been placed');\n            content +=\n                Utils.translate(\n                    'If you want to review your last order you can go to <a href=\"/purchases/view/$(0)\">Your Account</a>. ',\n                    hash_options.salesorderid\n                ) + Utils.translate('Or you can return to <a href=\"/quotes\">quotes</a>.');\n\n            layout.internalError &&\n                layout.internalError(content, page_header, Utils.translate('My Account'));\n\n            return promise.reject();\n        }\n        if (!hash_options.quoteid && !is_external) {\n            layout.notFound && layout.notFound();\n\n            return promise.reject();\n        }\n        if (\n            this.model.get('quoteid') !== hash_options.quoteid ||\n            position.fromBegining === 0 ||\n            is_external\n        ) {\n            this.model.clear();\n            // This is done because many OrderWizard Modules dont check if the summary is set\n            if (is_external) {\n                this.model.set('salesorderid', hash_options.nltranid);\n            }\n            this.model.set('summary', {}, { silent: true });\n            this.model.set('quoteid', hash_options.quoteid);\n\n            return this.model\n                .fetch({\n                    killerId: AjaxRequestsKiller.getKillerId()\n                })\n                .then(function() {\n                    if (!is_external) {\n                        self.reSetModelAddresses(self.model, true);\n                    }\n\n                    return WizardRouter.prototype.runStep.apply(self);\n                });\n        }\n        if (\n            this.model.get('confirmation') &&\n            this.model.get('confirmation').get('internalid') &&\n            position.toLast !== 0\n        ) {\n            // if you have already placed the order you can not be in any other step than the last\n            page_header = Utils.translate('Your Order has been placed');\n            content +=\n                Utils.translate(\n                    'You cannot place the order for this quote again. If you want to review your last order you can go to  <a href=\"/ordershistory/view/$(0)\">Your Account</a>. ',\n                    this.model.get('confirmation').get('internalid')\n                ) + Utils.translate('Or you can return to <a href=\"/quotes\">quotes</a>.');\n\n            layout.internalError &&\n                layout.internalError(content, page_header, Utils.translate('My Account'));\n\n            return promise.reject();\n        }\n        return WizardRouter.prototype.runStep.apply(self, arguments);\n    },\n\n    // @method reSetModelAddresses Internal method used to set the addresses collection of the current sales order model\n    // We clone the current profile\n    // @param {QuoteToSalesOrder.Model} model\n    // @param {Boolean} silent\n    // @return {Address.Collection}\n    reSetModelAddresses: function(model, silent: boolean) {\n        const selected_shipping_address = model.get('addresses').get(model.get('shipaddress'));\n        const selected_billing_address = model.get('addresses').get(model.get('billaddress'));\n        const new_addresses_collection = ProfileModel.getInstance()\n            .get('addresses')\n            .clone();\n\n        new_addresses_collection.add(selected_billing_address);\n        new_addresses_collection.add(selected_shipping_address);\n\n        model.get('addresses').reset(new_addresses_collection.models, { silent: silent });\n        return new_addresses_collection;\n    },\n\n    // @method addsParamsToFollowingStepURL Add the require params to the next/previous step url\n    // @param {Object} url_options Dictionary where each key is a url para and its value if the url parameter value\n    // @param {String} next_step_url\n    // @return {String}\n    addsParamsToFollowingStepURL: function(url_options, next_step_url: string): string {\n        if (url_options.force) {\n            next_step_url = Utils.addParamsToUrl(next_step_url, { force: 'true' });\n        }\n        if (url_options.quoteid) {\n            next_step_url = Utils.addParamsToUrl(next_step_url, { quoteid: url_options.quoteid });\n        }\n        return next_step_url;\n    },\n\n    // @method goToNextStep finds the next steps and navigates to it\n    // Override default implementation to preserve parameters when  navigating between steps\n    // @return {Void}\n    goToNextStep: function() {\n        const next_step_url = this.getNextStepUrl();\n        const url_options = Utils.parseUrlOptions((<any>Backbone.history).location.hash);\n\n        if (next_step_url) {\n            this.navigate(this.addsParamsToFollowingStepURL(url_options, next_step_url), {\n                trigger: true\n            });\n        }\n    },\n\n    // @method goToPreviousStep finds the previous steps and navigates to it\n    // Override default implementation to preserve parameters when  navigating between steps\n    // @return {Void}\n    goToPreviousStep: function() {\n        const previous_step_url = this.getPreviousStepUrl();\n        const url_options = Utils.parseUrlOptions((<any>Backbone.history).location.hash);\n\n        if (previous_step_url) {\n            this.navigate(this.addsParamsToFollowingStepURL(url_options, previous_step_url), {\n                trigger: true\n            });\n        }\n    },\n\n    // @method hidePayment Indicate when there none elements to pay if\n    // the payment method must be asked anyway or not.\n    // The case when there is nothing to pay happens when you pay the\n    // entire order with promo codes and/or gift certificates\n    // @return {Boolean}\n    hidePayment: function(): boolean {\n        const { siteSettings } = this.application.getConfig();\n        return (\n            siteSettings.checkout.hidepaymentpagewhennobalance === 'T' &&\n            this.model.get('summary').total === 0\n        );\n    },\n\n    // @method isMultiShipTo Indicate if the current sales order is multi ship to (MST) or not\n    // This method is required by CartSummary\n    // @return {Boolean}\n    isMultiShipTo: function(): boolean {\n        return !!this.model.get('ismultishipto');\n    }\n});\n"]}