{"version":3,"sources":["CMSadapter.Impl.Landing.v3.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAMF;;;;MAIE;IAEF,IAAM,sBAAsB,GAAG,UAAS,WAAW,EAAE,GAAG,EAAE,UAAU;QAChE,qBAAqB,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;IACnE,CAAC,CAAC;IAEF,sBAAsB,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAElF,sBAAsB,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY;QACjE,oEAAoE;QACpE,IAAM,IAAI,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,sBAAsB,EAAE,UAAS,OAAO,EAAE,IAAI;YACtD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;YAC/B,OAAO,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAS,OAAO,EAAE,IAAI;YACnD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC3B,OAAO,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,wBAAwB,EAAE,UAAS,OAAO,EAAE,IAAI;YACxD,6FAA6F;YAC7F,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;YAC/B,OAAO,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,sBAAsB,EAAE,UAAS,OAAO,EAAE,IAAI;YACtD,iHAAiH;YACjH,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAC7B,OAAO,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,sBAAsB,EAAE,UAAS,OAAO;YAChD,OAAO,CAAC,OAAO,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;IAEF,OAAS,sBAAsB,CAAC","file":"CMSadapter.Impl.Landing.v3.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CMSadapter.Impl.Landing.v3\"/>\n\nimport CMSadapterImplLanding = require('./CMSadapter.Impl.Landing');\n\n/*\n@module CMSadapter\n\n@class CMSadapter.Impl.Landing.v3\n*/\n\nconst CMSadapterImplLanding3 = function(application, CMS, pageRouter) {\n    CMSadapterImplLanding.call(this, application, CMS, pageRouter);\n};\n\nCMSadapterImplLanding3.prototype = Object.create(CMSadapterImplLanding.prototype);\n\nCMSadapterImplLanding3.prototype.listenForCMS = function listenForCMS() {\n    // CMS listeners - CMS tells us to do something, could fire anytime.\n    const self = this;\n\n    self.CMS.on('landing-pages:reload', function(promise, data) {\n        self.realoadLandingPages(data);\n        promise.resolve();\n    });\n\n    self.CMS.on('landing-pages:add', function(promise, data) {\n        self.addLandingPages(data);\n        promise.resolve();\n    });\n\n    self.CMS.on('landing-pages:navigate', function(promise, data) {\n        // triggered when user selects a landing page in the 'manage pages mode' in cms administrator\n        self.navigateLandingPage(data);\n        promise.resolve();\n    });\n\n    self.CMS.on('landing-pages:update', function(promise, data) {\n        // triggered when user clicks the 'edit' button of a landing page in the 'manage pages mode' in cms administrator\n        self.updateLandingPage(data);\n        promise.resolve();\n    });\n\n    self.CMS.on('landing-pages:remove', function(promise) {\n        promise.resolve();\n    });\n};\n\nexport = CMSadapterImplLanding3;\n"]}