{"version":3,"sources":["Item.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAOF,IAAM,UAAU,GAAG;QACf,oBAAoB,EAAE,IAAI;QAC1B,UAAU,EAAE,UAAS,WAAW;YAC5B,qEAAqE;YACrE,iEAAiE;YACjE,IAAM,uBAAuB,GAAG,CAAC,CAAC,MAAM,CACpC,6BAAa,CAAC,GAAG,CAAC,kCAAkC,EAAE,EAAE,CAAC,EACzD,UAAS,kBAAuB;gBAC5B,OAAO,CAAC,CAAC,kBAAkB,CAAC,MAAM,CAAC;YACvC,CAAC,CACJ,CAAC;YACF,IAAM,aAAa,GAAG,UAAS,WAAW,EAAE,WAAW;gBACnD,IAAI,WAAW,IAAI,WAAW,CAAC,WAAW,CAAC,KAAK,EAAE,EAAE;oBAChD,OAAO,WAAW,CAAC,WAAW,CAAC,CAAC;oBAChC,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;YACjB,CAAC,CAAC;YAEF,CAAC,CAAC,IAAI,CAAC,uBAAuB,IAAI,EAAE,EAAE,UAAS,WAAW;gBACtD,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC,SAAS,EAAE,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YACrF,CAAC,CAAC,CAAC;YAEH,6GAA6G;YAC7G,mHAAmH;YACnH,qDAAqD;YACrD,CAAC,CAAC,IAAI,CAAC,6BAAa,CAAC,GAAG,CAAC,kCAAkC,EAAE,EAAE,CAAC,EAAE,UAC9D,yBAAyB;gBAEzB,aAAa,CAAC,yBAAyB,EAAE,QAAQ,CAAC,CAAC;gBACnD,aAAa,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAC;gBAClD,aAAa,CAAC,yBAAyB,EAAE,kBAAkB,CAAC,CAAC;gBAC7D,aAAa,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;QACP,CAAC;KACJ,CAAC;IAEF,OAAS,UAAU,CAAC","file":"Item.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Item\"/>\n\nimport * as _ from 'underscore';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nconst ItemModule = {\n    excludeFromMyAccount: true,\n    mountToApp: function(application) {\n        // Make of itemOptions color property a object with the color name as\n        // the property and the color value as the value of the property.\n        const item_options_with_color = _.filter(\n            Configuration.get('ItemOptions.optionsConfiguration', []),\n            function(item_option_config: any) {\n                return !!item_option_config.colors;\n            }\n        );\n        const clean_setting = function(item_option, setting_key) {\n            if (item_option && item_option[setting_key] === '') {\n                delete item_option[setting_key];\n                return true;\n            }\n            return false;\n        };\n\n        _.each(item_options_with_color || [], function(item_option) {\n            item_option.colors = application.getLayout().getColorPalette(item_option.colors);\n        });\n\n        // Clean empty settings. These values are optional, when you in the NetSuite interface do not specify nothing\n        // they come empty, so for those cases we deleted them so when the Item.Model getPossibleOptions method is executed\n        // the default values are NOT overwritten with empty.\n        _.each(Configuration.get('ItemOptions.optionsConfiguration', []), function(\n            item_option_configuration\n        ) {\n            clean_setting(item_option_configuration, 'colors');\n            clean_setting(item_option_configuration, 'label');\n            clean_setting(item_option_configuration, 'urlParameterName');\n            clean_setting(item_option_configuration, 'index');\n        });\n    }\n};\n\nexport = ItemModule;\n"]}