{"version":3,"sources":["Categories.Utils.ts"],"names":[],"mappings":"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","file":"Categories.Utils.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Categories.Utils\"/>\n// @Typescript-partial\n\nimport * as _ from 'underscore';\n\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { FullCategory, Category } from '../../../ServiceContract/SC/Category/Category';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\n// Categories.Utils.ts\n// -------------\n// Utility Class for Categories\n\nexport function getAdditionalFields(source, config_path) {\n    const additionalFields = {};\n    const fields = Configuration.get(config_path, []);\n\n    _.each(fields, function(field: any) {\n        additionalFields[field] = source[field];\n    });\n\n    return additionalFields;\n}\n\nexport function getBaseUrl(backendAccountDomain?: string): string {\n    const baseUrl =\n        backendAccountDomain ||\n        (Utils.isHttpsSupported()\n            ? `https://${SC.ENVIRONMENT.shoppingDomain}`\n            : Utils.isCheckoutSupported()\n            ? SC.ENVIRONMENT.checkoutUrl\n            : `http://${SC.ENVIRONMENT.shoppingDomain}`);\n\n    return baseUrl;\n}\n\nexport function getCategoryColumns() {\n    const categoryColumns = {\n        boolean: ['displayinsite', 'isinactive', 'isprimaryurl'],\n\n        sideMenu: {\n            sortBy: 'sequencenumber',\n            fields: ['name', 'internalid', 'sequencenumber', 'urlfragment', 'displayinsite']\n        },\n\n        subCategories: {\n            sortBy: 'sequencenumber',\n            fields: [\n                'name',\n                'description',\n                'internalid',\n                'sequencenumber',\n                'urlfragment',\n                'thumbnailurl',\n                'displayinsite'\n            ]\n        },\n\n        category: {\n            fields: [\n                'internalid',\n                'name',\n                'description',\n                'pagetitle',\n                'pageheading',\n                'pagebannerurl',\n                'addtohead',\n                'metakeywords',\n                'metadescription',\n                'displayinsite',\n                'urlfragment',\n\n                'idpath', // needed for breadcrumb\n                'fullurl', // needed for canonical path\n                'isprimaryurl', // needed for canonical path\n                'custrecord_not_visible_to_customer'\n            ]\n        },\n\n        breadcrumb: {\n            fields: ['internalid', 'name', 'displayinsite']\n        },\n\n        menu: {\n            sortBy: 'sequencenumber',\n            fields: ['internalid', 'name', 'sequencenumber', 'displayinsite','custrecord_not_visible_to_customer']\n        },\n\n        mapping: {\n            internalid: 'subcatid',\n            name: 'subcatnameoverride',\n            description: 'subcatdescoverride',\n            pagetitle: 'subcatpagetitleoverride',\n            pageheading: 'subcatpageheadingoverride',\n            pagebannerurl: 'subcatpagebannerurloverride',\n            addtohead: 'subcataddtoheadoverride',\n            metakeywords: 'subcatmetakeywordsoverride',\n            metadescription: 'subcatmetadescoverride',\n            displayinsite: 'subcatdisplayinsiteoverride',\n            sequencenumber: 'subcatsequencenumber',\n            thumbnailurl: 'subcatthumbnailurloverride',\n            urlfragment: 'subcaturlfragmentoverride',\n            custrecord_not_visible_to_customer:'subcatcustrecord_not_visible_to_customeroverride'\n        }\n    };\n    return categoryColumns;\n}\n\nexport function getSortBy(element: string): string {\n    const config = Configuration.get().categories;\n    const categoryColumns = getCategoryColumns();\n    return config[element].sortBy || categoryColumns[element].sortBy;\n}\n\nexport function sortingBy(\n    categories: (Category | FullCategory)[],\n    property?: string\n): (Category | FullCategory)[] {\n    if (categories) {\n        property = property || 'sequencenumber';\n\n        _.each(categories, (category: Category) => {\n            this.sortingBy(category.categories, property);\n        });\n\n        categories.sort(function(a, b) {\n            // This works with Strings, Numbers, and Numbers as Strings. ie:\n            // ['a', 'b', 'c'] OR [1, 3, 20] OR ['1', '3', '20']\n            const numberA = Number(a[property]);\n            const numberB = Number(b[property]);\n\n            if (!isNaN(numberA) && !isNaN(numberB)) {\n                return numberA - numberB;\n            }\n\n            return `${a[property]}`.localeCompare(b[property]);\n        });\n    }\n\n    return categories;\n}\n\nexport function getSMTEndpointParameters(\n    field: string,\n    value: string,\n    optionalFields: string,\n    pcvAllItems: string,\n    pcvGroups: string,\n    effectiveDate: string\n) {\n    const locale = (\n        SC &&\n        SC.ENVIRONMENT &&\n        SC.ENVIRONMENT.currentLanguage &&\n        SC.ENVIRONMENT.currentLanguage.locale\n    ).split('_');\n    const currency = SC && SC.SESSION && SC.SESSION.currency && SC.SESSION.currency.code;\n    const use_pcv =\n        SC &&\n        SC.ENVIRONMENT &&\n        SC.ENVIRONMENT.siteSettings &&\n        SC.ENVIRONMENT.siteSettings.isPersonalizedCatalogViewsEnabled\n            ? 'T'\n            : 'F';\n\n    let parameters = `currency=${currency}&site_id=${SC.ENVIRONMENT.siteSettings.siteid}`;\n\n    parameters += `&c=${SC.ENVIRONMENT.companyId}&exclude_empty=${Configuration.get(\n        'categories.excludeEmptyCategories'\n    )}&use_pcv=${use_pcv}&pcv_all_items=${pcvAllItems}&language=${locale[0]}&country=${locale[1] ||\n        ''}&${field}=${value}${optionalFields}`;\n\n    // Only in case of SMT call\n    if (effectiveDate) {\n        parameters += `&as_of_date=${effectiveDate}`;\n    }\n    if (pcvGroups) {\n        parameters += `&pcv_groups=${pcvGroups}`;\n    }\n\n    return parameters;\n}\n"]}