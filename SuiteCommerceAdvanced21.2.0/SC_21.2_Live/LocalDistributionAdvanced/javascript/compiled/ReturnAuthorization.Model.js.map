{"version":3,"sources":["ReturnAuthorization.Model.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IASF,0DAA0D;IAC1D,IAAM,wBAAwB,GAAQ,gBAAgB,CAAC,MAAM,CAAC;QAC1D,6BAA6B;QAC7B,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC,yCAAyC,CAAC;QAExE,kGAAkG;QAClG,YAAY,EAAE,IAAI;QAClB,qBAAqB;QACrB,6BAA6B;QAC7B,UAAU,EAAE,UAAS,UAAU;YAC3B,kEAAkE;YAClE,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAE7D,IAAI,CAAC,EAAE,CAAC,gBAAgB,EAAE,UAAS,KAAK,EAAE,OAAO;gBAC7C,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,qBAAqB,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/E,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,EAAE,CAAC,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;QACjF,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,wBAAwB,CAAC","file":"ReturnAuthorization.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ReturnAuthorization.Model\"/>\n// @module ReturnAuthorization.Model\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport TransactionCollection = require('../../../Commons/Transaction/JavaScript/Transaction.Collection');\nimport TransactionModel = require('../../../Commons/Transaction/JavaScript/Transaction.Model');\n\n// @class ReturnAuthorization.Model @extend Backbone.Model\nconst ReturnAuthorizationModel: any = TransactionModel.extend({\n    // @property {String} urlRoot\n    urlRoot: Utils.getAbsoluteUrl('services/ReturnAuthorization.Service.ss'),\n\n    // @property {Boolean} cacheSupport enable or disable the support for cache (Backbone.CachedModel)\n    cacheSupport: true,\n    // @method initialize\n    // @param {Object} attributes\n    initialize: function(attributes) {\n        // call the initialize of the parent object, equivalent to super()\n        TransactionModel.prototype.initialize.apply(this, arguments);\n\n        this.on('change:applies', function(model, applies) {\n            model.set('applies', new TransactionCollection(applies), { silent: true });\n        });\n\n        this.trigger('change:applies', this, (attributes && attributes.lines) || []);\n    }\n});\n\nexport = ReturnAuthorizationModel;\n"]}