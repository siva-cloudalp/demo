{"version":3,"sources":["Facets.Translator.ts"],"names":[],"mappings":"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","file":"Facets.Translator.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Facets.Translator\"/>\n\nimport * as _ from 'underscore';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\n\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nimport { UrlHelper } from '../../UrlHelper/JavaScript/UrlHelper';\n\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\n// @module Facets\n// @class Facets.Translator\n// Holds the mapping of a url compoment with an api call,\n// is able to translate and to return different configurations of himself with diferent options\n// This is just for internal use only, DO NOT EDIT IT HERE!!\n// the same options should be somewhere in the configuration file\nconst default_config = {\n    fallbackUrl: 'search',\n    defaultShow: null,\n    defaultOrder: null,\n    defaultDisplay: null,\n    facets: [],\n    facetDelimiters: {\n        betweenFacetNameAndValue: '/',\n        betweenDifferentFacets: '/',\n        betweenDifferentFacetsValues: ',',\n        betweenRangeFacetsValues: 'to',\n        betweenFacetsAndOptions: '?',\n        betweenOptionNameAndValue: '=',\n        betweenDifferentOptions: '&'\n    }\n};\n\n// @constructor @param {Array}facets @param {Object} options @param {Object} configuration\nconst FacetsTranslator = function(\n    facets?: any,\n    options?: any,\n    configuration?: any,\n    category?: any\n): void {\n    // Enforces new\n    if (!(this instanceof FacetsTranslator)) {\n        return new FacetsTranslator(facets, options, configuration, category);\n    }\n\n    // Facets go Here\n    this.facets = [];\n\n    // Other options like page, view, etc. goes here\n    this.options = {};\n\n    // This is an object that must contain a fallbackUrl and a lists of facet configurations\n    this.configuration = configuration || default_config;\n\n    // Get the facets that are in the sitesettings but not in the config.\n    // These facets will get a default config (max, behavior, etc.) - Facets.Translator\n    // Include facet aliases to be conisdered as a possible route\n    const facets_data = Configuration.get('siteSettings.facetfield');\n    let facets_to_include = [];\n\n    _.each(facets_data, function(facet: any) {\n        if (facet.facetfieldid !== 'commercecategory') {\n            facets_to_include.push(facet.facetfieldid);\n\n            // If the facet has an urlcomponent defined, then add it to the possible values list.\n            facet.urlcomponent && facets_to_include.push(facet.urlcomponent);\n\n            // Finally, include URL Component Aliases...\n            _.each(facet.urlcomponentaliases, function(facet_alias: any) {\n                facets_to_include.push(facet_alias.urlcomponent);\n            });\n        }\n    });\n\n    facets_to_include = _.union(facets_to_include, _.pluck(Configuration.get('facets'), 'id'));\n    facets_to_include = _.uniq(facets_to_include);\n\n    this.facetsToInclude = facets_to_include;\n\n    this.isCategoryPage = !!category;\n\n    if (_.isBoolean(category) && category) {\n        let index = facets.length;\n        const facetsToInclude = this.facetsToInclude.slice(0);\n        const facets_delimiter = this.configuration.facetDelimiters.betweenDifferentFacets;\n        const facet_value_delimiter = this.configuration.facetDelimiters.betweenFacetNameAndValue;\n\n        _.each(facetsToInclude, function(facetname) {\n            facetname = facets_delimiter + facetname + facet_value_delimiter;\n            const i = facets.lastIndexOf(facetname);\n\n            if (i !== -1 && i < index) {\n                index = i;\n            }\n        });\n\n        const i = facets.indexOf(this.configuration.facetDelimiters.betweenFacetsAndOptions);\n\n        if (i !== -1 && i < index) {\n            index = i;\n        }\n\n        let categoryUrl = facets.substring(0, index);\n\n        facets = facets.substring(index);\n\n        if (categoryUrl[0] !== '/') {\n            categoryUrl = '/' + categoryUrl;\n        }\n\n        if (categoryUrl[categoryUrl.length - 1] === '/') {\n            categoryUrl = categoryUrl.substring(0, categoryUrl.length - 1);\n        }\n\n        if (facets && facets[0] === facets_delimiter) {\n            facets = facets.substring(1, facets.length);\n        }\n\n        this.categoryUrl = categoryUrl;\n    } else if (_.isString(category)) {\n        this.categoryUrl = category;\n    }\n\n    // We cast on top of the passed in parameters.\n    if (facets && options) {\n        this.facets = facets;\n        this.options = options;\n    } else if (_.isString(facets)) {\n        // It's a url\n        this.parseUrl(facets);\n    } else if (facets) {\n        // It's an API option object\n        this.parseOptions(facets);\n    }\n};\n\n_.extend(FacetsTranslator.prototype, {\n    // @property {Object}defaultFacetConfig\n    defaultFacetConfig: {\n        behavior: 'single',\n        max: 5\n    },\n\n    // @method getFacetsToInclude\n    getFacetsToInclude: function getFacetsToInclude() {\n        return this.facetsToInclude;\n    },\n\n    // @method parseUrl Url strings get translated into the differnts part of the object, facets and options\n    // @param {String} url\n    parseUrl: function parseUrl(url) {\n        // We remove a posible 1st / (slash)\n        url = url[0] === '/' ? url.substr(1) : url;\n\n        // given an url with options we split them into 2 strings (options and facets)\n        const facets_n_options = url.split(\n            this.configuration.facetDelimiters.betweenFacetsAndOptions\n        );\n        let facets =\n            facets_n_options[0] && facets_n_options[0] !== this.configuration.fallbackUrl\n                ? facets_n_options[0]\n                : '';\n        const options = facets_n_options[1] || '';\n\n        // We treat category as the 1st unnamed facet filter, so if you are using categories\n        // we will try to take that out by comparing the url with the category tree\n        if (this.isCategoryPage) {\n            facets = facets.replace(this.categoryUrl, '');\n\n            // We remove a posible 1st / (slash) (again, it me be re added by taking the category out)\n            facets = facets[0] === '/' ? facets.substr(1) : facets;\n        }\n\n        // The facet part of the url gets splitted and computed by pairs\n        const facet_tokens = facets.split(\n            new RegExp(\n                '[\\\\' +\n                    this.configuration.facetDelimiters.betweenDifferentFacets +\n                    '\\\\' +\n                    this.configuration.facetDelimiters.betweenFacetNameAndValue +\n                    ']+',\n                'ig'\n            )\n        );\n\n        while (facet_tokens.length > 0) {\n            const facet_name = facet_tokens.shift();\n            const facet_value = facet_tokens.shift();\n\n            if (!this.facetIsParameter(facet_name)) {\n                this.parseUrlFacet(facet_name, facet_value);\n            }\n        }\n\n        // The same for the options part of the url\n        const options_tokens = options.split(\n            new RegExp(\n                '[\\\\' +\n                    this.configuration.facetDelimiters.betweenOptionNameAndValue +\n                    '\\\\' +\n                    this.configuration.facetDelimiters.betweenDifferentOptions +\n                    ']+',\n                'ig'\n            )\n        );\n        const tmp_options = {};\n\n        while (options_tokens.length > 0) {\n            const option_name = options_tokens.shift();\n            const option_value = options_tokens.shift();\n            const option_is_facet = _.contains(this.facetsToInclude, option_name);\n\n            if (option_is_facet && this.facetIsParameter(option_name)) {\n                this.parseUrlFacet(option_name, option_value);\n            }\n\n            tmp_options[option_name] = option_value;\n        }\n\n        this.parseUrlOptions(tmp_options);\n    },\n\n    // @method facetIsParameter\n    // Given a facet name, returns true if the facet needs to be interpreted as an url parameter, false otherwise.\n    // @param {String} facet_name\n    facetIsParameter: function facetIsParameter(facet_name) {\n        const facet_config = this.getFacetConfig(facet_name);\n\n        return _.isUndefined(facet_config.isParameter)\n            ? this.configuration.facetsAsUrlParameters\n            : facet_config.isParameter;\n    },\n\n    /*\n\t@method sanitizeValue\n\tTranslates values that came from the url into JS data types that this objects know of\n\tExamples for different types:\n\n\trange/10to100 gets translated to {from: '10', to: '100'}\n\trange/100 gets translated to {from: '0', to: '100'}\n\tmulti/1,2,3 gets translated to ['1', '2', '3']\n\t*/\n    sanitizeValue: function sanitizeValue(value, behavior) {\n        let parsed_value;\n\n        switch (behavior) {\n            case 'range':\n                // we return an object like {from: string, to: string }\n                if (_.isString(value)) {\n                    if (\n                        value.indexOf(\n                            this.configuration.facetDelimiters.betweenRangeFacetsValues\n                        ) !== -1\n                    ) {\n                        const tokens = value.split(\n                            this.configuration.facetDelimiters.betweenRangeFacetsValues\n                        );\n                        parsed_value = { from: tokens[0], to: tokens[1] };\n                    } else {\n                        parsed_value = { from: '0', to: value };\n                    }\n                } else {\n                    parsed_value = value;\n                }\n\n                break;\n            case 'multi':\n                // we always return an array for a multi value\n                if (\n                    value.indexOf(\n                        this.configuration.facetDelimiters.betweenDifferentFacetsValues\n                    ) !== -1\n                ) {\n                    parsed_value = value.split(\n                        this.configuration.facetDelimiters.betweenDifferentFacetsValues\n                    );\n                } else {\n                    parsed_value = [value];\n                }\n\n                break;\n            default:\n                parsed_value = value;\n        }\n\n        return parsed_value;\n    },\n\n    // @method getUrlFacetValue\n    // Returns the value of an active facet by the facet URL component\n    // @param {String} facet_url\n    getUrlFacetValue: function getUrlFacetValue(facet_url) {\n        return (\n            _.find(this.facets, function(facet: any) {\n                return facet.url === facet_url;\n            }) || {}\n        ).value;\n    },\n\n    // @method getFacetValue:\n    // Returns the value of an active facet by the facet id\n    // @param {String} facet_id\n    getFacetValue: function getFacetValue(facet_id) {\n        return (\n            _.find(this.facets, function(facet: any) {\n                return facet.id === facet_id;\n            }) || {}\n        ).value;\n    },\n\n    // @method getAllFacets\n    // @returns {Array} a copy of the internal array of facets containing values and configuration\n    getAllFacets: function getAllFacets() {\n        return this.facets.slice(0);\n    },\n\n    // @param getOptionValue\n    // Returns the value of an active options or it's default value\n    getOptionValue: function getOptionValue(option_id) {\n        return this.options[option_id] || null;\n    },\n\n    encodeComponent: function encodeComponent(val) {\n        return encodeURIComponent(val).replace(/[^a-zA-Z0-9-.~_·%]/g, function(v) {\n            return (\n                '%' +\n                v\n                    .charCodeAt(0)\n                    .toString(16)\n                    .toUpperCase()\n            );\n        });\n    },\n\n    // @param parseUrlFacet\n    // for a given name value, it gets the config, sanitize the value and stores it all in the internal facets array\n    // @param {String} @param {String} value\n    parseUrlFacet: function parseUrlFacet(name, value) {\n        // Gets the config for the current facet\n        const config = this.getFacetConfig(name, 'id');\n        let facets_values;\n        const self = this;\n\n        if (config.id === 'commercecategoryname' || config.id === 'category' || !name) {\n            return;\n        }\n\n        facets_values =\n            value && value.split(this.configuration.facetDelimiters.betweenDifferentFacetsValues);\n\n        facets_values = _.map(facets_values, function(val: any) {\n            val = decodeURIComponent(val);\n            val = self.encodeComponent(val);\n\n            return val;\n        });\n\n        this.facets.push({\n            config: config,\n            id: config.id,\n            url: config.id,\n            value: this.sanitizeValue(\n                facets_values.join(this.configuration.facetDelimiters.betweenDifferentFacetsValues),\n                config.behavior\n            ),\n            isParameter: config.isParameter\n        });\n    },\n\n    // @method parseFacet:\n    // Same as parseUrlFacet but from id\n    // @param facet_id @param value\n    parseFacet: function parseFacet(facet_id, value) {\n        // Gets the config for the current facet\n        const config = this.getFacetConfig(facet_id, 'id');\n\n        this.facets.push({\n            config: config,\n            id: config.id,\n            url: config.id,\n            value: this.sanitizeValue(value, config.behavior),\n            isParameter: config.isParameter\n        });\n    },\n\n    // @method parseUrlOptions:\n    // Sets options from the options argument or sets default values\n    // @param {Object} options\n    parseUrlOptions: function parseUrlOptions(options) {\n        this.options.show = options.show || this.configuration.defaultShow;\n        this.options.order = options.order || this.configuration.defaultOrder;\n        this.options.page = parseInt(options.page, 10) || 1;\n        this.options.display = options.display || this.configuration.defaultDisplay;\n        this.options.keywords = options.keywords\n            ? decodeURIComponent(options.keywords)\n            : this.configuration.defaultKeywords;\n    },\n\n    // facet@method getFacetConfig\n    // Gets the configuration for a given facet by id,\n    // @param {String}name @param {String}by\n    getFacetConfig: function getFacetConfig(name) {\n        let result = _.find(this.configuration.facets, function(facet: any) {\n            return facet.id === name;\n        });\n\n        result =\n            result ||\n            _.find(this.configuration.facets, function(facet: any) {\n                return facet.url === name;\n            });\n\n        return (\n            result ||\n            _.extend(\n                { id: name, name: name, url: name, isParameter: undefined },\n                this.defaultFacetConfig\n            )\n        );\n    },\n\n    // @method getUrl\n    // Gets the url for current state of the object\n    getUrl: function getUrl() {\n        let url = this.categoryUrl || '';\n        const self = this;\n\n        // Prepares seo limits\n        let facets_seo_limits: any = {};\n\n        if (SC.ENVIRONMENT.jsEnvironment === 'server') {\n            facets_seo_limits = {\n                numberOfFacetsGroups:\n                    (this.configuration.facetsSeoLimits &&\n                        this.configuration.facetsSeoLimits.numberOfFacetsGroups) ||\n                    false,\n                numberOfFacetsValues:\n                    (this.configuration.facetsSeoLimits &&\n                        this.configuration.facetsSeoLimits.numberOfFacetsValues) ||\n                    false,\n                options:\n                    (this.configuration.facetsSeoLimits &&\n                        this.configuration.facetsSeoLimits.options) ||\n                    false\n            };\n        }\n\n        // If there are too many facets selected\n        if (\n            facets_seo_limits.numberOfFacetsGroups &&\n            this.facets.length > facets_seo_limits.numberOfFacetsGroups\n        ) {\n            return '#';\n        }\n\n        // Encodes the other Facets\n        const sorted_facets = _.sortBy(this.facets, 'url');\n        const facets_as_options = [];\n\n        for (var i = 0; i < sorted_facets.length; i++) {\n            const facet: any = sorted_facets[i];\n\n            // Category should be already added\n            if (facet.id === 'commercecategoryname' || facet.id === 'category') {\n                break;\n            }\n\n            const name = facet.url || facet.id;\n            let value = '';\n\n            switch (facet.config.behavior) {\n                case 'range':\n                    facet.value =\n                        typeof facet.value === 'object'\n                            ? facet.value\n                            : { from: 0, to: facet.value };\n                    value =\n                        facet.value.from +\n                        self.configuration.facetDelimiters.betweenRangeFacetsValues +\n                        facet.value.to;\n                    break;\n                case 'multi':\n                    value = facet.value\n                        .sort()\n                        .join(self.configuration.facetDelimiters.betweenDifferentFacetsValues);\n\n                    if (\n                        facets_seo_limits.numberOfFacetsValues &&\n                        facet.value.length > facets_seo_limits.numberOfFacetsValues\n                    ) {\n                        return '#';\n                    }\n\n                    break;\n                default:\n                    value = facet.value;\n            }\n\n            if (self.facetIsParameter(name)) {\n                facets_as_options.push({ facetName: name, facetValue: value });\n            } else {\n                // Do not add a facet separator at the begining of an url\n                if (url !== '') {\n                    url += self.configuration.facetDelimiters.betweenDifferentFacets;\n                }\n\n                url += name + self.configuration.facetDelimiters.betweenFacetNameAndValue + value;\n            }\n        }\n\n        url = url !== '' ? url : '/' + this.configuration.fallbackUrl;\n\n        // Encodes the Options\n        const tmp_options: any = {};\n        const separator = this.configuration.facetDelimiters.betweenOptionNameAndValue;\n\n        if (this.options.order && this.options.order !== this.configuration.defaultOrder) {\n            tmp_options.order = 'order' + separator + this.options.order;\n        }\n\n        if (this.options.page && parseInt(this.options.page, 10) !== 1) {\n            tmp_options.page = 'page' + separator + encodeURIComponent(this.options.page);\n        }\n\n        if (\n            this.options.show &&\n            parseInt(this.options.show, 10) !== this.configuration.defaultShow\n        ) {\n            tmp_options.show = 'show' + separator + encodeURIComponent(this.options.show);\n        }\n\n        if (this.options.display && this.options.display !== this.configuration.defaultDisplay) {\n            tmp_options.display = 'display' + separator + encodeURIComponent(this.options.display);\n        }\n\n        if (this.options.keywords && this.options.keywords !== this.configuration.defaultKeywords) {\n            tmp_options.keywords =\n                'keywords' + separator + encodeURIComponent(this.options.keywords);\n        }\n\n        for (i = 0; i < facets_as_options.length; i++) {\n            const facet_option_obj = facets_as_options[i];\n\n            tmp_options[facet_option_obj.facetName] =\n                facet_option_obj.facetName + separator + facet_option_obj.facetValue;\n        }\n\n        const tmp_options_keys = _.keys(tmp_options);\n        const tmp_options_vals = _.values(tmp_options);\n\n        // If there are options that should not be indexed also return #\n        if (\n            facets_seo_limits.options &&\n            _.difference(tmp_options_keys, facets_seo_limits.options).length\n        ) {\n            return '#';\n        }\n\n        url += tmp_options_vals.length\n            ? this.configuration.facetDelimiters.betweenFacetsAndOptions +\n              tmp_options_vals.join(this.configuration.facetDelimiters.betweenDifferentOptions)\n            : '';\n\n        if (url && url[0] !== this.configuration.facetDelimiters.betweenDifferentFacets) {\n            url = this.configuration.facetDelimiters.betweenDifferentFacets + url;\n        }\n\n        const parameters = _.pick(\n            Utils.parseUrlOptions(Backbone.history.fragment),\n            (value, key): boolean => !(key in this.options)\n        );\n\n        return UrlHelper.fixUrl(Utils.addParamsToUrl(url, parameters));\n    },\n\n    // @method getCategoryUrl Returns the current category url\n    getCategoryUrl: function getCategoryUrl() {\n        return this.categoryUrl;\n    },\n\n    // @method getApiParams\n    // Gets the api parameters representing the current status of the object\n    getApiParams: function getApiParams() {\n        const params: any = {};\n\n        _.each(this.facets, function(facet: any) {\n            switch (facet.config.behavior) {\n                case 'range':\n                    var value =\n                        typeof facet.value === 'object'\n                            ? facet.value\n                            : { from: 0, to: facet.value };\n                    params[facet.id + '.from'] = value.from;\n                    params[facet.id + '.to'] = value.to;\n                    break;\n                case 'multi':\n                    params[facet.id] = facet.value.sort().join(','); // this coma is part of the api call so it should not be removed\n                    break;\n                default:\n                    params[facet.id] = facet.value;\n            }\n        });\n\n        params.sort = this.options.order;\n        params.limit = this.options.show;\n        params.offset = this.options.show * this.options.page - this.options.show;\n\n        params.q = this.options.keywords;\n\n        if (this.isCategoryPage) {\n            params.commercecategoryurl = this.categoryUrl;\n            params.sort = params.sort.replace('relevance', 'commercecategory');\n        }\n\n        return params;\n    },\n\n    // @method cloneForFacetId\n    // retruns a deep copy of this object with a new value for one facet,\n    // if in a name value that is the same as what's in, it will take it out\n    cloneForFacetId: function cloneForFacetId(facet_id, facet_value) {\n        // Using jQuery here because it offers deep cloning\n        let facets = _.toArray(jQuery.extend(true, {}, this.facets));\n        const options = jQuery.extend(true, {}, this.options);\n        const current_facet: any = _.find(facets, function(facet: any) {\n            return facet.id === facet_id;\n        });\n\n        if (current_facet) {\n            if (current_facet.config.behavior === 'multi') {\n                if (_.indexOf(current_facet.value, facet_value) === -1) {\n                    current_facet.value.push(facet_value);\n                } else {\n                    current_facet.value = _.without(current_facet.value, facet_value);\n                }\n\n                if (current_facet.value.length === 0) {\n                    facets = _.without(facets, current_facet);\n                }\n            } else if (!_.isEqual(current_facet.value, facet_value)) {\n                current_facet.value = facet_value;\n            } else {\n                facets = _.without(facets, current_facet);\n            }\n        }\n\n        options.page = 1;\n\n        const translator = new FacetsTranslator(\n            facets,\n            options,\n            this.configuration,\n            this.categoryUrl\n        );\n\n        if (!current_facet) {\n            translator.parseFacet(facet_id, facet_value);\n        }\n\n        return translator;\n    },\n\n    // @method cloneWithoutFacetId\n    // retruns a deep copy of this object without a facet,\n    cloneWithoutFacetId: function cloneWithoutFacetId(facet_id) {\n        let facets = _.toArray(jQuery.extend(true, {}, this.facets));\n        const options = jQuery.extend(true, {}, this.options);\n\n        facets = _.without(\n            facets,\n            _.find(facets, function(facet: any) {\n                return facet.id === facet_id;\n            })\n        );\n\n        return new FacetsTranslator(facets, options, this.configuration, this.categoryUrl);\n    },\n\n    // @method cloneWithoutFacets\n    // Clones the translator removeing all the facets, leaving only options\n    cloneWithoutFacets: function cloneWithoutFacets() {\n        // Creates a new translator with the same params as this;\n        let translator = new FacetsTranslator(\n            this.facets.slice(),\n            this.options,\n            this.configuration,\n            this.categoryUrl\n        );\n\n        _.each(translator.getAllFacets(), function(facet: any) {\n            // Categories are not facets, so lets not remove those\n            if (facet.id !== 'commercecategoryname' && facet.id !== 'category') {\n                translator = translator.cloneWithoutFacetId(facet.id);\n            }\n        });\n\n        return translator;\n    },\n\n    // @method cloneForOption\n    cloneForOption: function cloneForOption(option_id, option_value) {\n        const facets = _.toArray(jQuery.extend(true, {}, this.facets));\n        const options = jQuery.extend(true, {}, this.options);\n\n        options[option_id] = option_value;\n        return new FacetsTranslator(facets, options, this.configuration, this.categoryUrl);\n    },\n\n    // @method cloneForOptions\n    // same as cloneForFacetId but for options instead of facets\n    cloneForOptions: function cloneForOptions(object) {\n        const facets = _.toArray(jQuery.extend(true, {}, this.facets));\n        const options = jQuery.extend(true, {}, this.options, object);\n\n        return new FacetsTranslator(facets, options, this.configuration, this.categoryUrl);\n    },\n\n    // @method cloneWithoutOption\n    // same as cloneWithoutFacetId but for options instead of facets\n    cloneWithoutOption: function cloneWithoutOption(option_id) {\n        const facets = _.toArray(jQuery.extend(true, {}, this.facets));\n        const options = jQuery.extend(true, {}, this.options);\n\n        delete options[option_id];\n\n        return new FacetsTranslator(facets, options, this.configuration, this.categoryUrl);\n    },\n\n    // @method resetAll\n    // Returns a blank instance of itself\n    resetAll: function resetAll() {\n        return new FacetsTranslator([], {}, this.configuration, false);\n    },\n\n    // @method setLabelsFromFacets\n    // This let the translator known about labels the api proportions\n    // Tho this make the translator a bit less API agnostic\n    // this step is totaly optional and it should work regardless of this step\n    setLabelsFromFacets: function setLabelsFromFacets(facets_labels) {\n        this.facetsLabels = facets_labels;\n    },\n\n    // @method getLabelForValue\n    // If facets labels have been setted it will try to look for the label for the\n    // [id, value] combination and return it's label, otherways it will return the value\n    getLabelForValue: function getLabelForValue(id, value) {\n        const facet = _.filter(this.facetsLabels || [], function(facet_label: any) {\n            return facet_label.id === id || facet_label.url === id;\n        });\n\n        if (facet.length) {\n            let label: any = _.where(facet[0].values || [], { name: value });\n\n            // if the value could not be found by name, look for url\n            if (!label.length) {\n                label = _.where(facet[0].values || [], { url: value });\n            }\n\n            if (label.length && label[0].label) {\n                return label[0].label;\n            }\n        }\n\n        return value;\n    }\n});\n\nexport = FacetsTranslator;\n"]}