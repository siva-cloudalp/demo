{"version":3,"sources":["ProductDetails.Quantity.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAQF,6DAA6D;IAC7D,IAAM,0BAA0B,GAAQ,YAAY,CAAC,MAAM,CAAC;QACxD,QAAQ,EAAE,4BAA4B;QAEtC,MAAM,EAAE;YACJ,sCAAsC,EAAE,aAAa;YACrD,sCAAsC,EAAE,UAAU;YAClD,sCAAsC,EAAE,cAAc;SACzD;QAED,2DAA2D;QAC3D,0BAA0B;QAC1B,iBAAiB;QACjB,WAAW,EAAE,SAAS,WAAW,CAAC,CAAC;YAC/B,CAAC,CAAC,cAAc,EAAE,CAAC;YAEnB,IAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;YAClE,IAAM,eAAe,GAAG,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;YACpD,IAAM,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;YACtD,IAAM,YAAY,GAAG,SAAS,GAAG,KAAK,CAAC;YAEvC,eAAe,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACtD,CAAC;QAED,mHAAmH;QACnH,iBAAiB;QACjB,QAAQ,EAAE,SAAS,QAAQ;YACvB,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,KAAK,EAAE,CAAC;QACxC,CAAC;QAED,2DAA2D;QAC3D,iBAAiB;QACjB,YAAY,EAAE,SAAS,YAAY,CAAC,CAAC;YACjC,IAAI,CAAC,CAAC,OAAO,KAAK,EAAE,EAAE;gBAClB,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,IAAI,EAAE,CAAC;aACtC;QACL,CAAC;QAED,qBAAqB;QACrB,iDAAiD;QACjD,UAAU,EAAE,SAAS,UAAU;YAC3B,8CAA8C;YAC9C,OAAO;gBACH,kCAAkC;gBAClC,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,mCAAmC;gBACnC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,UAAU;gBACpE,4CAA4C;gBAC5C,qBAAqB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;aACzD,CAAC;YACF,sCAAsC;QAC1C,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,0BAA0B,CAAC","file":"ProductDetails.Quantity.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductDetails.Quantity.View\"/>\n\nimport * as product_details_quantity_tpl from 'product_details_quantity.tpl';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class ProductDetails.Quantity.View @extends Backbone.View\nconst ProductDetailsQuantityView: any = BackboneView.extend({\n    template: product_details_quantity_tpl,\n\n    events: {\n        'click [data-action=\"updateQuantity\"]': 'setQuantity',\n        'click [data-action=\"changeQuantity\"]': 'setFocus',\n        'keyup [data-action=\"changeQuantity\"]': 'disableFocus'\n    },\n\n    // @method setQuantity Increase the product's Quantity by 1\n    // @param {jQuery.Event} e\n    // @return {Void}\n    setQuantity: function setQuantity(e) {\n        e.preventDefault();\n\n        const value = parseInt(this.$(e.currentTarget).data('value'), 10);\n        const $input_quantity = this.$('[name=\"quantity\"]');\n        const old_value = parseInt($input_quantity.val(), 10);\n        const new_quantity = old_value + value;\n\n        $input_quantity.val(new_quantity).trigger('blur');\n    },\n\n    // @method setFocus sets focus on input when clicked. Needed as FF won't focus if quantity is updated from spinners\n    // @return {Void}\n    setFocus: function setFocus() {\n        this.$('[name=\"quantity\"]').focus();\n    },\n\n    // @method disableFocus Blur if ENTER/RETURN key is pressed\n    // @return {Void}\n    disableFocus: function disableFocus(e) {\n        if (e.keyCode === 13) {\n            this.$('[name=\"quantity\"]').blur();\n        }\n    },\n\n    // @method getContext\n    // @return {ProductDetails.Quantity.View.Context}\n    getContext: function getContext() {\n        // @class ProductDetails.Quantity.View.Context\n        return {\n            // @property {Product.Model} model\n            model: this.model,\n            // @property {Boolean} showQuantity\n            showQuantity: this.model.get('item').get('_itemType') !== 'GiftCert',\n            // @property {Boolean} isMinusButtonDisabled\n            isMinusButtonDisabled: this.model.get('quantity') <= 1\n        };\n        // @class ProductDetails.Quantity.View\n    }\n});\n\nexport = ProductDetailsQuantityView;\n"]}