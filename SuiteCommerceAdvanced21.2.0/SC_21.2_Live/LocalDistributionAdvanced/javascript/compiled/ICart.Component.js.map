{"version":3,"sources":["ICart.Component.ts"],"names":[],"mappings":"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","file":"ICart.Component.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ICart.Component\"/>\n\nimport * as _ from 'underscore';\n\nimport SCVisualComponent = require('../../SC/JavaScript/SC.VisualComponent');\nimport Utils = require('../../Utilities/JavaScript/Utils');\n\nconst { ERROR_IDENTIFIERS } = SCVisualComponent;\n// @function format formats An entity data grouping both commons attributes (SCIS and SCA) and non-commons. The last goes into the 'extras' key\n// @private\n// @param {Object} entity Data object to format\n// @param {Array<String>} commonAttrs Array with a string of all the common attributes that are at the first level of the returned formatted object\n// @return {Object} A Formatted object structured with all the unique properties inside the extra object\nconst format = function format(entity, commonAttrs) {\n    const formatted = {\n        extras: {}\n    };\n\n    _.keys(entity).forEach(function(attr) {\n        if (_.contains(commonAttrs, attr)) {\n            formatted[attr] = entity[attr];\n        } else {\n            formatted.extras[attr] = entity[attr];\n        }\n    });\n\n    return formatted;\n};\n// @class ICart.Component An abstract base class for front-end Cart component. Provides methods for manipulating cart's lines,\n// summary, estimates, promotions, submit. It also expose cancellable events that will be triggered before and after lines,\n// estimates, promotions, etc change.\n// @extends SC.BaseComponent\n// @public @extlayer\nconst icart_component = _.extend({}, SCVisualComponent, {\n    componentName: 'Cart',\n\n    // @method addLine Adds a new line into the cart\n    // @public @extlayer\n    // @param {Line} data\n    // @return {Deferred<String>} Return a Deferred that is resolved into the added line id, String, in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    addLine: function addLine(data) {\n        // jshint unused:false\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method addLines Adds new lines into the cart\n    // @public @extlayer\n    // @param {Array<Line>} data\n    // @return {Deferred<Array<String>>} Return a Deferred that is resolved into the added lines ids, String, in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    addLines: function addLines(data) {\n        // jshint unused:false\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method getLatestAddition returns the latest line added to the cart\n    // @public @extlayer\n    // @return {Deferred<<Line>>} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    getLatestAddition: function getLatestAddition() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method getLines returns the lines of the cart\n    // @public @extlayer\n    // @return {Deferred<Array<Line>>} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    getLines: function getLines() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method removeLine Removes a line from the cart\n    // @public @extlayer\n    // @param {String} line_id\n    // @return {Deferred} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    removeLine: function removeLine(data) {\n        // jshint unused:false\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method updateLine Updates a line into the cart\n    // @public @extlayer\n    // @param {Line} data\n    // @return {Deferred} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    updateLine: function updateLine(data) {\n        // jshint unused:false\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method getSummary Returns the summary of the cart\n    // @public @extlayer\n    // @return {Deferred<Summary>} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    getSummary: function getSummary() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method submit Submits the order\n    // @public @extlayer\n    // @return {Deferred<ConfirmationSubmit>} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    submit: function submit() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method addPayment Adds a payment method\n    // @public @extlayer\n    // @param {PaymentMethod} data\n    // @return {Deferred} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    addPayment: function addPayment(data) {\n        // jshint unused:false\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method getPaymentMethods returns the payment methods added to the order\n    // @public @extlayer\n    // @return {Deferred<Array<PaymentMethod>>} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    getPaymentMethods: function getPaymentMethods() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method setPurchaseOrderNumber Adds a purchase order number to the order\n    // @public @extlayer\n    // @param {String} purchase_number\n    // @param {Boolean} (optional) save_order Indicate if the change will be saved in the order\n    // @return {Deferred} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    setPurchaseOrderNumber: function setPurchaseOrderNumber() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method setTransactionBodyField Sets the value of a transaction body field\n    // @public @extlayer\n    // @param {TransactionBodyFieldData} data\n    // @return {Deferred} Return a Deferred that is resolved in case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    setTransactionBodyField: function setTransactionBodyField() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method getPurchaseOrderNumber returns the purchase order number added to the order\n    // @public @extlayer\n    // @return {Deferred<String>} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    getPurchaseOrderNumber: function getPurchaseOrderNumber() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method triggerAddToCartConfirmation Triggers the add-to-cart behavior configured in the account\n    // @public @extlayer\n    // @return {Deferred} Return a Deferred that is resolved in case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    triggerAddToCartConfirmation: function triggerAddToCartConfirmation() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method addPromotion Adds a promotion\n    // @public @extlayer\n    // @param {Promotion} data\n    // @return {Deferred} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    addPromotion: function addPromotion(data) {\n        // jshint unused:false\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method removePromotion Removes a promotion\n    // @public @extlayer\n    // @return {Deferred} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    removePromotion: function removePromotion(data) {\n        // jshint unused:false\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method getPromotions returns the promotions' codes added to the cart\n    // @public @extlayer\n    // @return {Deferred<Array<Promotion>>} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    getPromotions: function getPromotions() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method estimateShipping Returns the estimated shipping costs\n    // @param {Address} data\n    // @public @extlayer\n    // @return {Deferred} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    estimateShipping: function estimateShipping(data) {\n        // jshint unused:false\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method removeShipping Removes the shipping method\n    // @public @extlayer\n    // @return {Deferred} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    removeShipping: function removeShipping() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method getShipAddress Returns the ship address of the order\n    // @public @extlayer\n    // @return {Deferred<Address>} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    getShipAddress: function getShipAddress() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method getBillAddress Returns the bill address of the order\n    // @public @extlayer\n    // @return {Deferred<Address>} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    getBillAddress: function getBillAddress() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method setShipAddress Sets the ship address\n    // @param {String} address_id\n    // @public @extlayer\n    // @return {Deferred} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    setShipAddress: function setShipAddress(data) {\n        // jshint unused:false\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method setBillAddress Sets the bill address\n    // @param {String} address_id\n    // @public @extlayer\n    // @return {Deferred} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    setBillAddress: function setBillAddress(data) {\n        // jshint unused:false\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method getShipMethods Returns the ship methods of the order\n    // @public @extlayer\n    // @return {Deferred<Array<ShipMethod>>} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    getShipMethods: function getShipMethods() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method setShipMethod Sets the ship method of the order\n    // @param {ShipMethod} data\n    // @public @extlayer\n    // @return {Deferred<ShipMethod>} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    setShipMethod: function setShipMethod(data) {\n        // jshint unused:false\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method getShipMethod Returns the ship method of the order\n    // @public @extlayer\n    // @return {Deferred<ShipMethod>} Return a Deferred that is resolved in the case the operation was done successfully.\n    // or the promise is rejected with an error message.\n    getShipMethod: function getShipMethod() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method voidLine Voids a line. Implemented only for SCIS\n    // @public @extlayer\n    voidLine: function voidLine() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method unvoidLine Unvoids a line. Implemented only for SCIS\n    // @public @extlayer\n    unvoidLine: function unvoidLine() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method updateCustomer Updates a customer data. Implemented only for SCIS\n    // @public @extlayer\n    updateCustomer: function updateCustomer() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method clearEstimateShipping\n    clearEstimateShipping: function clearEstimateShipping() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method setCustomer Add a customer to the cart. Implemented only for SCIS\n    // @public @extlayer\n    setCustomer: function setCustomer() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // @method returnLine. Return a line into the cart. Implemented only for SCIS\n    // @public @extlayer\n    returnLine: function returnLine() {\n        throw ERROR_IDENTIFIERS.notImplemented;\n    },\n\n    // updating tell us if the line is going to be used for updateLine\n    _validateLine: function _validateLine(data, updating) {\n        // jshint unused:false\n\n        if (!data || !_.isObject(data.line)) {\n            return this._reportError(\n                'INVALID_PARAM',\n                'Invalid parameter. It must be a valid object and must contain a line object'\n            );\n        }\n        // TODO call _reportError (code, description) when an invalid line is passed\n    },\n\n    _validateLines: function _validateLines(data) {\n        if (!data || !_.isArray(data.lines)) {\n            return this._reportError(\n                'INVALID_PARAM',\n                'Invalid parameter. It must be a valid object and must contain a lines array'\n            );\n        }\n\n        const self = this;\n\n        _.map(data.lines, function(line) {\n            self._validateLine({\n                line: line\n            });\n        });\n    },\n\n    _validateLineId: function _validateLineId(data) {\n        if (!data || !_.isString(data.line_id)) {\n            return this._reportError(\n                'INVALID_PARAM',\n                'Invalid parameter. It must be a valid object and must contain a line_id string'\n            );\n        }\n    },\n\n    _validateCustomer: function _validateCustomer(data) {\n        // jshint unused:false\n\n        if (!data || !_.isObject(data.customer)) {\n            return this._reportError(\n                'INVALID_PARAM',\n                'Invalid parameter. It must be a valid objec, must contain a customer object and customer must contain a customer_id string'\n            );\n        }\n        // TODO call _reportError (code, description) when an invalid line is passed\n    },\n\n    _validatePromocode: function _validatePromocode(promocode) {\n        if (!promocode) {\n            return this._reportError(\n                'INVALID_PARAM',\n                'Invalid parameter. It must be a valid promocode, must contain a string.'\n            );\n        }\n    },\n\n    _validateInternalid: function _validateInternalid(internalid) {\n        if (!internalid) {\n            return this._reportError(\n                'INVALID_PARAM',\n                'Invalid parameter. It must be a valid internalid, must contain a string.'\n            );\n        }\n    },\n\n    // @method _normalizeLines formats each line grouping both commons attributes (SCIS and SCA) and non-commons.\n    // The last into a extras named object.\n    // @private\n    // @param {Array<Line>} lines\n    _normalizeLines: function _normalizeLines(src_lines) {\n        return _.map(src_lines.models || src_lines, this._normalizeLine);\n    },\n\n    // @method _normalizeLine formats the line grouping both commons attributes (SCIS and SCA) and non-commons.\n    // The last into a extras named object.\n    // @private\n    // @param {Line} line\n    _normalizeLine: function _normalizeLine(src_line) {\n        const line = Utils.deepCopy(src_line);\n        const commonLineAttrs = [\n            'internalid',\n            'item',\n            'quantity',\n            'amount',\n            'rate',\n            'tax_amount',\n            'tax_code',\n            'itemtype',\n            'options'\n        ];\n        const commonItemAttrs = [\n            'internalid',\n            'itemid',\n            'displayname',\n            'isinactive',\n            'itemtype',\n            'minimumquantity'\n        ];\n\n        const formatted_line: any = format(line, commonLineAttrs);\n\n        if (line.item) {\n            line.item.itemtype = line.item.itemtype || line.item.type;\n            formatted_line.item = format(line.item, commonItemAttrs);\n        }\n\n        return formatted_line;\n    },\n\n    _normalizeAddLineBefore: function _normalizeAddLineBefore(line) {\n        return {\n            line: this._normalizeLine(line)\n        };\n    },\n\n    _normalizeAddLineAfter: function _normalizeAddLineAfter(new_line, line) {\n        return {\n            result: new_line,\n            line: this._normalizeLine(line)\n        };\n    },\n\n    _normalizeUpdateLineBefore: function _normalizeUpdateLineBefore(line) {\n        return {\n            line: this._normalizeLine(line)\n        };\n    },\n\n    _normalizeUpdateLineAfter: function _normalizeUpdateLineAfter(line) {\n        return {\n            line: this._normalizeLine(line)\n        };\n    },\n\n    _normalizeRemoveLineBefore: function _normalizeUpdateLineBefore(line) {\n        return {\n            line_id: this._normalizeLine(line).internalid\n        };\n    },\n\n    _normalizeRemoveLineAfter: function _normalizeUpdateLineBefore(line) {\n        return {\n            line_id: this._normalizeLine(line).internalid\n        };\n    },\n\n    _normalizeSummary: function _normalizeSummary(inner_summary) {\n        const summary = Utils.deepCopy(inner_summary);\n        const commonSummaryAttrs = [\n            'total',\n            'taxtotal',\n            'tax2total',\n            'discounttotal',\n            'subtotal',\n            'shippingcost',\n            'handlingcost',\n            'giftcertapplied',\n            'estimatedshipping'\n        ];\n\n        return format(summary, commonSummaryAttrs);\n    },\n\n    _normalizeAddress: function _normalizeAddress(inner_address) {\n        const address = Utils.deepCopy(inner_address);\n        const commonAddressAttrs = [\n            'internalid',\n            'zip',\n            'country',\n            'addr1',\n            'addr2',\n            'addr3',\n            'city',\n            'company',\n            'defaultbilling',\n            'defaultshipping',\n            'fullname',\n            'isresidential',\n            'isvalid',\n            'phone',\n            'state'\n        ];\n\n        return format(address, commonAddressAttrs);\n    },\n\n    _normalizeEstimateBefore: function _normalizeEstimateBefore(address) {\n        return {\n            address: this._normalizeAddress(address)\n        };\n    },\n\n    _normalizeEstimateAfter: function _normalizeEstimateAfter(order) {\n        const address = _.find(order.addresses, function(address: any) {\n            return address && address.internalid && address.internalid === order.shipaddress;\n        });\n\n        return {\n            result: this._normalizeSummary(order.summary),\n            address: this._normalizeAddress(address)\n        };\n    },\n\n    _normalizeClearEstimateShippingBefore: function _normalizeClearEstimateShippingBefore() {\n        return {};\n    },\n\n    _normalizeClearEstimateShippingAfter: function _normalizeClearEstimateShippingAfter(order) {\n        return this._normalizeEstimateAfter(order);\n    },\n\n    _normalizePromocode: function _normalizePromocode(promocode) {\n        const promotion = Utils.deepCopy(promocode);\n        const commonPromotionAttrs = [\n            'internalid',\n            'type',\n            'name',\n            'rate',\n            'code',\n            'errormsg',\n            'isvalid'\n        ];\n\n        return format(promotion, commonPromotionAttrs);\n    },\n\n    _normalizeShipMethodBefore: function _normalizeShipMethodBefore(ship_method_id) {\n        return {\n            internalid: ship_method_id\n        };\n    },\n\n    _normalizeShipMethod: function _normalizeShipMethod(inner_ship_method) {\n        const ship_method = Utils.deepCopy(inner_ship_method);\n        const commonShipMethodAttrs = [\n            'internalid',\n            'name',\n            'rate',\n            'rate_formatted',\n            'shipcarrier'\n        ];\n\n        return format(ship_method, commonShipMethodAttrs);\n    },\n\n    _normalizeConfirmation: function _normalizeConfirmation(inner_confirmation) {\n        const confirmation = Utils.deepCopy(inner_confirmation);\n        const commonConfirmationAttrs = [\n            'internalid',\n            'confirmationnumber',\n            'lines',\n            'paymentmethods',\n            'promocodes',\n            'reasoncode',\n            'statuscode',\n            'summary',\n            'tranid'\n        ];\n\n        confirmation.lines = this._normalizeLines(confirmation.lines || []);\n        confirmation.paymentmethods = _.map(\n            confirmation.paymentmethods || [],\n            this._normalizePaymentMethod\n        );\n        confirmation.promocodes = _.map(confirmation.promocodes || [], this._normalizePromocode);\n        confirmation.summary = this._normalizeSummary(confirmation.summary);\n\n        return {\n            confirmation: format(confirmation, commonConfirmationAttrs)\n        };\n    },\n\n    _normalizePaymentMethod: function _normalizePaymentMethod(inner_payment_method) {\n        if (_.isUndefined(inner_payment_method)) {\n            return {};\n        }\n\n        const payment_method = Utils.deepCopy(inner_payment_method);\n\n        const commonPaymentMethodAttrs = [\n            'internalid',\n            'type',\n            'creditcard',\n            'key',\n            'thankyouurl',\n            'errorurl',\n            'giftcertificate'\n        ];\n        const commonCreditCardAttrs = [\n            'ccnumber',\n            'ccname',\n            'ccexpiredate',\n            'expmonth',\n            'expyear',\n            'ccsecuritycode',\n            'paymentmethod'\n        ];\n        const commonCreditCardPaymentAttrs = [\n            'internalid',\n            'name',\n            'creditcard',\n            'ispaypal',\n            'key'\n        ];\n        const commonGiftCertificateAttrs = ['internalid', 'name', 'creditcard', 'ispaypal', 'key'];\n\n        const formatted_payment_method: any = format(payment_method, commonPaymentMethodAttrs);\n\n        if (payment_method.creditcard) {\n            formatted_payment_method.creditcard = format(\n                payment_method.creditcard,\n                commonCreditCardAttrs\n            );\n\n            if (payment_method.creditcard.paymentmethod) {\n                formatted_payment_method.creditcard.paymentmethod = format(\n                    payment_method.creditcard.paymentmethod,\n                    commonCreditCardPaymentAttrs\n                );\n            }\n        }\n\n        if (payment_method.giftcertificate) {\n            formatted_payment_method.giftcertificate = format(\n                payment_method.giftcertificate,\n                commonGiftCertificateAttrs\n            );\n        }\n\n        return {\n            payment_method: formatted_payment_method\n        };\n    },\n\n    _normalizeVoidLineBefore: function _normalizeVoidLineBefore(line) {\n        return {\n            line: this._normalizeLine(line)\n        };\n    },\n\n    _normalizeVoidLineAfter: function _normalizeVoidLineAfter(line) {\n        return {\n            line: this._normalizeLine(line)\n        };\n    },\n\n    _normalizeUnVoidLineBefore: function _normalizeUnVoidLineBefore(line) {\n        return {\n            line: this._normalizeLine(line)\n        };\n    },\n\n    _normalizeUnVoidLineAfter: function _normalizeUnVoidLineAfter(line) {\n        return {\n            line: this._normalizeLine(line)\n        };\n    },\n\n    _normalizeSetCustomerBefore: function _normalizeSetCustomerBefore(customer) {\n        return {\n            customer: this._normalizeCustomer(customer)\n        };\n    },\n\n    _normalizeSetCustomerAfter: function _normalizeSetCustomerAfter(customer) {\n        return {\n            customer: this._normalizeCustomer(customer)\n        };\n    },\n\n    _normalizeCustomer: function _normalizeCustomer(inner_customer) {\n        const customer = Utils.deepCopy(inner_customer);\n        const commonCustomerAttrs = ['internalid', 'name'];\n\n        return format(customer, commonCustomerAttrs);\n    },\n\n    // @method _normalizeAddGlobalDiscount formats each line grouping both commons attributes (SCIS and SCA) and non-commons.\n    // The last into a extras named object.\n    // @private\n    // @param {Object} discount\n    _normalizeGlobalDiscount: function _normalizeGlobalDiscount(discount) {\n        const item = Utils.deepCopy(discount);\n        const commonDiscountAttrs = ['id', 'rate', 'description'];\n\n        return format(item, commonDiscountAttrs);\n    },\n\n    _normalizeLineDiscount: function _normalizeLineDiscount(discount) {\n        const item = Utils.deepCopy(discount);\n        const commonDiscountAttrs = ['discount', 'item'];\n\n        return format(item, commonDiscountAttrs);\n    },\n\n    _normalizeGlobalPromotion: function _normalizeGlobalPromotion(promotion) {\n        const item = Utils.deepCopy(_.last(promotion));\n        const commonPromoAttrs = ['internalid', 'couponcode', 'toApply'];\n\n        return format(item, commonPromoAttrs);\n    },\n    _normalizeAddGlobalPromotionAfter: function _normalizeAddGlobalPromotionAfter(promotions) {\n        const promotion = Utils.deepCopy(_.last(promotions));\n        const commonPromoAttrs = ['internalid', 'couponcode', 'discountrate'];\n\n        return format(promotion, commonPromoAttrs);\n    },\n    _normalizeReturnLines: function _normalizeReturnLines(src) {\n        let lines = [];\n\n        if (!_.isArray(src)) {\n            lines.push(src);\n        } else {\n            lines = Utils.deepCopy(src);\n        }\n\n        return _.map(lines, this._normalizeReturnLine);\n    },\n\n    _normalizeReturnLine: function _normalizeReturnLine(src_line) {\n        const returned_line = Utils.deepCopy(src_line);\n        const commonReturnLineAttrs = [\n            'line',\n            'item',\n            'quantity',\n            'returnedQuantity',\n            'return_reason'\n        ];\n        const commonItemAttrs = [\n            'internalid',\n            'itemid',\n            'displayname',\n            'isinactive',\n            'itemtype',\n            'minimumquantity'\n        ];\n\n        const formatted_returned_line: any = format(returned_line, commonReturnLineAttrs);\n\n        if (returned_line.item) {\n            formatted_returned_line.item = format(returned_line.item, commonItemAttrs);\n        }\n\n        return {\n            returned_line: formatted_returned_line\n        };\n    },\n\n    _normalizeUnReturnLine: function _normalizeUnReturnLine(src_line) {\n        return {\n            unreturned_line_number: src_line\n        };\n    },\n\n    _normalizeAddGiftCard: function _normalizeAddGiftCard(src) {\n        const gift_card = Utils.deepCopy(src);\n        const commonAttrs = ['cert_number', 'amount'];\n\n        return {\n            gift_card: format(gift_card, commonAttrs)\n        };\n    },\n\n    _normalizePurchaseOrderNumber: function _normalizePurchaseOrderNumber(purchaseOrderNumber) {\n        return {\n            purchaseOrderNumber\n        };\n    }\n});\n\nexport = icart_component;\n\n// jsdoc description for data:\n\n// @class ConfirmationSubmit\n// @property {String} internalid\n// @property {String} confirmationnumber\n// @property {Array<Line>} lines\n// @property {Array<PaymentMethod>} paymentmethods\n// @property {Array<Promotion>} promocodes\n// @property {String} reasoncode\n// @property {String} statuscode\n// @property {Summary} summary\n// @property {String} tranid\n\n// @class ShipMethod\n// @property {String} internalid\n// @property {String} name\n// @property {Number} rate\n// @property {String} rate_formatted\n// @property {String} shipcarrier\n\n// @class Address\n// @property {String} internalid\n// @property {String} zip\n// @property {String} country\n// @property {String} addr1\n// @property {String} addr2\n// @property {String} addr3\n// @property {String} city\n// @property {String} company\n// @property {Boolean} defaultbilling\n// @property {Boolean} defaultshipping\n// @property {String} fullname\n// @property {Boolean} isresidential\n// @property {Boolean} isvalid\n// @property {String} phone\n// @property {String} state\n\n// @class PaymentMethod\n// @property {String} internalid\n// @property {String} type [creditcard, invoice, paypal, giftcertificate, external_checkout]\n// @property {CreditCard} creditcard Required only if it is a creditcard\n// @property {String} key\n// @property {String} thankyouurl\n// @property {String} errorurl\n// @property {GiftCertificate} giftcertificate Required only if it is a giftcertificate\n\n// @class CreditCard\n// @property {String} ccnumber\n// @property {String} ccname\n// @property {String} ccexpiredate\n// @property {String} expmonth\n// @property {String} expyear\n// @property {String} ccsecuritycode\n// @property {InnerPaymentMethod} paymentmethod\n\n// @class InnerPaymentMethod\n// @property {String} internalid\n// @property {String} name\n// @property {Boolean} creditcard\n// @property {Boolean} ispaypal\n// @property {String} key\n\n// @class GiftCertificate\n// @property {String} code\n\n// @class Promotion\n// @property {String} internalid\n// @property {String} type\n// @property {String} name\n// @property {String} rate\n// @property {String} code\n// @property {String} errormsg\n// @property {Boolean} isvalid\n\n// @class Line\n// @property {String} internalid\n// @property {Number} quantity\n// @property {Number} amount\n// @property {Number} rate\n// @property {Number} tax_amount\n// @property {String} tax_code\n// @property {String} itemtype\n// @property {Line.Extras} extras\n// @property {Line.Item} item\n// @property {Array<Line.Option>} options\n\n// @class Line.Extras\n// @property {String} shipaddress SCA specific\n// @property {String} shipmethod SCA specific\n// @property {Number} tax_rate SCA specific\n// @property {String} rate_formatted SCA specific\n// @property {Number} discount SCA specific\n// @property {number} total SCA specific\n// @property {String} amount_formatted SCA specific\n// @property {String} tax_amount_formatted SCA specific\n// @property {String} discount_formatted SCA specific\n// @property {String} total_formatted SCA specific\n// @property {String} description SCIS specific\n// @property {String} giftcertfrom SCIS specific\n// @property {String} giftcertmessage SCIS specific\n// @property {Number} giftcertnumber SCIS specific\n// @property {String} giftcertrecipientemail SCIS specific\n// @property {String} giftcertrecipientname SCIS specific\n// @property {String} taxrate1 SCIS specific\n// @property {String} taxrate2 SCIS specific\n// @property {String} grossamt SCIS specific\n// @property {String} tax1amt SCIS specific\n// @property {String} custreferralcode SCIS specific\n// @property {Boolean} excludefromraterequest SCIS specific\n// @property {String} custcol_ns_pos_voidqty SCIS specific\n// @property {Number} voidPercentage SCIS specific\n// @property {Number} returnedQuantity SCIS specific\n// @property {Boolean} isUnvalidatedReturn SCIS specific\n// @property {Boolean} order SCIS specific\n// @property {String} note SCIS specific\n\n// @class Line.Option\n// @property {String} cartOptionId\n// @property {internalid:String} value\n\n// @class Line.Item\n// @property {Number} internalid\n// @property {String} itemid\n// @property {String} displayname\n// @property {Boolean} isinactive\n// @property {String} itemtype\n// @property {Number} minimumquantity\n// @property {Line.Item.Extras} extras\n\n// @class Line.Item.Extras\n// @property {Boolean} isinstock SCA specific\n// @property {Boolean} isonline SCA specific\n// @property {Object} matrixchilditems_detail SCA specific\n// @property {Boolean} ispurchasable SCA specific\n// @property {String} stockdescription SCA specific\n// @property {Boolean} isfulfillable SCA specific\n// @property {Boolean} isbackorderable SCA specific\n// @property {Boolean} showoutofstockmessage SCA specific\n// @property {String} outofstockmessage SCA specific\n// @property {String} storedisplayname2 SCA specific\n// @property {Number} pricelevel1 SCA specific\n// @property {String} pricelevel1_formatted SCA specific\n// @property {String} urlcomponent SCA specific\n// @property {Object} itemimages_detail SCA specific\n// @property {Object} onlinecustomerprice_detail SCA specific\n// @property {Object} itemoptions_detail SCA specific\n// @property {String} type SCIS specific\n// @property {String} baseprice SCIS specific\n// @property {String} matrix_parent SCIS specific\n// @property {String} upccode SCIS specific\n// @property {String} additional_upcs SCIS specific\n// @property {Boolean} isdonationitem SCIS specific\n// @property {Boolean} custitem_ns_pos_physical_item SCIS specific\n\n// @class Summary\n// @property {Number} total\n// @property {Number} taxtotal\n// @property {Number} tax2total\n// @property {Number} discounttotal\n// @property {Number} subtotal\n// @property {Number} shippingcost\n// @property {Number} handlingcost\n// @property {Number} giftcertapplied\n// @property {Number} estimatedshipping SCA specific\n// @property {Summary.Extras} extras\n\n// @class Summary.Extras\n// @property {String} discounttotal_formatted SCA specific\n// @property {String} taxonshipping_formatted SCA specific\n// @property {String} taxondiscount_formatted SCA specific\n// @property {Number} itemcount SCA specific\n// @property {String} taxonhandling_formatted SCA specific\n// @property {Number} discountedsubtotal SCA specific\n// @property {String} discountedsubtotal_formatted SCA specific\n// @property {Number} taxondiscount SCA specific\n// @property {String} handlingcost_formatted SCA specific\n// @property {Number} taxonshipping SCA specific\n// @property {String} taxtotal_formatted SCA specific\n// @property {String} totalcombinedtaxes_formatted SCA specific\n// @property {Number} totalcombinedtaxes SCA specific\n// @property {String} giftcertapplied_formatted SCA specific\n// @property {String} shippingcost_formatted SCA specific\n// @property {Number} discountrate SCA specific\n// @property {Number} taxonhandling SCA specific\n// @property {String} tax2total_formatted SCA specific\n// @property {String} discountrate_formatted SCA specific\n// @property {String} estimatedshipping_formatted SCA specific\n// @property {String} total_formatted SCA specific\n// @property {String} subtotal_formatted SCA specific\n\n// @property {String} shippingtax1rate SCIS specific\n// @property {Boolean} shippingcostoverridden SCIS specific\n// @property {Number} amountdue SCIS specific\n// @property {String} tranid SCIS specific\n// @property {Date} createddate SCIS specific\n// @property {String} couponcode SCIS specific\n// @property {Date} createdfrom SCIS specific\n// @property {Number} changedue SCIS specific\n\n// @class Customer\n// @property {String} internalid\n// @property {String} name\n\n// @class TransactionBodyFieldData\n// @property {String} fieldId\n// @property {String} type\n// @property {(String|Number|Boolean|Date)} value\n"]}