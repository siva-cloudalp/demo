{"version":3,"sources":["PaymentWizard.Module.Addresses.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAUF,mFAAmF;IACnF,IAAM,4BAA4B,GAAQ,+BAA+B,CAAC,MAAM,CAAC;QAC7E,WAAW,EAAE,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE5C,SAAS,EAAE,gCAAgC;QAE3C,UAAU,EAAE,UAAS,OAAO;YACxB,+BAA+B,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAC5E,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC;YAC1E,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,aAAa,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC;QAC5E,CAAC;QAED,WAAW,EAAE;YACT,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAC3C,IAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAC7D,IAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAErC,uBAAuB;YACvB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBAC3E,IAAI,CAAC,MAAM,EAAE,CAAC;aACjB;QACL,CAAC;QAED,kBAAkB,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBAChC,IAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;oBAC7C,cAAc,EAAE,GAAG;iBACtB,CAAC,CAAC;gBAEH,IAAI,CAAC,SAAS,GAAG,eAAe,IAAI,eAAe,CAAC,EAAE,CAAC;gBAEvD,IAAI,IAAI,CAAC,SAAS,EAAE;oBAChB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;iBAC/C;aACJ;YAED,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;QACxE,CAAC;QAED,YAAY,EAAE;YACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,+BAA+B,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAClF,CAAC;QAED,OAAO,EAAE;YACL,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE;gBAC3B,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC;aACtC;YACD,OAAO,+BAA+B,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACpF,CAAC;QAED,QAAQ,EAAE;YACN,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE;gBAC3B,OAAO,KAAK,CAAC;aAChB;YAED,OAAO,+BAA+B,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACrF,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,4BAA4B,CAAC","file":"PaymentWizard.Module.Addresses.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PaymentWizard.Module.Addresses\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\n\nimport OrderWizardModuleAddressBilling = require('../../OrderWizard.Module.Address/JavaScript/OrderWizard.Module.Address.Billing');\n\n// @class PaymentWizard.Module.Addresses @extend OrderWizard.Module.Address.Billing\nconst PaymentWizardModuleAddresses: any = OrderWizardModuleAddressBilling.extend({\n    itemsPerRow: Utils.isDesktopDevice() ? 3 : 2,\n\n    className: 'PaymentWizard.Module.Addresses',\n\n    initialize: function(options) {\n        OrderWizardModuleAddressBilling.prototype.initialize.apply(this, arguments);\n        this.wizard.model.on('change:payment', jQuery.proxy(this, 'changeTotal'));\n        this.itemsPerRow = _.result(options, 'itemsPerRow') || this.itemsPerRow;\n    },\n\n    changeTotal: function() {\n        const was = this.model.previous('payment');\n        const was_confirmation = this.model.previous('confirmation');\n        const is = this.model.get('payment');\n\n        // Changed from or to 0\n        if (((was === 0 && is !== 0) || (was !== 0 && is === 0)) && !was_confirmation) {\n            this.render();\n        }\n    },\n\n    getSelectedAddress: function() {\n        if (!this.addressId && !this.unset) {\n            const default_address = this.addresses.findWhere({\n                defaultbilling: 'T'\n            });\n\n            this.addressId = default_address && default_address.id;\n\n            if (this.addressId) {\n                this.model.set(this.manage, this.addressId);\n            }\n        }\n\n        return this.addresses.get(this.addressId) || this.getEmptyAddress();\n    },\n\n    unsetAddress: function() {\n        this.unset = true;\n        OrderWizardModuleAddressBilling.prototype.unsetAddress.apply(this, arguments);\n    },\n\n    isValid: function() {\n        if (this.wizard.hidePayment()) {\n            return jQuery.Deferred().resolve();\n        }\n        return OrderWizardModuleAddressBilling.prototype.isValid.apply(this, arguments);\n    },\n\n    isActive: function() {\n        if (this.wizard.hidePayment()) {\n            return false;\n        }\n\n        return OrderWizardModuleAddressBilling.prototype.isActive.apply(this, arguments);\n    }\n});\n\nexport = PaymentWizardModuleAddresses;\n"]}