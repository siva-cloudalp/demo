{"version":3,"sources":["SiteSearch.Button.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAYF,OAAS,YAAY,CAAC,MAAM,CAAC;QACzB,MAAM,EAAE;YACJ,yCAAyC,EAAE,kBAAkB;SAChE;QAED,gCAAgC;QAChC,QAAQ,EAAE,kBAAkB;QAE5B,qBAAqB;QACrB,8DAA8D;QAC9D,iBAAiB;QACjB,UAAU,EAAE;YACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;YAE5C,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QAChE,CAAC;QAED,2BAA2B;QAC3B,gBAAgB,EAAE,UAAS,EAAE;YACzB,EAAE,IAAI,EAAE,CAAC,cAAc,EAAE,CAAC;YAE1B,mDAAmD;YACnD,IAAI,CAAC,CAAC,CAAC,mCAAmC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAClE,IAAM,IAAI,GAAG,IAAI,CAAC;YAElB,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAC/D,CAAC;QAED,gGAAgG;QAChG,oBAAoB,EAAE;YAClB,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC;YAChD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9E,IAAM,OAAO,GAAY,IAAI,KAAK,EAAE,IAAI,IAAI,KAAK,GAAG,CAAC;YAErD,IAAI,KAAK,CAAC,aAAa,EAAE,KAAK,SAAS,IAAI,OAAO,EAAE;gBAChD,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aACrC;iBAAM;gBACH,qCAAqC;gBACrC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;aAC5D;QACL,CAAC;KACJ,CAAC,CAAC","file":"SiteSearch.Button.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"SiteSearch.Button.View\"/>\n\nimport '../../SCA/JavaScript/Configuration';\nimport * as site_search_button from 'site_search_button.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class Site.Search.Button.View @extends Backbone.View\nexport = BackboneView.extend({\n    events: {\n        'click [data-action=\"show-itemsearcher\"]': 'toggleSiteSearch'\n    },\n\n    // @property {Function} template\n    template: site_search_button,\n\n    // @method initialize\n    // @param {Site.Search.Button.View.Initialize.Options} options\n    // @return {Void}\n    initialize: function() {\n        this.application = this.options.application;\n\n        Backbone.history.on('all', this.verifyShowSiteSearch, this);\n    },\n\n    // @method toggleSiteSearch\n    toggleSiteSearch: function(ev) {\n        ev && ev.preventDefault();\n\n        // This add a class 'active' to change button color\n        this.$('[data-action=\"show-itemsearcher\"]').toggleClass('active');\n        const self = this;\n\n        this.application.getLayout().trigger('toggleItemSearcher');\n    },\n\n    // @method verifyShowSiteSearch expand the site search only if hash===home and (phone or tablet)\n    verifyShowSiteSearch: function() {\n        let hash = Backbone.history.getFragment() || '';\n        hash = hash.indexOf('?') === -1 ? hash : hash.substring(0, hash.indexOf('?'));\n        const is_home: boolean = hash === '' || hash === '/';\n\n        if (Utils.getDeviceType() !== 'desktop' && is_home) {\n            this.toggleSiteSearch(null, true);\n        } else {\n            // This hide sitesearch when navigate\n            this.application.getLayout().trigger('hideItemSearcher');\n        }\n    }\n});\n"]}