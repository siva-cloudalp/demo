{"version":3,"sources":["QuickOrder.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAeF,+CAA+C;IAC/C,IAAM,cAAc,GAAQ,YAAY,CAAC,MAAM,CAAC;QAC5C,gCAAgC;QAChC,QAAQ,EAAE,eAAe;QAEzB,sFAAsF;QACtF,iBAAiB;QACjB,UAAU,EAAE;YACR,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,WAAW,EAAE,CAAC;YAEzC,IAAI,CAAC,qBAAqB,GAAG,IAAI,YAAY,CAAC;gBAC1C,kBAAkB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC;gBACzD,iBAAiB,EAAE,KAAK;gBACxB,cAAc,EAAE,IAAI;aACvB,CAAC,CAAC;YACH,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACzE,CAAC;QAED,gJAAgJ;QAChJ,0BAA0B;QAC1B,mBAAmB;QACnB,kBAAkB,EAAE,UAAS,OAAO;YAChC,IAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAS,IAAI;gBAC3D,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC;YAC3C,CAAC,CAAC,CAAC;YAEH,OAAO,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3E,CAAC;QAED,qBAAqB;QACrB,yDAAyD;QACzD,iBAAiB;QACjB,UAAU,EAAE,UAAS,OAAO;YAAhB,iBAkBX;YAjBG,IAAM,OAAO,GAAG,iBAAO,CAAC,SAAS,EAAE,CAAC;YACpC,IAAM,SAAS,GAAc,wBAAwB,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YACxF,IAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;YACtC,IAAA,YAAY,GAAK,OAAO,aAAZ,CAAa;YAEjC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC;gBACjC,IAAM,qBAAqB,GAAG,wBAAwB,CAAC,uBAAuB,CAC1E,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,EAC7B,YAAY,CACf,CAAC;gBACF,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE;oBAClB,YAAY,EAAE,qBAAqB;oBACnC,MAAM,EAAE,SAAS;oBACjB,MAAM,EAAE,SAAS,CAAC,MAAM;oBACxB,YAAY,EAAE,SAAS,CAAC,YAAY;iBACvC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QAED,oCAAoC;QACpC,UAAU,EAAE;YACR,YAAY,EAAE;gBACV,OAAO,IAAI,CAAC,qBAAqB,CAAC;YACtC,CAAC;SACJ;QACD,oGAAoG;QACpG,iBAAiB;QACjB,OAAO,EAAE;YACL,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC/C,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC;QAED,qBAAqB;QACrB,oCAAoC;QACpC,UAAU,EAAE;YACR,iCAAiC;YACjC,OAAO;gBACH,0CAA0C;gBAC1C,mBAAmB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc;aACrD,CAAC;YACF,yBAAyB;QAC7B,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,cAAc,CAAC","file":"QuickOrder.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"QuickOrder.View\"/>\n\nimport * as _ from 'underscore';\nimport * as quick_order_tpl from 'quick_order.tpl';\nimport { Loggers } from '../../../Commons/Loggers/JavaScript/Loggers';\n\nimport * as InstrumentationAddToCart from '../../../Commons/Instrumentation/JavaScript/InstrumentationAddToCart';\nimport { ItemTrack } from '../../../Commons/Instrumentation/JavaScript/APMTrackerParameters';\n\nimport QuickAddView = require('../../QuickAdd/JavaScript/QuickAdd.View');\nimport LiveOrderModel = require('../../../Commons/LiveOrder/JavaScript/LiveOrder.Model');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class QuickOrder.View @extend Backbone.View\nconst QuickOrderView: any = BackboneView.extend({\n    // @property {Function} template\n    template: quick_order_tpl,\n\n    // @method initialize Overrides default method to convert current view in to composite\n    // @return {Void}\n    initialize: function() {\n        this.cart = LiveOrderModel.getInstance();\n\n        this.quickAddViewComponent = new QuickAddView({\n            getItemQuantitySet: _.bind(this.getItemQuantitySet, this),\n            showBackorderable: false,\n            validateMaxQty: true\n        });\n        this.quickAddViewComponent.on('selectedLine', this.addNewLine, this);\n    },\n\n    // @method getItemQuantitySet Auxiliary method used to provide the amount of already added items into the transaction to the quick add component\n    // @param {Number} item_id\n    // @return {Number}\n    getItemQuantitySet: function(item_id) {\n        const selected_line = this.cart.get('lines').find(function(line) {\n            return line.get('item').id === item_id;\n        });\n\n        return selected_line ? parseInt(selected_line.get('quantity'), 10) : 0;\n    },\n\n    // @method addNewLine\n    // @param {QuickAdd.View.SelectedLine.Properties} options\n    // @return {Void}\n    addNewLine: function(options) {\n        const loggers = Loggers.getLogger();\n        const itemTrack: ItemTrack = InstrumentationAddToCart.itemToTrack(options.selectedLine);\n        const actionId = loggers.start('Add to Cart');\n        const { selectedLine } = options;\n\n        this.cart.addLine(selectedLine).then(() => {\n            const addToCartOperationIds = InstrumentationAddToCart.getAddToCartOperationId(\n                this.cart.get('lines').models,\n                selectedLine\n            );\n            loggers.end(actionId, {\n                operationIds: addToCartOperationIds,\n                status: 'success',\n                itemId: itemTrack.itemId,\n                itemQuantity: itemTrack.itemQuantity\n            });\n        });\n    },\n\n    // @property {ChildViews} childViews\n    childViews: {\n        QuickAddView: function() {\n            return this.quickAddViewComponent;\n        }\n    },\n    // @method destroy Override default implementation to clean up all attached events of the initialize\n    // @return {Void}\n    destroy: function() {\n        this.quickAddViewComponent.off('selectedLine');\n        this._destroy();\n    },\n\n    // @method getContext\n    // @return {QuickOrder.View.Context}\n    getContext: function() {\n        // @class QuickOrder.View.Context\n        return {\n            // @property {Boolean} showOpenedAccordion\n            showOpenedAccordion: !!this.options.openQuickOrder\n        };\n        // @class QuickOrder.View\n    }\n});\n\nexport = QuickOrderView;\n"]}