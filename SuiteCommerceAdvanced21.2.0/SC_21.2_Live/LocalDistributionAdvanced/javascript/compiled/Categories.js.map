{"version":3,"sources":["Categories.ts"],"names":[],"mappings":"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","file":"Categories.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Categories\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/GlobalDeclarations.d.ts\" />\n\nimport * as _ from 'underscore';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport * as CategoriesUtils from './Categories.Utils';\nimport { ProfileModel } from '../../Profile/JavaScript/Profile.Model';\n\nimport { CategoriesCollection, CollectionOptions } from './Categories.Collection';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nconst Categories = {\n    topLevelCategories: [],\n\n    categoriesPromise: new (<any>jQuery).Deferred(),\n\n    excludeFromMyAccount: true,\n\n    makeNavigationTab(categories) {\n        const result = [];\n        const self = this;\n\n        _.each(categories, function(category: any) {\n            const href = category.fullurl;\n            const tab = {\n                href,\n                text: category.name,\n                data: {\n                    hashtag: `#${href}`,\n                    touchpoint: 'home'\n                },\n                class: `header-menu-level${category.level}-anchor`,\n                'data-type': 'commercecategory'\n            };\n\n            (<any>tab).additionalFields = CategoriesUtils.getAdditionalFields(\n                category,\n                'categories.menu.fields'\n            );\n\n            if (category.categories) {\n                (<any>tab).categories = self.makeNavigationTab(category.categories);\n            }\n\n            result.push(tab);\n        });\n\n        return result;\n    },\n\n    addToNavigationTabs(categories) {\n        if (Configuration.get('categories.addToNavigationTabs')) {\n            const self = this;\n            const navigationData = Configuration.get('navigationData');\n            let index = -1;\n\n            // delete previews categories on the menu\n            let lastIndex = navigationData.length;\n\n            while (lastIndex--) {\n                if (navigationData[lastIndex]['data-type'] === 'commercecategory') {\n                    navigationData.splice(lastIndex, 1);\n                }\n            }\n\n            for (let i = 0; i < navigationData.length; i++) {\n                if (navigationData[i].placeholder === 'Categories') {\n                    index = i;\n\n                    break;\n                }\n            }\n\n            if (index !== -1) {\n                const tabs = self.makeNavigationTab(categories);\n\n                // navigationData.splice(index, 1);\n\n                _.each(tabs, function(tab, position) {\n                    navigationData.splice(index + position, 0, tab);\n                });\n            }\n\n            this.application.trigger('Configuration.navigationData');\n        }\n    },\n\n    getTopLevelCategoriesUrlComponent() {\n        return this.topLevelCategories;\n    },\n\n    setTopLevelCategoriesUrlComponents(categories) {\n        const self = this;\n        _.each(categories, function(category: any) {\n            self.topLevelCategories.push(category.fullurl);\n        });\n    },\n\n    getCategoriesPromise() {\n        return this.categoriesPromise;\n    },\n\n    mountToApp(application) {\n        if (Configuration.get('categories')) {\n            this.application = application;\n            let categories = SC.CATEGORIES;\n\n            this.application.waitForPromise(this.categoriesPromise);\n\n            // When PCV is enabled, and you are logged in, or you couldn't get the\n            // categories from the shortcache(due to environment is not production),\n            // you need to replace the cached categories with the specific categories\n            // of the logged in user\n            if (\n                !SC.CATEGORIES || (SC.ENVIRONMENT.siteSettings.isPersonalizedCatalogViewsEnabled &&\n                !ProfileModel.getInstance().isAnnonymous())\n            ) {\n                const options: CollectionOptions = {\n                    level: Configuration.get('categories.menuLevel'),\n                    preventDefault: true\n                };\n\n                const categoriesFetch = new CategoriesCollection(options).fetch();\n\n                return categoriesFetch\n                    .then(model => {\n                        const categories = (model && model.data) || [];\n                        SC.CATEGORIES = categories;\n                        this.setTopLevelCategoriesUrlComponents(categories);\n                        this.addToNavigationTabs(categories);\n                    })\n                    .catch(() => {\n                        console.log('Failed to get Dynamic Categories for logged in user');\n                    })\n                    .always(() => {\n                        this.categoriesPromise.resolve();\n                    });\n            }\n\n            categories = CategoriesUtils.sortingBy(categories, CategoriesUtils.getSortBy('menu'));\n            this.setTopLevelCategoriesUrlComponents(categories);\n            this.addToNavigationTabs(categories);\n            this.categoriesPromise.resolve();\n        }\n    }\n};\n\nexport = Categories;\n"]}