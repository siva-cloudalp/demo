{"version":3,"sources":["Transaction.Model.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAcF,IAAM,eAAe,GAAQ,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;QAC/C,eAAe,EAAE,yBAAyB;QAE1C,QAAQ,EAAE;YACN,SAAS,EAAE,IAAI;YACf,WAAW,EAAE,IAAI;SACpB;QACD,YAAY,EAAE,KAAK;QAEnB,UAAU,EAAE,UAAS,UAAU;YAC3B,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;YAE3B,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAM,MAAI,GAAG,IAAI,CAAC;gBAElB,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,UAAS,EAAE,EAAE,IAAI;oBACxC,MAAI,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBACrD,CAAC,CAAC,CAAC;aACN;YAED,IAAI,CAAC,EAAE,CAAC,cAAc,EAAE,UAAS,KAAK,EAAE,KAAK;gBACzC,IAAI,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,KAAK,CAAC,eAAe,EAAE;oBAC1D,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;wBACxC,MAAM,EAAE,IAAI;qBACf,CAAC,CAAC;oBACH,KAAK;yBACA,GAAG,CAAC,OAAO,CAAC;yBACZ,KAAK,CAAC,KAAK,YAAY,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;iBAC7E;qBAAM;oBACH,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;wBACjD,MAAM,EAAE,IAAI;qBACf,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,EAAE,CAAC,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;YAE3E,IAAI,CAAC,EAAE,CAAC,oBAAoB,EAAE,UAAS,KAAK,EAAE,WAAW;gBACrD,IAAI,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,+BAA+B,EAAE;oBAC1E,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;wBACpD,MAAM,EAAE,IAAI;qBACf,CAAC,CAAC;oBACH,KAAK;yBACA,GAAG,CAAC,aAAa,CAAC;yBAClB,KAAK,CACF,WAAW,YAAY,+BAA+B;wBAClD,CAAC,CAAC,WAAW,CAAC,MAAM;wBACpB,CAAC,CAAC,WAAW,CACpB,CAAC;iBACT;qBAAM;oBACH,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,+BAA+B,CAAC,WAAW,CAAC,EAAE;wBACvE,MAAM,EAAE,IAAI;qBACf,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,IAAI,EAAE,CAAC,UAAU,IAAI,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;YAEvF,IAAI,CAAC,EAAE,CAAC,uBAAuB,EAAE,UAAS,KAAK,EAAE,cAAc;gBAC3D,IAAI,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,YAAY,kCAAkC,EAAE;oBAChF,KAAK,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;wBAC1D,MAAM,EAAE,IAAI;qBACf,CAAC,CAAC;oBACH,KAAK;yBACA,GAAG,CAAC,gBAAgB,CAAC;yBACrB,KAAK,CACF,cAAc,YAAY,kCAAkC;wBACxD,CAAC,CAAC,cAAc,CAAC,MAAM;wBACvB,CAAC,CAAC,cAAc,CACvB,CAAC;iBACT;qBAAM;oBACH,KAAK,CAAC,GAAG,CACL,gBAAgB,EAChB,IAAI,kCAAkC,CAAC,cAAc,CAAC,EACtD;wBACI,MAAM,EAAE,IAAI;qBACf,CACJ,CAAC;iBACL;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CACR,uBAAuB,EACvB,IAAI,EACJ,CAAC,UAAU,IAAI,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,CAClD,CAAC;YAEF,IAAI,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAS,KAAK,EAAE,SAAS;gBACjD,IAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,sCAAiB,EAAE;oBAC1D,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;wBAChD,MAAM,EAAE,IAAI;qBACf,CAAC,CAAC;oBACH,KAAK;yBACA,GAAG,CAAC,WAAW,CAAC;yBAChB,KAAK,CAAC,SAAS,YAAY,sCAAiB,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;iBACrF;qBAAM;oBACH,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,sCAAiB,CAAC,SAAS,CAAC,EAAE;wBACrD,MAAM,EAAE,IAAI;qBACf,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,IAAI,EAAE,CAAC,UAAU,IAAI,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;QACvF,CAAC;QAED,mFAAmF;QACnF,4BAA4B;QAC5B,OAAO,EAAE;YACL,eAAe;YACf,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;YAE7B,IAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC;gBACpD,IAAI,EAAE,YAAY;aACrB,CAAC,CAAC;YACH,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC;gBAChD,IAAI,EAAE,QAAQ;aACjB,CAAC,CAAC;YAEH,IAAI,UAAU,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;gBAC7C,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aACjD;YAED,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBACnC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aAC7C;YAED,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,EAAE;gBACnF,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;oBACtB,MAAM,EAAE,IAAI;iBACf,CAAC,CAAC;gBACH,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE;oBACtB,MAAM,EAAE,IAAI;iBACf,CAAC,CAAC;aACN;YAED,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;QACvB,CAAC;QAED,UAAU,EAAE,SAAS,UAAU,CAAC,cAAc;YAC1C,qCAAqC;YACrC,IAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAEnD,6BAA6B;YAC7B,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAEjE,qBAAqB;YACrB,cAAc,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YAEpC,4BAA4B;YAC5B,eAAe,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACxC,CAAC;QAED,UAAU,EAAE,SAAS,UAAU,CAAC,YAAY,EAAE,UAAU,EAAE,OAAO;YAC7D,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QAChD,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,eAAe,CAAC","file":"Transaction.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Transaction.Model\"/>\n\nimport * as _ from 'underscore';\n\nimport BackboneCachedSync = require('../../BackboneExtras/JavaScript/Backbone.CachedSync');\n\nimport TransactionLineCollection = require('./Transaction.Line.Collection');\nimport TransactionShipmethodCollection = require('./Transaction.Shipmethod.Collection');\nimport TransactionPaymentmethodCollection = require('./Transaction.Paymentmethod.Collection');\nimport { AddressCollection } from '../../Address/JavaScript/Address.Collection';\nimport Backbone = require('../../Utilities/JavaScript/backbone.custom');\n\nconst TranactionModel: any = Backbone.Model.extend({\n    linesCollection: TransactionLineCollection,\n\n    defaults: {\n        addresses: null,\n        shipmethods: null\n    },\n    cacheSupport: false,\n\n    initialize: function(attributes) {\n        _.extend(this, attributes);\n\n        if (this.cacheSupport) {\n            const self = this;\n\n            _.each(BackboneCachedSync, function(fn, name) {\n                self[name === 'cachedSync' ? 'sync' : name] = fn;\n            });\n        }\n\n        this.on('change:lines', function(model, lines) {\n            if (model.previous('lines') instanceof model.linesCollection) {\n                model.set('lines', model.previous('lines'), {\n                    silent: true\n                });\n                model\n                    .get('lines')\n                    .reset(lines instanceof model.linesCollection ? lines.models : lines);\n            } else {\n                model.set('lines', new model.linesCollection(lines), {\n                    silent: true\n                });\n            }\n        });\n        this.trigger('change:lines', this, (attributes && attributes.lines) || []);\n\n        this.on('change:shipmethods', function(model, shipmethods) {\n            if (model.previous('shipmethods') instanceof TransactionShipmethodCollection) {\n                model.set('shipmethods', model.previous('shipmethods'), {\n                    silent: true\n                });\n                model\n                    .get('shipmethods')\n                    .reset(\n                        shipmethods instanceof TransactionShipmethodCollection\n                            ? shipmethods.models\n                            : shipmethods\n                    );\n            } else {\n                model.set('shipmethods', new TransactionShipmethodCollection(shipmethods), {\n                    silent: true\n                });\n            }\n        });\n        this.trigger('change:shipmethods', this, (attributes && attributes.shipmethods) || []);\n\n        this.on('change:paymentmethods', function(model, paymentmethods) {\n            if (model.previous('paymentmethods') instanceof TransactionPaymentmethodCollection) {\n                model.set('paymentmethods', model.previous('paymentmethods'), {\n                    silent: true\n                });\n                model\n                    .get('paymentmethods')\n                    .reset(\n                        paymentmethods instanceof TransactionPaymentmethodCollection\n                            ? paymentmethods.models\n                            : paymentmethods\n                    );\n            } else {\n                model.set(\n                    'paymentmethods',\n                    new TransactionPaymentmethodCollection(paymentmethods),\n                    {\n                        silent: true\n                    }\n                );\n            }\n        });\n        this.trigger(\n            'change:paymentmethods',\n            this,\n            (attributes && attributes.paymentmethods) || []\n        );\n\n        this.on('change:addresses', function(model, addresses) {\n            if (model.previous('addresses') instanceof AddressCollection) {\n                model.set('addresses', model.previous('addresses'), {\n                    silent: true\n                });\n                model\n                    .get('addresses')\n                    .reset(addresses instanceof AddressCollection ? addresses.models : addresses);\n            } else {\n                model.set('addresses', new AddressCollection(addresses), {\n                    silent: true\n                });\n            }\n        });\n        this.trigger('change:addresses', this, (attributes && attributes.addresses) || []);\n    },\n\n    // @method _submit Internal method invoked when the user place/submit a transaction\n    // @return {jQuery.Deferred}\n    _submit: function() {\n        // Force a POST\n        this.set('internalid', null);\n\n        const creditcard = this.get('paymentmethods').findWhere({\n            type: 'creditcard'\n        });\n        const paypal = this.get('paymentmethods').findWhere({\n            type: 'paypal'\n        });\n\n        if (creditcard && !creditcard.get('creditcard')) {\n            this.get('paymentmethods').remove(creditcard);\n        }\n\n        if (paypal && !paypal.get('complete')) {\n            this.get('paymentmethods').remove(paypal);\n        }\n\n        if (_.isFunction(this.shippingAddressIsRequired) && !this.shippingAddressIsRequired()) {\n            this.unset('shipaddress', {\n                silent: true\n            });\n            this.set('sameAs', false, {\n                silent: true\n            });\n        }\n\n        return this.save();\n    },\n\n    addPayment: function addPayment(payment_method) {\n        // Gets the payment method collection\n        const payment_methods = this.get('paymentmethods');\n\n        // Removes the primary if any\n        payment_methods.remove(payment_methods.where({ primary: true }));\n\n        // Sets it as primary\n        payment_method.set('primary', true);\n\n        // Adds it to the collection\n        payment_methods.add(payment_method);\n    },\n\n    setAddress: function setAddress(address_type, address_id, options) {\n        this.set(address_type, address_id, options);\n    }\n});\n\nexport = TranactionModel;\n"]}