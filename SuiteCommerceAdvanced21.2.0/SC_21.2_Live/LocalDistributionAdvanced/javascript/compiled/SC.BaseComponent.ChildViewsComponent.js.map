{"version":3,"sources":["SC.BaseComponent.ChildViewsComponent.ts"],"names":[],"mappings":"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","file":"SC.BaseComponent.ChildViewsComponent.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"SC.BaseComponent.ChildViewsComponent\"/>\n\nimport * as _ from 'underscore';\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport {\n    View,\n    EventsHash,\n    StaticChildViews,\n    ChildViewInstances,\n    ChildViewGenerator,\n    ContextData,\n    ContextDataMethod,\n    ExtraContextProperty\n} from '../../Core/JavaScript/View';\nimport { JSONObject } from '../../Utilities/JavaScript/Utils.Interfaces';\n\ninterface ComponentMap {\n    [viewId: string]: (() => void)[];\n}\n\ninterface ComponentContextDataMap {\n    [viewId: string]: ((context: ContextData) => void)[];\n}\n\ninterface ComponentContextPropertyMap {\n    [viewId: string]: ((extraContext: ExtraContextProperty) => void)[];\n}\n\ninterface ComponentEventHandlerMap {\n    [viewId: string]: ((extraContext: EventsHash) => void)[];\n}\n\ninterface ComponentJsonLdMap {\n    [viewId: string]: ((jsonLdResult: JSONObject) => JQuery.Deferred<JSONObject>)[];\n}\n\nexport interface Selector {\n    [key: string]: string;\n}\n\ninterface Placeholder {\n    selector: Selector;\n    views: View<object, object>[] | (typeof BackboneView)[];\n}\n\ninterface PlaceholderViews {\n    [placeholder: string]: Placeholder;\n}\n\ninterface ViewsToRender {\n    [templateName: string]: ChildViewGeneratorFunction;\n}\n\ninterface ChildViewGeneratorFunction {\n    [conteainerName: string]: {\n        [viewName: string]: (\n            view: View<object, object> | typeof BackboneView\n        ) => ChildViewGenerator<object, object>;\n    };\n}\n\nexport class SCBaseComponentChildViewsComponent {\n    private static rootComponentMap: ComponentMap = {};\n\n    private static rootContextDataMap: ComponentContextDataMap = {};\n\n    private static rootContextPropertyMap: ComponentContextPropertyMap = {};\n\n    private static rootEventHandlerMap: ComponentEventHandlerMap = {};\n\n    private static rootJsonLdMap: ComponentJsonLdMap = {};\n\n    public static viewsToRerender: ViewsToRender = {};\n\n    public static placeholderViews: PlaceholderViews = {};\n\n    public static resetPlaceholderViews() {\n        this.placeholderViews = {};\n    }\n\n    public static getPlaceholder(selector: Selector): Selector | null {\n        const selectorData = _.find(this.placeholderViews, function(placeholder) {\n            return _.isEqual(selector, placeholder.selector);\n        });\n\n        if (selectorData) {\n            return selectorData.selector;\n        } else {\n            return null;\n        }\n    }\n\n    public static registerViewForPlaceholder(\n        selectors: Selector[],\n        view: View<object, object> | typeof BackboneView\n    ) {\n        _.each(selectors, selector => {\n            const existentSelector = this.getPlaceholder(selector);\n\n            if (existentSelector) {\n                const keyExistent = this.selectorToString(existentSelector);\n\n                if (_.indexOf(this.placeholderViews[keyExistent].views, view) < 0) {\n                    this.placeholderViews[keyExistent].views.push(view);\n                }\n            } else {\n                const key = this.selectorToString(selector);\n\n                this.placeholderViews[key] = {\n                    selector: selector,\n                    views: [view]\n                };\n            }\n        });\n    }\n\n    public static unregisterViewForPlaceholders(view: View<object, object> | typeof BackboneView) {\n        _.each(this.placeholderViews, (placeholder, key, selectorViewsContext) => {\n            selectorViewsContext[key].views = _.without(placeholder.views, view);\n        });\n    }\n\n    public static getPlaceholderViews(placeholder: string): Placeholder | null {\n        return this.placeholderViews[placeholder] || null;\n    }\n\n    public static selectorToString(selector: Selector): string {\n        let str = '';\n\n        _.each(selector, (value, key) => {\n            str += '[' + key + '=\"' + value + '\"]';\n        });\n\n        return str;\n    }\n\n    public static resetViewsToRerender() {\n        this.viewsToRerender = {};\n    }\n\n    public static getViewsToRerender(\n        view: View<object, object> | typeof BackboneView\n    ): ChildViewGeneratorFunction {\n        const templateName = view.getTemplateName();\n\n        if (templateName) {\n            const generators = this.viewsToRerender[templateName];\n\n            return generators || {};\n        }\n\n        return {};\n    }\n\n    public static addViewsToRerender(\n        view: View<object, object> | typeof BackboneView,\n        childViews: ChildViewGeneratorFunction\n    ) {\n        const templateName = view.getTemplateName();\n\n        if (templateName) {\n            if (!this.viewsToRerender[templateName]) {\n                this.viewsToRerender[templateName] = {};\n            }\n\n            _.each(childViews, (childViewInstance, containerName) => {\n                if (!this.viewsToRerender[templateName][containerName]) {\n                    this.viewsToRerender[templateName][containerName] = {};\n                }\n\n                _.each(childViewInstance, (generatorFunction, viewName) => {\n                    if (!this.viewsToRerender[templateName][containerName][viewName]) {\n                        this.viewsToRerender[templateName][containerName][\n                            viewName\n                        ] = generatorFunction;\n                    }\n                });\n            });\n        }\n    }\n\n    private static normalizeChildViews(childViews: StaticChildViews): ChildViewInstances {\n        const normalizeChild: ChildViewInstances = {};\n\n        _.each(childViews, function(viewNames, containerName) {\n            normalizeChild[containerName] = {};\n\n            if (_.isFunction(viewNames)) {\n                const childViewConstructor = viewNames;\n\n                normalizeChild[containerName][containerName] = {\n                    childViewIndex: 10,\n                    childViewIsExternal: true,\n                    childViewConstructor: childViewConstructor\n                };\n            } else {\n                _.each(viewNames, function(generator, viewName) {\n                    normalizeChild[containerName][viewName] = generator;\n                    normalizeChild[containerName][viewName].childViewIsExternal = true;\n                });\n            }\n        });\n\n        return normalizeChild;\n    }\n\n    public static addChildViews(viewId: string, childViews: StaticChildViews) {\n        this.rootComponentMap[viewId] = this.rootComponentMap[viewId] || [];\n\n        const childViewInstances = this.normalizeChildViews(childViews || {});\n\n        this.rootComponentMap[viewId].push(\n            (function(childViewInstances) {\n                return function(this: View<object, object> | typeof BackboneView) {\n                    this.addChildViewInstances(childViewInstances, false);\n                };\n            })(childViewInstances)\n        );\n    }\n\n    public static removeChildView(viewId: string, containerName: string, viewName: string) {\n        this.rootComponentMap[viewId] = this.rootComponentMap[viewId] || [];\n\n        this.rootComponentMap[viewId].push(\n            (function(dataView, childViewId) {\n                return function(this: View<object, object> | typeof BackboneView) {\n                    this.removeChildViewInstance(dataView, childViewId, true);\n                };\n            })(containerName, viewName)\n        );\n    }\n\n    public static setChildViewIndex(\n        viewId: string,\n        containerName: string,\n        viewName: string,\n        index: number\n    ) {\n        this.rootComponentMap[viewId] = this.rootComponentMap[viewId] || [];\n\n        this.rootComponentMap[viewId].push(\n            (function(dataView, childViewId, childViewIndex) {\n                return function(this: View<object, object> | typeof BackboneView) {\n                    this.setChildViewIndex(dataView, childViewId, childViewIndex, false);\n                };\n            })(containerName, viewName, index)\n        );\n    }\n\n    public static addContextData(viewId: string, propertyName: string, func: ContextDataMethod) {\n        if (!this.rootContextDataMap[viewId]) {\n            this.rootContextDataMap[viewId] = [];\n        }\n\n        this.rootContextDataMap[viewId].push(\n            (function(propertyName, func) {\n                return function(\n                    this: View<object, object> | typeof BackboneView,\n                    context: ContextData\n                ) {\n                    context[propertyName] = func;\n                };\n            })(propertyName, func)\n        );\n    }\n\n    public static addToViewContextDefinition(\n        viewId: string,\n        propertyName: string,\n        type: string,\n        callback: (safeContext: any) => any\n    ) {\n        if (!this.rootContextPropertyMap[viewId]) {\n            this.rootContextPropertyMap[viewId] = [];\n        }\n\n        this.rootContextPropertyMap[viewId].push(\n            (function(propertyName, type, callback) {\n                return function(\n                    this: View<object, object> | typeof BackboneView,\n                    extraContext: ExtraContextProperty\n                ) {\n                    extraContext[propertyName] = {\n                        type: type,\n                        fn: callback\n                    };\n                };\n            })(propertyName, type, callback)\n        );\n    }\n\n    public static removeToViewContextDefinition(viewId: string, propertyName: string) {\n        if (!this.rootContextPropertyMap[viewId]) {\n            this.rootContextPropertyMap[viewId] = [];\n        }\n\n        this.rootContextPropertyMap[viewId].push(\n            (function(propertyName) {\n                return function(\n                    this: View<object, object> | typeof BackboneView,\n                    extraContext: ExtraContextProperty\n                ) {\n                    delete extraContext[propertyName];\n                };\n            })(propertyName)\n        );\n    }\n\n    public static addToViewEventsDefinition(\n        viewId: string,\n        eventSelector: string,\n        callback: (safeContext: any) => any\n    ) {\n        if (!this.rootEventHandlerMap[viewId]) {\n            this.rootEventHandlerMap[viewId] = [];\n        }\n\n        this.rootEventHandlerMap[viewId].push(\n            (function(eventSelector, callback) {\n                return function(\n                    this: View<object, object> | typeof BackboneView,\n                    extraEventHandler: EventsHash\n                ) {\n                    extraEventHandler[eventSelector] = _.bind(callback, null);\n                };\n            })(eventSelector, callback)\n        );\n    }\n\n    public static removeToViewEventsDefinition(viewId: string, eventSelector: string) {\n        if (!this.rootEventHandlerMap[viewId]) {\n            this.rootEventHandlerMap[viewId] = [];\n        }\n\n        this.rootEventHandlerMap[viewId].push(\n            (function(eventSelector) {\n                return function(\n                    this: View<object, object> | typeof BackboneView,\n                    extraEventHandler: EventsHash\n                ) {\n                    delete extraEventHandler[eventSelector];\n                };\n            })(eventSelector)\n        );\n    }\n\n    public static modifyViewJsonLd(\n        viewId: string,\n        callback: (jsonLdResult: JSONObject) => JQuery.Deferred<JSONObject>\n    ) {\n        if (!this.rootJsonLdMap[viewId]) {\n            this.rootJsonLdMap[viewId] = [];\n        }\n\n        this.rootJsonLdMap[viewId].push(\n            (function(callback) {\n                return function(\n                    this: View<object, object> | typeof BackboneView,\n                    jsonLdResult: JSONObject\n                ): JQuery.Deferred<JSONObject> {\n                    const nextPromise: JQuery.Deferred<JSONObject> = jQuery.Deferred();\n\n                    try {\n                        callback.call(this, jsonLdResult).then(\n                            (nextJson: JSONObject): void => {\n                                nextPromise.resolve(nextJson);\n                            }\n                        );\n                    } catch {\n                        nextPromise.resolve(jsonLdResult);\n                    }\n\n                    return nextPromise;\n                };\n            })(callback)\n        );\n    }\n\n    public static applyModifiedChildViews(view: View<object, object> | typeof BackboneView) {\n        const rootComponentId =\n            (view.attributes && view.attributes['data-root-component-id']) || '';\n\n        const components = ['Backbone.View', rootComponentId, ...view.constructor._AMDModuleName];\n\n        _.each(components, component => {\n            if (component) {\n                const actions = this.rootComponentMap[component] || [];\n                _.each(actions, function(action) {\n                    action.call(view);\n                });\n            }\n        });\n    }\n\n    public static getModifiedContextProperty(\n        view: View<object, object> | typeof BackboneView\n    ): ExtraContextProperty {\n        const properties: ExtraContextProperty = {};\n        const components = ['Backbone.View', ...view.constructor._AMDModuleName];\n\n        _.each(components, component => {\n            _.each(this.rootContextPropertyMap[component], fn => {\n                fn.call(view, properties);\n            });\n        });\n\n        return properties;\n    }\n\n    public static getModifiedEvents(view: View<object, object> | typeof BackboneView): EventsHash {\n        const events: EventsHash = {};\n        const components = ['Backbone.View', ...view.constructor._AMDModuleName];\n\n        _.each(components, component => {\n            _.each(this.rootEventHandlerMap[component], fn => {\n                fn.call(view, events);\n            });\n        });\n\n        const delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n        _.each(events, (_event, key) => {\n            const match = key.match(delegateEventSplitter);\n            if (match && match.length > 1 && !view.$el.find(match[2]).length) {\n                delete events[key];\n            }\n        });\n\n        return events;\n    }\n\n    public static getModifiedContext(\n        view: View<object, object> | typeof BackboneView\n    ): ContextData {\n        const contextData: ContextData = {};\n        const components = ['Backbone.View', ...view.constructor._AMDModuleName];\n\n        _.each(components, component => {\n            _.each(this.rootContextDataMap[component], fn => {\n                fn.call(view, contextData);\n            });\n        });\n\n        return contextData;\n    }\n\n    public static getModifiedJsonLd(\n        view: View<object, object> | typeof BackboneView,\n        jsonLdResult: JSONObject\n    ): Promise<JSONObject> {\n        const components = ['Backbone.View', ...view.constructor._AMDModuleName];\n\n        let currentGetJsonLd = view.getJsonLd;\n\n        _.each(components, component => {\n            _.each(this.rootJsonLdMap[component], fn => {\n                const newGetJsonLd = ((currentView, getJsonLd, callback) => {\n                    return function(previousJson: JSONObject): Promise<JSONObject> {\n                        const nextPromise = jQuery.Deferred();\n                        try {\n                            getJsonLd.call(currentView, previousJson).then(\n                                (currentJson: JSONObject): void => {\n                                    callback.call(currentView, currentJson).then(\n                                        (nextJson: JSONObject): void => {\n                                            nextPromise.resolve(nextJson);\n                                        }\n                                    );\n                                }\n                            );\n                        } catch {\n                            nextPromise.resolve(previousJson);\n                        }\n                        return nextPromise;\n                    };\n                })(view, currentGetJsonLd, fn);\n\n                currentGetJsonLd = newGetJsonLd;\n            });\n        });\n\n        return currentGetJsonLd.call(view, jsonLdResult);\n    }\n}\n"]}