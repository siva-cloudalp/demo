{"version":3,"sources":["Subscriptions.List.View.ts"],"names":[],"mappings":"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","file":"Subscriptions.List.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Subscriptions.List.View\"/>\n// @module Subscriptions\n\nimport * as _ from 'underscore';\nimport * as subscriptions_list_tpl from 'subscriptions_list.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport { Loggers } from '../../../Commons/Loggers/JavaScript/Loggers';\nimport { SubscriptionsCollection, SubscriptionBillingAccount } from './Subscriptions.Collection';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { ListHeaderView } from '../../../Commons/ListHeader/JavaScript/ListHeader.View';\nimport { SubscriptionsStatusView } from './Subscriptions.Status.View';\nimport { RecordViewsView } from '../../RecordViews/JavaScript/RecordViews.View';\nimport { GlobalViewsPaginationView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.Pagination.View';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport Handlebars = require('../../../Commons/Utilities/JavaScript/Handlebars');\n\ninterface BillingAccount {\n    name: string;\n    value: string | number;\n}\n\nconst SubscriptionsListView = BackboneView.extend({\n    template: subscriptions_list_tpl,\n\n    title: Utils.translate('My Subscriptions'),\n\n    page_header: Utils.translate('My Subscriptions'),\n\n    attributes: {\n        id: 'Subscriptions',\n        class: 'Subscriptions'\n    },\n\n    initialize: function(options) {\n        this.application = options.application;\n        this.collection = new SubscriptionsCollection();\n        this.collectionBillingAccounts = new SubscriptionsCollection();\n        this.profileModel = ProfileModel.getInstance();\n        this.isPhoneDevice = Utils.isPhoneDevice();\n\n        this.listenCollection();\n        this.collection.on('reset', this.showContent, this);\n\n        let page = 1;\n\n        if (options.routerArguments && options.routerArguments[0]) {\n            const params = Utils.parseUrlOptions(options.routerArguments[0]);\n\n            if (params.page) {\n                page = Number(params.page);\n            }\n        }\n        this.options.page = page;\n\n        this.listHeader = new ListHeaderView({\n            view: this,\n            application: this.application,\n            collection: this.collection,\n            hidePagination: true,\n            hideFilterExpandable: this.isPhoneDevice\n        });\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        const promise = jQuery.Deferred();\n        const loggersActionId = Loggers.getLogger().start('SUBSCRIPTIONS_LIST');\n\n        this.collectionBillingAccounts\n            .fetch({\n                data: { billingAccounts: true },\n                error: function(model, jqXhr) {\n                    // this will stop the ErrorManagment module to process this error\n                    // as we are taking care of it\n                    jqXhr.preventDefault = true;\n                }\n            })\n            .done(function(): void {\n                Loggers.getLogger().end(loggersActionId);\n            })\n            .always(function(): void {\n                promise.resolve();\n            });\n\n        return promise;\n    },\n\n    // @method listenCollection\n    listenCollection: function() {\n        this.setLoading(true);\n        this.collection.on({\n            request: jQuery.proxy(this, 'setLoading', true),\n            reset: jQuery.proxy(this, 'setLoading', false)\n        });\n        this.collection.on('reset', this.render, this);\n    },\n\n    // @method setLoading @param {Boolean} bool\n    setLoading: function(bool) {\n        this.isLoading = bool;\n    },\n\n    // @method getSelectedMenu @return {String}\n    getSelectedMenu: function() {\n        return 'subscriptions';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return {\n            text: this.title,\n            href: '/Subscriptions'\n        };\n    },\n    // @property {Array} filterOptions Array of default\n    // filter options filters always apply on the original collection\n    filterOptions: function(): BillingAccount[] {\n        const billing_accounts_filter: BillingAccount[] = [\n            {\n                value: 'all',\n                name: Utils.translate('Show All Billing Accounts')\n            }\n        ];\n\n        (this.collectionBillingAccounts.billingAccounts || []).forEach(\n            (billing_account: SubscriptionBillingAccount) => {\n                billing_accounts_filter.push({\n                    value: billing_account.internalId,\n                    name: billing_account.name\n                });\n            }\n        );\n\n        return billing_accounts_filter;\n    },\n\n    childViews: {\n        'ListHeader.View': function() {\n            this.listHeader.filters = this.filterOptions();\n            return this.listHeader;\n        },\n        'Records.Collection': function() {\n            const records_collection = new Backbone.Collection(\n                this.collection.map(subscription => {\n                    let appendToTitle = '';\n                    if(this.isPhoneDevice) {\n                        const statusInLowerCase = subscription.getStatusLabel('status').toLowerCase();\n                        appendToTitle = `<span class=\"subscriptions-status status-${statusInLowerCase}\">${statusInLowerCase}</span>`\n                    }\n                    const model = new Backbone.Model({\n                        touchpoint: 'customercenter',\n                        title: new Handlebars.SafeString(\n                            Utils.translate(\n                                '<span class=\"subscriptionid\">$(0)</span>',\n                                subscription.get('name')\n                            ) + appendToTitle\n                        ),\n                        detailsURL: subscription.getTypeUrl(),\n\n                        columns: [\n                            {\n                                label: Utils.translate('Activation:'),\n                                type: 'date',\n                                name: 'datecreated',\n                                value: subscription.get('startDate')\n                            },\n                            {\n                                label: Utils.translate('Last Bill:'),\n                                type: 'date',\n                                name: 'lastbill',\n                                value: !subscription.get('lastBillDate')\n                                    ? '-'\n                                    : subscription.get('lastBillDate')\n                            },\n                            {\n                                label: Utils.translate('Next Bill:'),\n                                type: 'date',\n                                name: 'nextbill',\n                                value:\n                                    subscription.get('status') === 'ACTIVE' &&\n                                    subscription.get('nextBillCycleDate')\n                                        ? subscription.get('nextBillCycleDate')\n                                        : '-'\n                            },\n                            {\n                                label: Utils.translate('Renewal:'),\n                                type: 'date',\n                                name: 'renewal',\n                                value:\n                                    subscription.get('status') === 'ACTIVE' &&\n                                    subscription.get('nextRenewalStartDate')\n                                        ? subscription.get('nextRenewalStartDate')\n                                        : '-'\n                            }\n                        ]\n                    });\n                    if(!this.isPhoneDevice) {\n\n                        const status = {\n                            type: 'status',\n                            name: 'status',\n                            compositeKey: 'SubscriptionsStatusView',\n                            composite: new SubscriptionsStatusView({\n                                status: subscription.getStatusLabel('status')\n                            })\n                        }\n    \n                        model.get('columns').push(status);\n                    }\n                    model.id = subscription.get('internalId');\n                    return model;\n                })\n            );\n\n            return new BackboneCollectionView({\n                childView: RecordViewsView,\n                collection: records_collection,\n                viewsPerRow: 1\n            });\n        },\n        'GlobalViews.Pagination': function() {\n            return new GlobalViewsPaginationView(\n                _.extend(\n                    {\n                        totalPages: Math.ceil(\n                            this.collection.totalRecordsFound / this.collection.recordsPerPage\n                        )\n                    },\n                    Configuration.defaultPaginationSettings\n                )\n            );\n        }\n    },\n\n    // @method getContext @return {Subscriptions.List.View.Context}\n    getContext: function() {\n        // @class Subscriptions.List.View.Context\n        return {\n            isPhoneDevice: this.isPhoneDevice,\n            // @property {String} pageHeader\n            pageHeader: this.page_header,\n            // @property {Boolean} showNoTermMessage\n            hasTerms: !!this.profileModel.get('paymentterms'),\n            // @property {Boolean} isThereAnyResult\n            isThereAnyResult: !!this.collection.length,\n            // @property {Boolean} isLoading\n            isLoading: this.isLoading,\n            // @property {Boolean} showPagination\n            showPagination: !!(\n                this.collection.totalRecordsFound &&\n                this.collection.recordsPerPage &&\n                this.collection.length > 0\n            ),\n            // @property {Boolean} showCurrentPage\n            showCurrentPage: this.options.showCurrentPage,\n            // @property {Boolean} showBackToAccount\n            showBackToAccount: Configuration.get('siteSettings.sitetype') === 'STANDARD'\n        };\n    }\n});\n\nexport = SubscriptionsListView;\n"]}