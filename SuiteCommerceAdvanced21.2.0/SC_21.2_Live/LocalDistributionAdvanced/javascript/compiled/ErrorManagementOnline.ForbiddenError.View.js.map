{"version":3,"sources":["ErrorManagementOnline.ForbiddenError.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAWF,IAAM,iCAAiC,GAAQ,mBAAmB,CAAC,MAAM,CAAC;QACtE,QAAQ,EAAE,oCAAoC;QAC9C,UAAU,EAAE;YACR,EAAE,EAAE,iBAAiB;YACrB,KAAK,EAAE,iBAAiB;SAC3B;QACD,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC;QACrC,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC;QAE3C,UAAU,EAAE;YACR,IAAM,EAAE,GAAG,yBAAW,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAI,EAAE,CAAC,WAAW,CAAC,aAAa,KAAK,QAAQ,EAAE;gBAC3C,QAAQ,CAAC,UAAU,GAAG,GAAG,CAAC;aAC7B;QACL,CAAC;QAED,4EAA4E;QAC5E,UAAU,EAAE;YACR,qDAAqD;YACrD,OAAO;gBACH,2BAA2B;gBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,gCAAgC;gBAChC,UAAU,EAAE,IAAI,CAAC,WAAW;aAC/B,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,iCAAiC,CAAC","file":"ErrorManagementOnline.ForbiddenError.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ErrorManagementOnline.ForbiddenError.View\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/GlobalDeclarations.d.ts\" />\n\nimport * as error_management_forbidden_error_tpl from 'error_management_forbidden_error.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Environment } from '../../../Commons/Core/JavaScript/Environment';\n\nimport ErrorManagementView = require('../../../Commons/ErrorManagement/JavaScript/ErrorManagement.View');\n\nconst ErrorManagementForbiddenErrorView: any = ErrorManagementView.extend({\n    template: error_management_forbidden_error_tpl,\n    attributes: {\n        id: 'forbidden-error',\n        class: 'forbidden-error'\n    },\n    title: Utils.translate('NOT ALLOWED'),\n    page_header: Utils.translate('NOT ALLOWED'),\n\n    initialize: function() {\n        const SC = Environment.getSC();\n        if (SC.ENVIRONMENT.jsEnvironment === 'server') {\n            nsglobal.statusCode = 403;\n        }\n    },\n\n    // @method getContext @returns {ErrorManagement.ForbiddenError.View.Context}\n    getContext: function() {\n        // @class ErrorManagement.ForbiddenError.View.Context\n        return {\n            // @property {String} title\n            title: this.title,\n            // @property {String} pageHeader\n            pageHeader: this.page_header\n        };\n    }\n});\n\nexport = ErrorManagementForbiddenErrorView;\n"]}