{"version":3,"sources":["Profile.UpdatePassword.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAgBF,4DAA4D;IAC5D,IAAM,yBAAyB,GAAQ,YAAY,CAAC,MAAM,CAAC;QACvD,QAAQ,EAAE,2BAA2B;QAErC,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,sBAAsB,CAAC;QAEpD,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,sBAAsB,CAAC;QAE9C,UAAU,EAAE;YACR,EAAE,EAAE,gBAAgB;YACpB,KAAK,EAAE,+BAA+B;SACzC;QAED,MAAM,EAAE;YACJ,aAAa,EAAE,UAAU;YACzB,wCAAwC,EAAE,aAAa;YACvD,uCAAuC,EAAE,aAAa;YACtD,6BAA6B,EAAE,WAAW;SAC7C;QAED,QAAQ,EAAE;YACN,2BAA2B,EAAE,kBAAkB;YAC/C,mBAAmB,EAAE,UAAU;YAC/B,2BAA2B,EAAE,kBAAkB;SAClD;QAED,UAAU,EAAE;YACR,IAAI,CAAC,KAAK,GAAG,IAAI,mBAAmB,CAAC,EAAE,CAAC,CAAC;YAEzC,uDAAuD;YACvD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,4BAAY,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,CAAC;YACtD,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;YAC7D,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAClD,CAAC;QAED,SAAS,EAAE,UAAS,KAAK;YACrB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACrC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAC7B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YAErC,KAAK,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;QACpC,CAAC;QAED,WAAW,EAAE;YACT,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAM,mBAAmB,GAAG,IAAI,iDAAsB,CAAC;oBACnD,OAAO,EAAE,KAAK,CAAC,SAAS,CAAC,gCAAgC,CAAC;oBAC1D,IAAI,EAAE,SAAS;oBACf,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,CAAC,CAAC,iCAAiC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;aAC3F;QACL,CAAC;QAED,0BAA0B;QAC1B,eAAe,EAAE;YACb,OAAO,oBAAoB,CAAC;QAChC,CAAC;QACD,6BAA6B;QAC7B,kBAAkB,EAAE;YAChB,OAAO;gBACH,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,IAAI,EAAE,qBAAqB;aAC9B,CAAC;QACN,CAAC;QAED,iEAAiE;QACjE,UAAU,EAAE;YACR,6CAA6C;YAC7C,OAAO;gBACH,gCAAgC;gBAChC,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,wCAAwC;gBACxC,iBAAiB,EAAE,6BAAa,CAAC,GAAG,CAAC,uBAAuB,CAAC,KAAK,UAAU;aAC/E,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,yBAAyB,CAAC","file":"Profile.UpdatePassword.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Profile.UpdatePassword.View\"/>\n\nimport * as _ from 'underscore';\nimport * as profile_update_password_tpl from 'profile_update_password.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { ProfileModel } from './Profile.Model';\n\nimport { GlobalViewsMessageView } from '../../GlobalViews/JavaScript/GlobalViews.Message.View';\n\nimport BackboneFormView = require('../../Backbone.FormView/JavaScript/Backbone.FormView');\nimport UpdatePasswordModel = require('./Profile.UpdatePassword.Model');\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\n// @class Profile.UpdatePassword.View @extends Backbone.View\nconst ProfileUpdatePasswordView: any = BackboneView.extend({\n    template: profile_update_password_tpl,\n\n    page_header: Utils.translate('Update Your Password'),\n\n    title: Utils.translate('Update Your Password'),\n\n    attributes: {\n        id: 'PasswordUpdate',\n        class: 'ProfileUpdateYourPasswordView'\n    },\n\n    events: {\n        'submit form': 'saveForm',\n        'change form:has([data-action=\"reset\"])': 'toggleReset',\n        'keyup form:has([data-action=\"reset\"])': 'toggleReset',\n        'click [data-action=\"reset\"]': 'resetForm'\n    },\n\n    bindings: {\n        '[name=\"current_password\"]': 'current_password',\n        '[name=\"password\"]': 'password',\n        '[name=\"confirm_password\"]': 'confirm_password'\n    },\n\n    initialize: function() {\n        this.model = new UpdatePasswordModel({});\n\n        // merge the profile model into the UpdatePasswordModel\n        this.model.set(ProfileModel.getInstance().attributes);\n        this.model.on('saveCompleted', _.bind(this.resetForm, this));\n        BackboneFormView.add(this);\n        this.useLayoutError = true;\n        this.model.on('save', this.showSuccess, this);\n    },\n\n    resetForm: function(event) {\n        this.model.unset('current_password');\n        this.model.unset('password');\n        this.model.unset('confirm_password');\n\n        event && event.preventDefault();\n    },\n\n    showSuccess: function() {\n        if (this.$savingForm) {\n            const global_view_message = new GlobalViewsMessageView({\n                message: Utils.translate('Password successfully updated!'),\n                type: 'success',\n                closable: true\n            });\n\n            this.$('[data-type=\"alert-placeholder\"]').html(global_view_message.render().$el.html());\n        }\n    },\n\n    // @method getSelectedMenu\n    getSelectedMenu: function() {\n        return 'updateyourpassword';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return {\n            text: this.title,\n            href: '/updateyourpassword'\n        };\n    },\n\n    // @method getContext @return Profile.UpdatePassword.View.Context\n    getContext: function() {\n        // @class Profile.UpdatePassword.View.Context\n        return {\n            // @property {String} pageHeader\n            pageHeader: this.page_header,\n            // @property {Boolean} showBackToAccount\n            showBackToAccount: Configuration.get('siteSettings.sitetype') === 'STANDARD'\n        };\n    }\n});\n\nexport = ProfileUpdatePasswordView;\n"]}