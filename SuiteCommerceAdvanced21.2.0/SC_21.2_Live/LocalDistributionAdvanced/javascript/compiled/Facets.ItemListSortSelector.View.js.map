{"version":3,"sources":["Facets.ItemListSortSelector.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAYF,OAAS,YAAY,CAAC,MAAM,CAAC;QACzB,gCAAgC;QAChC,QAAQ,EAAE,kCAAkC;QAE5C,yEAAyE;QACzE,UAAU,EAAE;YACR,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;YAChC,IAAA,UAAU,GAAK,IAAI,CAAC,OAAO,WAAjB,CAAkB;YACpC,IAAM,sBAAsB,GAAG,EAAE,CAAC;YAElC,mEAAmE;YACnE,IAAI,4BAAY,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,EAAE;gBACzC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,YAAY,EAAE,UAAS,IAAS;oBACpD,OAAO,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;aACN;YAED,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,UAAS,WAAgB;gBAC1C,IAAM,qBAAqB,GAAG;oBAC1B,eAAe,EAAE,UAAU;yBACtB,eAAe,CAAC,EAAE,KAAK,EAAE,WAAW,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;yBACnD,MAAM,EAAE;oBACb,UAAU,EAAE,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;oBACnF,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,KAAK,CAAC;oBAC1D,SAAS,EAAE,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;iBAC9C,CAAC;gBAEF,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;YAEH,kDAAkD;YAClD,OAAO;gBACH,oCAAoC;gBACpC,OAAO,EAAE,sBAAsB;aAClC,CAAC;QACN,CAAC;KACJ,CAAC,CAAC","file":"Facets.ItemListSortSelector.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Facets.ItemListSortSelector.View\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport * as facets_item_list_sort_selector_tpl from 'facets_item_list_sort_selector.tpl';\nimport { ProfileModel } from '../../Profile/JavaScript/Profile.Model';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @module Facets\nexport = BackboneView.extend({\n    // @property {function} template\n    template: facets_item_list_sort_selector_tpl,\n\n    // @method getContext @returns {Facets.ItemListSortSelector.View.Context}\n    getContext: function() {\n        let option_items = this.options.options;\n        const { translator } = this.options;\n        const processed_option_items = [];\n\n        // if price display is disabled, left aside the filters about price\n        if (ProfileModel.getInstance().hidePrices()) {\n            option_items = _.filter(option_items, function(item: any) {\n                return item.id.search('price') === -1;\n            });\n        }\n\n        _.each(option_items, function(option_item: any) {\n            const processed_option_item = {\n                configOptionUrl: translator\n                    .cloneForOptions({ order: option_item.id, page: 1 })\n                    .getUrl(),\n                isSelected: translator.getOptionValue('order') === option_item.id ? 'selected' : '',\n                name: Utils.translate(option_item.name, option_item.items),\n                className: option_item.id.replace(':', '-')\n            };\n\n            processed_option_items.push(processed_option_item);\n        });\n\n        // @class Facets.ItemListSortSelector.View.Context\n        return {\n            // @property {Array<Object>} options\n            options: processed_option_items\n        };\n    }\n});\n"]}