{"version":3,"sources":["PaymentMethod.CreditCard.List.View.ts"],"names":[],"mappings":"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","file":"PaymentMethod.CreditCard.List.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PaymentMethod.CreditCard.List.View\"/>\n\nimport * as paymentmethod_creditcard_list_tpl from 'paymentmethod_creditcard_list.tpl';\nimport * as creditcard_list_tpl from 'creditcard_list.tpl';\nimport * as paymentinstrument_creditcard_edit_tpl from 'paymentinstrument_creditcard_edit.tpl';\nimport * as backbone_collection_view_cell_tpl from 'backbone_collection_view_cell.tpl';\nimport * as backbone_collection_view_row_tpl from 'backbone_collection_view_row.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\nimport { Environment } from '../../../Commons/Core/JavaScript/Environment';\nimport { isModuleLoaded } from '../../../Commons/Core/JavaScript/ExportedModulesNames';\nimport { PaymentMethodCollection } from './PaymentMethod.Collection';\n\nimport CreditCardView = require('../../../Commons/CreditCard/JavaScript/CreditCard.View');\nimport PaymentInstrumentCreditCardView = require('../../../Commons/PaymentInstrument/JavaScript/PaymentInstrument.CreditCard.View');\nimport GlobalViewsConfirmationView = require('../../../Commons/GlobalViews/JavaScript/GlobalViews.Confirmation.View');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\n\n// @class PaymentMethod.CreditCard.List.View @extends Backbone.View\nconst PaymentMethodCreditcardListView: any = BackboneView.extend({\n    title: Utils.translate('Credit Cards'),\n    page_header: Utils.translate('Credit Cards'),\n\n    attributes: {\n        id: 'PaymentMethodCreditCardsList',\n        class: 'PaymentMethodCreditCardListView'\n    },\n\n    events: {\n        'click [data-action=\"remove\"]': 'removeCreditCard'\n    },\n\n    initialize: function() {\n        this.template = paymentmethod_creditcard_list_tpl || creditcard_list_tpl;\n\n        this.profileModel = ProfileModel.getInstance();\n        this.collection = this.profileModel.get('paymentmethods');\n\n        this.collection.on(\n            'reset sync add remove change',\n            function() {\n                if (this.collection.length) {\n                    this.collection.sort();\n                    this.render();\n                } else {\n                    Backbone.history.navigate('#creditcards/new', { trigger: true });\n                }\n            },\n            this\n        );\n\n        this.isPaymentInstrumentEnabled = Environment.getSC().ENVIRONMENT.paymentInstrumentEnabled;\n\n        this.isBackwardCompatible = isModuleLoaded('PaymentWizard.Module.PaymentMethod.ACH');\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        const promise = jQuery.Deferred();\n\n        if (this.profileModel.get('isLoggedIn') !== 'T') {\n            promise.reject();\n            this.options.application.getLayout().notFound();\n        } else if (!this.collection.length) {\n            promise.reject();\n            Backbone.history.navigate('#creditcards/new', { trigger: true });\n        } else {\n            promise.resolve();\n        }\n\n        return promise;\n    },\n\n    // @method getPaymentMethodsToShow returns a copy of the payment methods\n    // collection including the new card button available to show\n    getPaymentMethodsToShow: function() {\n        let payment_methods_to_show;\n\n        if (this.collection && !!this.collection.length) {\n            this.collection.remove('-temporal-');\n            payment_methods_to_show = paymentinstrument_creditcard_edit_tpl\n                ? this.collection.getCollectionForRendering()\n                : this.collection;\n        }\n\n        return payment_methods_to_show ? payment_methods_to_show.models : [];\n    },\n\n    childViews: {\n        'CreditCards.Collection': function() {\n            const view = SC.ENVIRONMENT.paymentInstrumentEnabled\n                ? PaymentInstrumentCreditCardView\n                : CreditCardView;\n            let view_collection;\n\n            const { currentTouchpoint } = this.options.application.getConfig();\n\n            if (!paymentinstrument_creditcard_edit_tpl) {\n                view_collection = new BackboneCollectionView({\n                    collection: this.getPaymentMethodsToShow(),\n                    childView: view,\n                    childViewOptions: {\n                        showActions: true,\n                        hideSelector: true,\n                        showDefaults: currentTouchpoint === 'customercenter'\n                    },\n                    viewsPerRow: Configuration.get('itemsPerRow', 2)\n                });\n            } else {\n                let ccCollection = this.collection;\n\n                if (this.isPaymentInstrumentEnabled && this.isBackwardCompatible) {\n                    const recordTypes = ['PaymentCard', 'PaymentCardToken'];\n                    ccCollection = new PaymentMethodCollection(\n                        ccCollection.filter(\n                            model => recordTypes.indexOf(model.get('recordType')) !== -1\n                        )\n                    );\n                }\n\n                if (ccCollection && !!ccCollection.length) {\n                    ccCollection.remove('-temporal-');\n                    ccCollection = paymentinstrument_creditcard_edit_tpl\n                        ? ccCollection.getCollectionForRendering().models\n                        : ccCollection;\n                } else {\n                    Backbone.history.navigate('#creditcards/new', { trigger: true });\n                }\n\n                view_collection = new BackboneCollectionView({\n                    collection: ccCollection,\n                    childView: view,\n                    childViewOptions: {\n                        showActions: true,\n                        hideSelector: true,\n                        showDefaults: currentTouchpoint === 'customercenter'\n                    },\n                    viewsPerRow:\n                        Configuration.get('itemsPerRow') ||\n                        (Utils.isDesktopDevice() ? 3 : Utils.isTabletDevice() ? 2 : 1),\n                    cellTemplate: backbone_collection_view_cell_tpl,\n                    rowTemplate: backbone_collection_view_row_tpl\n                });\n            }\n\n            return view_collection;\n        }\n    },\n\n    // @method getSelectedMenu\n    getSelectedMenu: function() {\n        return 'paymentmethods';\n    },\n\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return {\n            text: Utils.translate('Payment Methods'),\n            href: '/creditcards'\n        };\n    },\n\n    // @method removeCreditCard dispatch the remove event\n    removeCreditCard: function(e) {\n        e.preventDefault();\n\n        const deleteConfirmationView = new GlobalViewsConfirmationView({\n            callBack: this._removeCreditCardFromCollection,\n            callBackParameters: {\n                context: this,\n                creditcardId: jQuery(e.target).data('id')\n            },\n            title: Utils.translate('Remove Credit Card'),\n            body: Utils.translate('Are you sure you want to remove this Credit Card?'),\n            autohide: true\n        });\n\n        return this.options.application.getLayout().showInModal(deleteConfirmationView);\n    },\n\n    _removeCreditCardFromCollection: function(options) {\n        options.context.collection.get(options.creditcardId).destroy({ wait: true });\n    },\n\n    // @method getContext @return {CreditCard.List.View.Context}\n    getContext: function() {\n        // @class CreditCard.List.View.Context\n        return {\n            // @property {String} pageHeader\n            pageHeader: this.page_header,\n            // @property {Boolean} showBackToAccount\n            showBackToAccount: Configuration.get('siteSettings.sitetype') === 'STANDARD'\n        };\n    }\n});\n\nexport = PaymentMethodCreditcardListView;\n"]}