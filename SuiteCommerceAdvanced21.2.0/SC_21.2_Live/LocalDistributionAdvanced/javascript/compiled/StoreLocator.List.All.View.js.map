{"version":3,"sources":["StoreLocator.List.All.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAkBF,IAAM,uBAAuB,GAAQ,YAAY,CAAC,MAAM,CAAC;QACrD,QAAQ,EAAE,0BAA0B;QAEpC,gCAAgC;QAChC,UAAU,EAAE;YACR,EAAE,EAAE,qBAAqB;YACzB,KAAK,EAAE,qBAAqB;SAC/B;QAED,qBAAqB;QACrB,0BAA0B;QAC1B,UAAU,EAAE,SAAS,UAAU,CAAC,OAAO;YACnC,IAAI,CAAC,aAAa,GAAG,sBAAsB,CAAC;YAC5C,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,UAAU,GAAG,IAAI,sBAAsB,EAAE,CAAC;YAE/C,2BAA2B;YAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACxC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACnD,CAAC;QAED,iBAAiB,EAAE,SAAS,iBAAiB;YACzC,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe;gBAChC,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC;gBAC7C,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;YAElB,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC;YAEjC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;gBAC1B,IAAI,EAAE,iBAAiB;gBACvB,0BAA0B;gBAC1B,IAAI,EAAE,OAAO,CAAC,IAAI;gBAElB,gBAAgB,EAAE,sBAAsB,CAAC,2BAA2B,EAAE;gBACtE,8BAA8B;gBAC9B,QAAQ,EAAE,uCAAkB,CAAC,WAAW,EAAE;gBAC1C,4BAA4B;gBAC5B,KAAK,EAAE,IAAI;gBAEX,YAAY,EAAE,6BAAa,CAAC,GAAG,CAAC,mCAAmC,CAAC;aACvE,CAAC,CAAC;QACP,CAAC;QAED,gCAAgC;QAChC,UAAU,EAAE;YACR,4BAA4B,EAAE;gBAC1B,OAAO,IAAI,sBAAsB,CAAC;oBAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,SAAS,EAAE,wBAAwB;iBACtC,CAAC,CAAC;YACP,CAAC;YACD,wBAAwB,EAAE;gBACtB,OAAO,IAAI,uDAAyB,CAChC,CAAC,CAAC,MAAM,CAAC;oBACL,UAAU,EACN,IAAI,CAAC,IAAI,CACL,IAAI,CAAC,UAAU,CAAC,iBAAiB;wBAC7B,IAAI,CAAC,aAAa,CAAC,2BAA2B,EAAE,CACvD,IAAI,CAAC;iBACb,CAAC,CACL,CAAC;YACN,CAAC;SACJ;QAED,qBAAqB;QACrB,6CAA6C;QAC7C,UAAU,EAAE,SAAS,UAAU;YAC3B,OAAO;gBACH,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM;aACrC,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,uBAAuB,CAAC","file":"StoreLocator.List.All.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"StoreLocator.List.All.View\"/>\n// @module StoreLocator.List.All.View\n\nimport * as _ from 'underscore';\nimport * as store_locator_list_all_tpl from 'store_locator_list_all.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { GlobalViewsPaginationView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.Pagination.View';\nimport { AjaxRequestsKiller } from '../../../Commons/AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\n\nimport StoreLocatorListAllStore = require('./StoreLocator.List.All.Store.View');\nimport StoreLocatorCollection = require('./StoreLocator.Collection');\nimport ReferenceConfiguration = require('../../StoreLocatorReferenceMapImplementation/JavaScript/ReferenceMap.Configuration');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\n\nconst StoreLocatorListAllView: any = BackboneView.extend({\n    template: store_locator_list_all_tpl,\n\n    // @property {Object} attributes\n    attributes: {\n        id: 'StoreLocatorListAll',\n        class: 'StoreLocatorListAll'\n    },\n\n    // @method initialize\n    // @param {Object} options\n    initialize: function initialize(options) {\n        this.configuration = ReferenceConfiguration;\n        this.routerArguments = options.routerArguments[0];\n        this.collection = new StoreLocatorCollection();\n\n        // @property {String} title\n        this.title = this.configuration.title();\n        this.collection.on('reset', this.render, this);\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        const options = this.routerArguments\n            ? Utils.parseUrlOptions(this.routerArguments)\n            : { page: 1 };\n\n        options.page = options.page || 1;\n\n        return this.collection.update({\n            sort: 'namenohierarchy',\n            // @property {String} page\n            page: options.page,\n\n            results_per_page: ReferenceConfiguration.showAllStoresRecordsPerPage(),\n            // @property {Number} killerId\n            killerId: AjaxRequestsKiller.getKillerId(),\n            // @property {Boolean} reset\n            reset: true,\n\n            locationtype: Configuration.get('storeLocator.defaultTypeLocations')\n        });\n    },\n\n    // @property {Object} childViews\n    childViews: {\n        StoreLocatorListAllStoreView: function() {\n            return new BackboneCollectionView({\n                collection: this.collection,\n                childView: StoreLocatorListAllStore\n            });\n        },\n        'GlobalViews.Pagination': function() {\n            return new GlobalViewsPaginationView(\n                _.extend({\n                    totalPages:\n                        Math.ceil(\n                            this.collection.totalRecordsFound /\n                                this.configuration.showAllStoresRecordsPerPage()\n                        ) || 0\n                })\n            );\n        }\n    },\n\n    // @method getContext\n    // @return StoreLocator.List.All.View.Context\n    getContext: function getContext() {\n        return {\n            showList: !!this.collection.length\n        };\n    }\n});\n\nexport = StoreLocatorListAllView;\n"]}