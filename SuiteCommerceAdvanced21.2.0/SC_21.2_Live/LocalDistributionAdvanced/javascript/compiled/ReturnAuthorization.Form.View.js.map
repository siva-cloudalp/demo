{"version":3,"sources":["ReturnAuthorization.Form.View.ts"],"names":[],"mappings":"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","file":"ReturnAuthorization.Form.View.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ReturnAuthorization.Form.View\"/>\n// @module ReturnAuthorization.Form.View\n\nimport * as _ from 'underscore';\nimport * as return_authorization_form_tpl from 'return_authorization_form.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { ListHeaderView } from '../../../Commons/ListHeader/JavaScript/ListHeader.View';\nimport { AjaxRequestsKiller } from '../../../Commons/AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\n\nimport TransactionLineCollection = require('../../../Commons/Transaction/JavaScript/Transaction.Line.Collection');\nimport ReturnLinesCalculator = require('./ReturnAuthorization.GetReturnableLines');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport TransactionLineViewsCellSelectableActionableNavigableView = require('../../../Commons/Transaction.Line.Views/JavaScript/Transaction.Line.Views.Cell.SelectableActionableNavigable.View');\nimport ReturnAuthorizationFormItemSummaryView = require('./ReturnAuthorization.Form.Item.Summary.View');\nimport ReturnAuthorizationFormItemActionsView = require('./ReturnAuthorization.Form.Item.Actions.View');\nimport { TransactionLineViewsCellNavigableView } from '../../../Commons/Transaction.Line.Views/JavaScript/Transaction.Line.Views.Cell.Navigable.View';\nimport ReturnAuthorizationModel = require('./ReturnAuthorization.Model');\nimport OrderHistoryModel = require('../../OrderHistory/JavaScript/OrderHistory.Model');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class ReturnAuthorization.Form.View @extend Backbone.View\nexport type ReturnAuthorizationFormView = any;\nexport const ReturnAuthorizationFormView: any = BackboneView.extend({\n    template: return_authorization_form_tpl,\n\n    title: Utils.translate('Return Products'),\n\n    page_header: Utils.translate('Return Products'),\n\n    events: {\n        'click [data-action=\"return-line\"]': 'toggleSelectUnselectLine',\n        'click [data-action=\"apply-reason\"]': 'applyReasonHandler',\n        'change [data-action=\"reasons\"]': 'changeReasonHandler',\n        'change [data-action=\"quantity\"]': 'changeQuantityHandler',\n        'blur [data-action=\"reason-text\"]': 'textReasonHandler',\n        'change [data-action=\"comments\"]': 'changeCommentHandler',\n        'submit form': 'saveForm'\n    },\n\n    attributes: {\n        class: 'ReturnAuthorizationForm'\n    },\n\n    initialize(options): void {\n        const self = this;\n\n        this.application = options.application;\n        this.model = new ReturnAuthorizationModel({ recordtype: 'returnauthorization' });\n\n        this.createdFromModel = new OrderHistoryModel({\n            internalid: options.routerArguments[1],\n            recordtype: options.routerArguments[0]\n        });\n\n        this.reasons = Configuration.get('returnAuthorization.reasons', []);\n\n        this.createdFromModel.once('sync', jQuery.proxy(this, 'initListHeader'));\n        this.model.on('save', function() {\n            Backbone.history.navigate(\n                `/returns/confirmation/${self.model.get('recordtype')}/${self.model.get(\n                    'internalid'\n                )}`,\n                { trigger: true }\n            );\n        });\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        return this.createdFromModel.fetch({\n            killerId: AjaxRequestsKiller.getKillerId(),\n            data: { recordtype: this.options.routerArguments[0] }\n        });\n    },\n\n    getLinkedRecordUrl() {\n        return `/purchases/view/${this.createdFromModel.get(\n            'recordtype'\n        )}/${this.createdFromModel.get('internalid')}`;\n    },\n\n    initListHeader() {\n        const lines = this.getLines();\n\n        this.listHeader = new ListHeaderView({\n            view: this,\n            application: this.application,\n            hideFilterExpandable: true,\n            collection: lines,\n            selectable: true\n        });\n\n        if (lines.length === 1) {\n            this.selectAll();\n        }\n\n        return this;\n    },\n\n    // @method getSelectedMenu\n    getSelectedMenu() {\n        return 'returns';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages() {\n        return [\n            {\n                text: Utils.translate('Returns'),\n                href: '/returns'\n            },\n            {\n                text: Utils.translate('Return products'),\n                href: '/returns'\n            }\n        ];\n    },\n\n    getLineId(target) {\n        return this.$(target)\n            .closest('[data-action=\"return-line\"]')\n            .data('id');\n    },\n\n    // @method unselectAll This method is called by the ListHeader when the 'select all' option is clicked\n    selectAll() {\n        return this.setLines({\n            checked: true\n        }).render();\n    },\n\n    // @method unselectAll This method is called by the ListHeader when the 'unselect all' option is clicked\n    unselectAll() {\n        return this.setLines({\n            reason: null,\n            checked: false,\n            returnQty: null,\n            textReason: null\n        }).render();\n    },\n\n    setLines(attributes) {\n        this.getLines().each(function(line) {\n            line.set(attributes);\n        });\n\n        return this;\n    },\n\n    setActiveLines(attributes) {\n        _.each(this.getActiveLines(), function(line: any) {\n            line.set(attributes);\n        });\n\n        return this;\n    },\n\n    // @method toggleSelectUnselectLine This method is executed each time a line is selected/unselected\n    toggleSelectUnselectLine(e) {\n        const $target = this.$(e.target);\n\n        if ($target.data('toggle') !== false) {\n            this.toggleLine(this.getLineId($target));\n        }\n    },\n\n    toggleLine(id) {\n        const line = this.getLine(id);\n\n        line.set('checked', !line.get('checked'));\n\n        if (!line.get('checked')) {\n            line.set({\n                reason: null,\n                returnQty: null,\n                textReason: null\n            });\n        }\n\n        return this.render();\n    },\n\n    // Set in the model which lines are returnable (these are left in the lines property with its quantities updated) and which are already returned\n    // (these are saved in invalidLines collection in the current model)\n    parseLines() {\n        const not_consider_fulfillments = this.createdFromModel.get('recordtype') !== 'salesorder';\n        const returnable_calculator = new ReturnLinesCalculator(this.createdFromModel, {\n            notConsiderFulfillments: not_consider_fulfillments\n        });\n        const lines_group = returnable_calculator.calculateLines();\n        const lines = this.createdFromModel.get('lines');\n\n        this.createdFromModel.set(\n            'invalidLines',\n            new TransactionLineCollection(lines_group.invalidLines)\n        );\n        lines.remove(lines_group.invalidLines);\n        lines.each(function(line) {\n            line.set('quantity', lines_group.validLineIdsQuantities[line.id]);\n        });\n\n        return this;\n    },\n\n    getLines() {\n        return this.lines || (this.lines = this.parseLines().createdFromModel.get('lines'));\n    },\n\n    getLine(id) {\n        return this.getLines().get(id);\n    },\n\n    getActiveLines() {\n        return this.getLines().filter(function(line) {\n            return line.get('checked');\n        });\n    },\n\n    getTotalItemsToReturn() {\n        return _.reduce(\n            this.getActiveLines(),\n            function(memo, line: any) {\n                return memo + parseFloat(line.get('returnQty') || line.get('quantity'));\n            },\n            0\n        );\n    },\n\n    changeQuantityHandler(e) {\n        const { target } = e;\n        const line_id = this.getLineId(target);\n\n        return this.setLine(\n            line_id,\n            'returnQty',\n            Math.min(target.value, this.getLine(line_id).get('quantity'))\n        ).render();\n    },\n\n    changeReasonHandler(e) {\n        const { target } = e;\n        const line_id = this.getLineId(target);\n        const selected_reason = _.findWhere(this.reasons, { id: +target.value });\n\n        this.setLine(line_id, 'reason', selected_reason).render();\n\n        this.$(\n            `[data-action=\"return-line\"][data-id=\"${line_id}\"] input[name=\"reason-text\"]`\n        ).focus();\n    },\n\n    textReasonHandler(e) {\n        const { target } = e;\n\n        return this.setLine(this.getLineId(target), 'textReason', target.value);\n    },\n\n    changeCommentHandler(e) {\n        this.comments = e.target.value;\n\n        return this;\n    },\n\n    setLine(id, attribute, value) {\n        this.getLine(id).set(attribute, value);\n\n        return this;\n    },\n\n    applyReasonHandler(e) {\n        const current_line = this.getLine(this.getLineId(e.target));\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        return this.setActiveLines({\n            reason: current_line.get('reason'),\n            textReason: current_line.get('textReason')\n        }).render();\n    },\n\n    saveForm(e) {\n        const created_from = this.createdFromModel;\n        const data = {\n            id: created_from.get('internalid'),\n            type: created_from.get('recordtype'),\n            lines: this.getActiveLinesData(),\n            comments: this.comments || ''\n        };\n\n        e.preventDefault();\n\n        if (this.isValid(data)) {\n            return BackboneView.prototype.saveForm.call(this, e, this.model, data);\n        }\n    },\n\n    isValid(data) {\n        const self = this;\n        const { lines } = data;\n        const errors = [];\n        const { comments } = data;\n        const no_reason_lines = _.filter(lines, function(line: any) {\n            return !line.reason;\n        });\n        const big_reason_lines = _.filter(lines, function(line: any) {\n            return line.reason && line.reason.length > 4000;\n        });\n\n        if (!lines.length) {\n            errors.push(\n                Utils.translate('You must select at least one item for this return request.')\n            );\n        }\n\n        if (no_reason_lines.length) {\n            _.each(no_reason_lines, function(line) {\n                self.$(`[data-id=\"${line.id}\"] .control-group`).addClass('error');\n            });\n\n            errors.push(Utils.translate('You must select a reason for return.'));\n        }\n\n        if (big_reason_lines.length) {\n            _.each(big_reason_lines, function(line) {\n                self.$(`[data-id=\"${line.id}\"] .control-group`).addClass('error');\n            });\n\n            errors.push(\n                Utils.translate(\n                    'The reason contains more that the maximum number (4000) of characters allowed.'\n                )\n            );\n        }\n\n        if (comments && comments.length > 999) {\n            errors.push(\n                Utils.translate(\n                    'The comment contains more than the maximum number (999) of characters allowed.'\n                )\n            );\n        }\n\n        if (errors.length) {\n            return this.showError(errors.join('<br/>'));\n        }\n\n        return true;\n    },\n\n    getActiveLinesData() {\n        let reason = null;\n        let selected_reason;\n\n        return _.map(this.getActiveLines(), function(line: any) {\n            reason = line.get('reason');\n            selected_reason = null;\n\n            if (reason) {\n                selected_reason = reason.isOther ? line.get('textReason') : reason.text;\n            }\n\n            return {\n                id: line.get('internalid'),\n                quantity: line.get('returnQty') || line.get('quantity'),\n                reason: selected_reason\n            };\n        });\n    },\n\n    childViews: {\n        ListHeader() {\n            return this.listHeader;\n        },\n        'Returnable.Lines.Collection': function() {\n            return new BackboneCollectionView({\n                collection: this.getLines(),\n                childView: TransactionLineViewsCellSelectableActionableNavigableView,\n                viewsPerRow: 1,\n                childViewOptions: {\n                    SummaryView: ReturnAuthorizationFormItemSummaryView,\n                    ActionsView: ReturnAuthorizationFormItemActionsView,\n                    actionsOptions: {\n                        activeLinesLength: this.getActiveLines().length || 0,\n                        reasons: this.reasons\n                    },\n                    application: this.application,\n                    navigable: !this.application.isStandalone(),\n                    actionType: 'return-line'\n                }\n            });\n        },\n        'Invalid.Lines.Collection': function() {\n            return new BackboneCollectionView({\n                collection: this.createdFromModel.get('invalidLines'),\n                childView: TransactionLineViewsCellNavigableView,\n                viewsPerRow: 1,\n                childViewOptions: {\n                    navigable: !this.application.isStandalone(),\n\n                    detail1Title: Utils.translate('Qty:'),\n                    detail1: 'quantity',\n\n                    detail2Title: Utils.translate('Unit price'),\n                    detail2: 'rate_formatted',\n\n                    detail3Title: Utils.translate('Amount:'),\n                    detail3: 'total_formatted',\n\n                    ignorePriceVisibility: true\n                }\n            });\n        }\n    },\n\n    // @method getContext @return ReturnAuthorization.Form.View.Context\n    getContext() {\n        const active_lines = this.getActiveLines();\n        const items_to_return_length = this.getTotalItemsToReturn();\n        const invalid_lines = this.createdFromModel.get('invalidLines');\n\n        // @class ReturnAuthorization.Form.View.Context\n        return {\n            // @property {OrderHistory.Model} model\n            model: this.createdFromModel,\n            // @property {String} pageHeader\n            pageHeader: this.page_header,\n            // @property {String} createdFromURL\n            createdFromURL: this.getLinkedRecordUrl(),\n            // @property {Boolean} activeLinesLengthGreaterThan1\n            activeLinesLengthGreaterThan1: active_lines.length > 1,\n            // @property {Number} activeLinesLength\n            activeLinesLength: active_lines.length,\n            // @property {Boolean} hasAtLeastOneActiveLine\n            hasAtLeastOneActiveLine: !!active_lines.length,\n            // @property {Booelan} itemsToReturnLengthGreaterThan1\n            itemsToReturnLengthGreaterThan1: items_to_return_length > 1,\n            // @property {Number} itemsToReturnLength\n            itemsToReturnLength: items_to_return_length,\n            // @property {Booelan} showInvalidLines\n            showInvalidLines: !!invalid_lines.length,\n            // @property {Number} invalidLinesLength\n            invalidLinesLength: invalid_lines.length,\n            // @property {String} comments\n            comments: this.comments || '',\n            // @property {Boolean} showBackToAccount\n            showBackToAccount: Configuration.get('siteSettings.sitetype') === 'STANDARD'\n        };\n    }\n});\n"]}