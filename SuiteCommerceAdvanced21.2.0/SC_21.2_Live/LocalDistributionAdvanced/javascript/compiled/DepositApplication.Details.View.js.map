{"version":3,"sources":["DepositApplication.Details.View.ts"],"names":[],"mappings":"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","file":"DepositApplication.Details.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"DepositApplication.Details.View\"/>\n\nimport * as deposit_application_details_tpl from 'deposit_application_details.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { RecordViewsView } from '../../RecordViews/JavaScript/RecordViews.View';\nimport { AjaxRequestsKiller } from '../../../Commons/AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\n\nimport DepositApplicationModel = require('./DepositApplication.Model');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class DepositApplication.Details.View @extend Backbone.View\nconst DepositApplicationDetailsView: any = BackboneView.extend({\n    template: deposit_application_details_tpl,\n\n    title: Utils.translate('Deposit Application Details'),\n\n    page_header: Utils.translate('Deposit Application Details'),\n\n    attributes: {\n        id: 'DepositApplicationDetail',\n        class: 'DepositApplicationDetails'\n    },\n\n    initialize: function(options) {\n        const internalid = options.routerArguments[0];\n\n        this.model = new DepositApplicationModel({ internalid: internalid });\n        this.model.on('change', this.showContent, this);\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        return this.model.fetch({\n            killerId: AjaxRequestsKiller.getKillerId()\n        });\n    },\n\n    // @method getSelectedMenu\n    getSelectedMenu: function() {\n        return 'transactionhistory';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return [\n            {\n                text: Utils.translate('Transaction History'),\n                href: 'transactionhistory'\n            },\n            {\n                text: Utils.translate('Deposit Application #$(0)', this.model.get('tranid')),\n                path: `transactionhistory/depositapplication/${this.model.get('internalid')}`\n            }\n        ];\n    },\n\n    childViews: {\n        'Invoices.Collection': function() {\n            const records_collection = new Backbone.Collection(\n                this.model.get('invoices').map(function(invoice) {\n                    const model = new Backbone.Model({\n                        touchpoint: 'customercenter',\n\n                        title: Utils.translate('Invoice #$(0)', invoice.get('refnum')),\n                        detailsURL: `/invoices/${invoice.get('internalid')}`,\n\n                        id: invoice.get('internalid'),\n                        internalid: invoice.get('internalid'),\n\n                        columns: [\n                            {\n                                label: Utils.translate('Transaction Date:'),\n                                type: 'date',\n                                name: 'date',\n                                value: invoice.get('applydate')\n                            },\n                            {\n                                label: Utils.translate('Amount:'),\n                                type: 'currency',\n                                name: 'amount',\n                                value: invoice.get('amount_formatted')\n                            }\n                        ]\n                    });\n\n                    return model;\n                })\n            );\n\n            return new BackboneCollectionView({\n                childView: RecordViewsView,\n                collection: records_collection,\n                viewsPerRow: 1\n            });\n        }\n    },\n\n    // @method getContet @return DepositApplication.Details.View.Context\n    getContext: function() {\n        // @class DepositApplication.Details.View.Context\n        return {\n            // @property {String} tranId\n            tranId: this.model.get('tranid'),\n            // @property {String} totalFormatted\n            totalFormatted: this.model.get('summary').total_formatted,\n            // @property {String} tranDate\n            tranDate: this.model.get('trandate'),\n            // @property {Boolean} areElementsCollapsed\n            areElementsCollapsed: Configuration.get('sca.collapseElements', false),\n            // @property {String} depositInternalId\n            depositInternalId: this.model.get('deposit').internalid,\n            // @property {String} depositName\n            depositName: this.model.get('deposit').name,\n            // @property {String} depositDate\n            depositDate: this.model.get('depositdate'),\n            // @property {Boolean} showInvoices\n            showInvoices: !!(this.model.get('invoices') && this.model.get('invoices').length),\n            // @property {Boolean} showMemo\n            showMemo: !!this.model.get('memo'),\n            // @property {String} memo\n            memo: this.model.get('memo'),\n            // @property {Boolean} showOpenedAccordion\n            showOpenedAccordion: Utils.isTabletDevice() || Utils.isDesktopDevice()\n        };\n        // @class DepositApplication.Details.View\n    }\n});\n\nexport = DepositApplicationDetailsView;\n"]}