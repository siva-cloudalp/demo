{"version":3,"sources":["Invoice.OpenList.View.ts"],"names":[],"mappings":"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","file":"Invoice.OpenList.View.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Invoice.OpenList.View\"/>\n\nimport '../../../Commons/Backbone.CompositeView/JavaScript/Backbone.CompositeView';\nimport './Invoice.Date.View';\nimport * as _ from 'underscore';\nimport * as invoice_open_list_tpl from 'invoice_open_list.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { ListHeaderView } from '../../../Commons/ListHeader/JavaScript/ListHeader.View';\nimport { GlobalViewsPaginationView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.Pagination.View';\nimport { AjaxRequestsKiller } from '../../../Commons/AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\nimport { GlobalViewsMessageView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.Message.View';\n\nimport TransactionListView = require('../../../Commons/Transaction/JavaScript/Transaction.List.View');\nimport InvoiceCollection = require('./Invoice.Collection');\nimport LivePaymentModel = require('../../LivePayment/JavaScript/LivePayment.Model');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport Handlebars = require('../../../Commons/Utilities/JavaScript/Handlebars');\nimport RecordViewsSelectableView = require('../../RecordViews/JavaScript/RecordViews.Selectable.View');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\n// returns the amount of days based on milliseconds\nfunction getDays(milliseconds: number): number {\n    return milliseconds / 1000 / 60 / 60 / 24;\n}\n\n// @class Invoice.OpenList.View @extends Backbone.View\nconst InvoiceOpenListView: any = TransactionListView.extend({\n    // @property {Function} template\n    template: invoice_open_list_tpl,\n\n    // @property {String} title\n    title: Utils.translate('Invoices'),\n\n    // @property {String} page_header\n    page_header: Utils.translate('Invoices'),\n\n    // @property {Object} attributes\n    attributes: {\n        id: 'OpenInvoicesHistory',\n        class: 'Invoices'\n    },\n\n    // @property {Object} events\n    events: {\n        'click [data-action=\"select-invoice\"]': 'toggleInvoiceHandler',\n        'click [data-type=\"make-a-payment\"]': 'makeAPayment'\n    },\n\n    // @method initialize\n    initialize: function initialize(options): void {\n        const self = this;\n        const { application } = options;\n        let page = '1';\n\n        if (options.routerArguments && options.routerArguments[0]) {\n            const params = Utils.parseUrlOptions(options.routerArguments[0]);\n\n            if (params.page) {\n                page = params.page.toString();\n            }\n        }\n\n        this.options.page = page;\n\n        this.collection = new InvoiceCollection();\n\n        this.collection.on('sync', this.showContent, this);\n\n        this.application = application;\n        this.livePaymentModel = LivePaymentModel.getInstance();\n        this.disableCheckField = 'disable_payment';\n\n        this.selectedInvoices = [];\n\n        // manges sorting and filtering of the collection\n        this.listHeader = new ListHeaderView({\n            view: this,\n            application: application,\n            collection: this.collection,\n            filters: this.filterOptions,\n            sorts: this.sortOptions,\n            selectable: true,\n            hidePagination: true\n        });\n\n        // Initialize invoices list\n        this.getInvoicesList();\n\n        this.listHeader.getUnselectedLength = this.getUnselectedLength;\n        this.listHeader.getCollectionLength = this.getCollectionLength;\n\n        this.collection.on('sync reset', function() {\n            const collection = this;\n\n            self.livePaymentModel.getSelectedInvoices().each(function(invoice) {\n                collection.get(invoice).set('checked', true);\n            });\n\n            self.render();\n        });\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        return this.collection.fetch({\n            data: {\n                status: 'open',\n                page: this.options.page\n            },\n            killerId: AjaxRequestsKiller.getKillerId()\n        });\n    },\n\n    // @method getCollectionLength Returns the length of selectable invoices\n    getCollectionLength: function() {\n        const self = this.view;\n\n        return this.collection.filter(function(inv) {\n            return !inv.get(self.disableCheckField);\n        }).length;\n    },\n\n    // @method getUnselectedLength Returns the length of unselected invoices\n    getUnselectedLength: function() {\n        const self = this.view;\n\n        return this.collection.filter(function(record) {\n            return !record.get(self.disableCheckField) && !record.get('checked');\n        }).length;\n    },\n\n    // @method getSelectedInvoicesLength Returns the count of selected invoices (This method is used by the template)\n    getSelectedInvoicesLength: function() {\n        return this.collection.filter(function(invoice) {\n            return invoice.get('checked');\n        }).length;\n    },\n\n    // @method differentCurrencies Returns if there are different currencies selected\n    differentCurrencies: function(): boolean {\n        let differentCurrencies = [];\n        if (this.selectedInvoices.length > 0) {\n            const first_invoice = this.selectedInvoices[0];\n            if (first_invoice.currency) {\n                differentCurrencies = _.filter(this.selectedInvoices, function(invoice) {\n                    return invoice.currency.internalid !== first_invoice.currency.internalid;\n                });\n            }\n        }\n\n        return differentCurrencies.length > 0;\n    },\n\n    // @method paymentStatus UnapprovedPayment Returns if exist a invoice with last payment status unapprovedPayment\n    paymentStatusUnapprovedPayment: function(): boolean {\n        return _.some(\n            this.selectedInvoices,\n            (invoice: any) => invoice.payment && invoice.payment.status === 'unapprovedPayment'\n        );\n    },\n\n    // @method toggleInvoiceHandler Handle to used to change the status of an invoice\n    toggleInvoiceHandler: function(e): void {\n        this.toggleInvoice(this.$(e.currentTarget).data('id'));\n    },\n\n    // @method toggleInvoice Change the state (selected/unselected) of the specified invoice Model\n    toggleInvoice: function(invoice): void {\n        invoice = this.collection.get(invoice);\n\n        if (invoice) {\n            this[invoice.get('checked') ? 'unselectInvoice' : 'selectInvoice'](invoice);\n            this.render();\n        }\n    },\n\n    // @method getInvoicesList Return the list of invoices to be shown indicating if each invoice can or not be selected to make a payment\n    getInvoicesList: function() {\n        const live_payment_invoices = this.livePaymentModel.get('invoices');\n        const self = this;\n\n        this.selectedInvoices = [];\n        this.collection.each(function(invoice) {\n            const make_payment_invoice = live_payment_invoices.get(invoice.id);\n            invoice.set(\n                self.disableCheckField,\n                !!(make_payment_invoice && make_payment_invoice.get('due') === 0)\n            );\n\n            if (invoice.get('checked')) {\n                self.selectedInvoices.push(invoice);\n            }\n        });\n\n        return this.collection;\n    },\n\n    // @method makeAPayment change the currency of the LivePayment\n    makeAPayment: function(): void {\n        const { currency } = this.selectedInvoices[0];\n        if (currency) {\n            this.livePaymentModel.changeCurrency(currency.internalid, this.options.page);\n        }\n\n        for (let i = 0; i < this.selectedInvoices.length; i++) {\n            this.livePaymentModel.selectInvoice(this.selectedInvoices[i].id);\n        }\n    },\n\n    // @method selectInvoice select a specified invoice Model\n    selectInvoice: function(invoice): void {\n        if (invoice && !invoice.get(this.disableCheckField)) {\n            invoice.set('checked', true);\n        }\n\n        this.selectedInvoices.push(invoice);\n    },\n\n    // @method unselectInvoice unselect a specified invoice Model\n    unselectInvoice: function(invoice): void {\n        const self = this;\n\n        if (invoice) {\n            invoice.set('checked', false);\n        }\n\n        this.selectedInvoices = _.reject(this.selectedInvoices, function(inv: any) {\n            return inv.id === invoice.id;\n        });\n    },\n\n    // @method selectAll selects all invoices\n    selectAll: function(): void {\n        const self = this;\n        let has_changed = false;\n\n        this.collection.each(function(invoice) {\n            if (!invoice.get('checked') && !invoice.get(self.disableCheckField)) {\n                has_changed = true;\n                // select the invoice\n                self.selectInvoice(invoice, {\n                    silent: true\n                });\n            }\n        });\n\n        // The select all might've been called\n        // on a collection that was already fully selected\n        // so let's not due an painfull useless render, shall we?\n        if (has_changed) {\n            this.render();\n        }\n    },\n\n    // @method unselectAll unselects all invoices\n    unselectAll: function(): void {\n        const self = this;\n        let has_changed = false;\n\n        this.collection.each(function(invoice) {\n            if (invoice.get('checked')) {\n                has_changed = true;\n                // unselects the invoice\n                self.unselectInvoice(invoice, {\n                    silent: true\n                });\n            }\n        });\n\n        // The unselect all might've been called\n        // on a collection that had none selected\n        // so let's not due an painfull useless render, shall we?\n        if (has_changed) {\n            this.render();\n        }\n    },\n    // @method getSelectedMenu\n    getSelectedMenu: function(): string {\n        return 'invoices';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return {\n            text: this.title,\n            href: '/paid-invoices'\n        };\n    },\n    // @property {Array} filterOptions\n    // Array of default filter options\n    // filters always apply on the original collection\n    filterOptions: [\n        {\n            value: 'overdue',\n            name: Utils.translate('Show Overdue'),\n            filter: function() {\n                return this.original.filter(function(invoice) {\n                    return !invoice.get('dueinmilliseconds') || invoice.get('isOverdue');\n                });\n            }\n        },\n        {\n            value: 'next7days',\n            name: Utils.translate('Show Due next 7 days'),\n            filter: function() {\n                return this.original.filter(function(invoice) {\n                    return (\n                        !invoice.get('dueinmilliseconds') ||\n                        getDays(invoice.get('dueinmilliseconds')) <= 7\n                    );\n                });\n            }\n        },\n        {\n            value: 'next30days',\n            name: Utils.translate('Show Due next 30 days'),\n            filter: function() {\n                return this.original.filter(function(invoice) {\n                    return (\n                        !invoice.get('dueinmilliseconds') ||\n                        getDays(invoice.get('dueinmilliseconds')) <= 30\n                    );\n                });\n            }\n        },\n        {\n            value: 'next60days',\n            name: Utils.translate('Show Due next 60 days'),\n            filter: function() {\n                return this.original.filter(function(invoice) {\n                    return (\n                        !invoice.get('dueinmilliseconds') ||\n                        getDays(invoice.get('dueinmilliseconds')) <= 60\n                    );\n                });\n            }\n        },\n        {\n            value: 'next90days',\n            name: Utils.translate('Show Due next 90 days'),\n            filter: function() {\n                return this.original.filter(function(invoice) {\n                    return (\n                        !invoice.get('dueinmilliseconds') ||\n                        getDays(invoice.get('dueinmilliseconds')) <= 90\n                    );\n                });\n            }\n        },\n        {\n            value: 'all',\n            name: Utils.translate('Show All'),\n            selected: true,\n            filter: function() {\n                return this.original.models;\n            }\n        }\n    ],\n    // @property {Array} sortOptions\n    // Array of default sort options\n    // sorts only apply on the current collection\n    // which might be a filtered version of the original\n    sortOptions: [\n        {\n            value: 'duedate',\n            name: Utils.translate('By Due Date'),\n            selected: true,\n            sort: function() {\n                return this.models.sort(function(invoiceOne, invoiceTwo) {\n                    const milli_inv_one = invoiceOne.get('dueinmilliseconds') || 0;\n                    const milli_inv_two = invoiceTwo.get('dueinmilliseconds') || 0;\n\n                    if (milli_inv_one !== milli_inv_two) {\n                        return milli_inv_one < milli_inv_two ? -1 : 1;\n                    }\n\n                    return invoiceOne.get('tranid') < invoiceTwo.get('tranid') ? -1 : 1;\n                });\n            }\n        },\n        {\n            value: 'trandate',\n            name: Utils.translate('By Invoice Date'),\n            sort: function() {\n                return this.models.sort(function(invoiceOne, invoiceTwo) {\n                    const milli_inv_one = invoiceOne.get('tranDateInMilliseconds') || 0;\n                    const milli_inv_two = invoiceTwo.get('tranDateInMilliseconds') || 0;\n\n                    if (milli_inv_one !== milli_inv_two) {\n                        return milli_inv_one < milli_inv_two ? -1 : 1;\n                    }\n\n                    return invoiceOne.get('tranid') < invoiceTwo.get('tranid') ? -1 : 1;\n                });\n            }\n        },\n        {\n            value: 'invoicenumber',\n            name: Utils.translate('By Invoice Number'),\n            sort: function() {\n                return this.sortBy(function(invoice) {\n                    return parseInt(\n                        invoice\n                            .get('tranid')\n                            .split(/[^\\(\\)0-9]*/)\n                            .join(''),\n                        10\n                    );\n                });\n            }\n        },\n        {\n            value: 'amountdue',\n            name: Utils.translate('By Amount Due'),\n            sort: function() {\n                return this.sortBy(function(invoice) {\n                    return invoice.get('amountremaining');\n                });\n            }\n        }\n    ],\n    // @property {Object} childViews\n    childViews: {\n        ListHeader: function() {\n            return this.listHeader;\n        },\n        'Invoice.Results': function() {\n            return this._resultsView;\n        },\n        'Invoices.Message': function() {\n            const messages = [];\n\n            if (this.differentCurrencies()) {\n                messages.push(\n                    Utils.translate('Sorry, you can not pay invoices in different currencies')\n                );\n            }\n\n            if (this.paymentStatusUnapprovedPayment()) {\n                messages.push(\n                    Utils.translate(\n                        'Sorry, you can not pay an invoice with an Unapproved Payment. In order to pay this invoice, get in contact with us'\n                    )\n                );\n            }\n\n            if (!_.isEmpty(messages)) {\n                return new GlobalViewsMessageView({\n                    message: messages,\n                    type: 'warning',\n                    closable: false\n                });\n            }\n        },\n        'GlobalViews.Pagination': function() {\n            return new GlobalViewsPaginationView(\n                _.extend(\n                    {\n                        totalPages: Math.ceil(\n                            this.collection.totalRecordsFound / this.collection.recordsPerPage\n                        )\n                    },\n                    Configuration.defaultPaginationSettings\n                )\n            );\n        }\n    },\n    _buildResultsView: function() {\n        const self = this;\n        let selectedColumns = [];\n\n        if (!Configuration.get().transactionListColumns.enableInvoice) {\n            selectedColumns.push({ label: 'Date', type: 'date', name: 'date', id: 'trandate' });\n            selectedColumns.push({\n                label: 'Amount',\n                type: 'currency',\n                name: 'amount',\n                id: 'amount_formatted'\n            });\n            selectedColumns.push({\n                label: 'Due Date',\n                id: 'due-date',\n                type: 'date',\n                compositeKey: 'InvoiceDateView',\n                composite: 'Invoice.Date.View',\n                fields: ['isOverdue', 'dueDate', 'isPartiallyPaid', 'payment']\n            });\n        } else {\n            selectedColumns = Configuration.get().transactionListColumns.invoiceOpen;\n        }\n\n        const records_collection = new Backbone.Collection(\n            this.collection.map(function(invoice) {\n                const model = new Backbone.Model({\n                    touchpoint: 'customercenter',\n                    title: new Handlebars.SafeString(\n                        Utils.translate(\n                            'Invoice #<span class=\"tranid\">$(0)</span>',\n                            invoice.get('tranid')\n                        )\n                    ),\n                    url: `invoices/${invoice.get('internalid')}`,\n                    actionType: 'select-invoice',\n\n                    active: true,\n\n                    id: invoice.get('internalid'),\n                    internalid: invoice.get('internalid'),\n\n                    check: invoice.get('checked'),\n                    navigable: true,\n\n                    columns: self._buildColumns(selectedColumns, invoice)\n                });\n\n                return model;\n            })\n        );\n\n        return new BackboneCollectionView({\n            childView: RecordViewsSelectableView,\n            collection: records_collection,\n            viewsPerRow: 1,\n            childViewOptions: {\n                referrer: 'invoices'\n            }\n        });\n    },\n\n    // @method getContext\n    // @returns {Invoice.OpenList.View.Context}\n    getContext: function() {\n        this._resultsView = this._buildResultsView();\n        let columns = [];\n        if (this._resultsView.collection.length > 0) {\n            columns = this._resultsView.collection.at(0).get('columns');\n        }\n        const invoices = this.getInvoicesList();\n\n        // @class Invoice.OpenList.View.Context\n        return {\n            // @property {Invoice.Collection} invoices\n            invoices: invoices,\n            // @property {Boolean} showInvoices\n            showInvoices: !!invoices.length,\n            // @property {String} pageHeader\n            pageHeader: this.page_header,\n            // @property {Boolean} showMakeAPaymentButton\n            showMakeAPaymentButton: this.collection.length > 0,\n            // @property {Boolean} enableMakeAPaymentButton\n            enableMakeAPaymentButton:\n                this.getSelectedInvoicesLength() > 0 &&\n                !this.differentCurrencies() &&\n                !this.paymentStatusUnapprovedPayment(),\n            // @property {Boolean} showBackToAccount\n            showBackToAccount: Configuration.get('siteSettings.sitetype') === 'STANDARD',\n            // @property {Array<{}>} columns\n            columns: columns,\n            // @property {Boolean} showPagination\n            showPagination: !!(this.collection.totalRecordsFound && this.collection.recordsPerPage)\n        };\n    }\n});\n\nexport = InvoiceOpenListView;\n"]}