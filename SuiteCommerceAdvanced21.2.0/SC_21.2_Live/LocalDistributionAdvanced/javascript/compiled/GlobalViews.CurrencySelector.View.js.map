{"version":3,"sources":["GlobalViews.CurrencySelector.View.ts"],"names":[],"mappings":"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","file":"GlobalViews.CurrencySelector.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"GlobalViews.CurrencySelector.View\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/UnderscoreExtended\" />\n\nimport * as _ from 'underscore';\nimport * as global_views_currency_selector_tpl from 'global_views_currency_selector.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { ProfileModel } from '../../Profile/JavaScript/Profile.Model';\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport Session = require('../../../Commons/Session/JavaScript/Session');\n\n// @class GlobalViews.CurrencySelector.View @extends Backbone.View\nconst GlobalViewsCurrencySelectorView = BackboneView.extend({\n    template: global_views_currency_selector_tpl,\n\n    events: {\n        'change select[data-toggle=\"currency-selector\"]': 'setCurrency',\n        'click select[data-toggle=\"currency-selector\"]': 'currencySelectorClick'\n    },\n\n    // @method initialize\n    initialize: function() {\n        const self = this;\n\n        ProfileModel.getPromise().done(function() {\n            self.isCustomer = ProfileModel.getInstance().get('customer');\n            self.render();\n        });\n    },\n\n    // @method currencySelectorClick @param {HTMLEvent} e\n    currencySelectorClick: function(e) {\n        e.stopPropagation();\n    },\n\n    // @method setCurrency @param {HTMLEvent} e\n    setCurrency: function(e) {\n        const currency_code = this.$(e.target).val();\n        const selected_currency = _.find(SC.ENVIRONMENT.availableCurrencies, function(\n            currency: any\n        ) {\n            return currency.code === currency_code;\n        });\n\n        window.location.href = Utils.addParamsToUrl(\n            Session.get(`touchpoints.${Configuration.get('currentTouchpoint')}`),\n            { cur: selected_currency.code }\n        );\n    },\n\n    // @method getContext\n    // @return {GlobalViews.CurrencySelector.View.Context}\n    getContext: function() {\n        const sessionCurrency = SC.getSessionInfo('currency');\n        const currentCurrency = sessionCurrency || SC.ENVIRONMENT.currentCurrency;\n        const available_currencies = _.map(SC.ENVIRONMENT.availableCurrencies, function(\n            currency: any\n        ) {\n            // @class GlobalViews.CurrencySelector.View.Context.Currency\n            return {\n                // @property {String} code\n                code: currency.code,\n                // @property {String} internalId\n                internalId: currency.internalid,\n                // @property {String} isDefault\n                isDefault: currency.isdefault,\n                // @property {String} symbol\n                symbol: currency.symbol,\n                // @property {Boolean} symbolPlacement\n                symbolPlacement: currency.symbolplacement,\n                // @property {String} displayName\n                displayName: currency.title || currency.name,\n                // @property {Boolean} isSelected\n                isSelected: currentCurrency.code === currency.code\n            };\n        });\n\n        // @class GlobalViews.CurrencySelector.View.Context\n        return {\n            // @property {Boolean} showCurrencySelector\n            showCurrencySelector: !!(\n                SC.ENVIRONMENT.availableCurrencies && SC.ENVIRONMENT.availableCurrencies.length > 1\n            ),\n            // @property {Array<GlobalViews.CurrencySelector.View.Context.Currency>} availableCurrencies\n            availableCurrencies: available_currencies || [],\n            // @property {String} currentCurrencyCode\n            currentCurrencyCode: SC.ENVIRONMENT.currentCurrency.code,\n            // @property {String} currentCurrencySymbol\n            currentCurrencySymbol: sessionCurrency.symbol,\n            // @property {Boolean} isDisabled\n            isDisabled: this.isCustomer\n        };\n    }\n});\n\nexport = GlobalViewsCurrencySelectorView;\n"]}