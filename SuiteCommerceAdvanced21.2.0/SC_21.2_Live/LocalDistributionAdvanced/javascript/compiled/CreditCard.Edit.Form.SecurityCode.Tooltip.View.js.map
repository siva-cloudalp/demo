{"version":3,"sources":["CreditCard.Edit.Form.SecurityCode.Tooltip.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAaF,IAAM,yCAAyC,GAAQ,YAAY,CAAC,MAAM,CAAC;QACvE,QAAQ,EAAE,0CAA0C;QAEpD,kCAAkC;QAClC,uBAAuB,EAAE;YACrB,cAAc;YACd,IAAM,WAAW,GAAG,EAAE,CAAC;YACvB,IAAM,gBAAgB,GAAG,4BAAY,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAE1E,gBAAgB,CAAC,IAAI,CAAC,UAAS,OAAO;gBAClC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBACrB,IAAM,uBAAqB,GAAQ,CAAC,CAAC,KAAK,CACtC,6BAAa,CAAC,GAAG,CAAC,6BAA6B,CAAC,EAChD,EAAE,UAAU,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,CACrC,CAAC;gBAEF,CAAC,CAAC,IAAI,CAAC,uBAAqB,EAAE,UAAS,KAAK,EAAE,EAAE;oBAC5C,WAAW,CAAC,IAAI,CAAC,uBAAqB,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;gBACrD,CAAC,CAAC,CAAC;aACN;YAED,OAAO,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;QAED,oFAAoF;QACpF,UAAU,EAAE;YACR,IAAM,sBAAsB,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAE9D,gEAAgE;YAChE,OAAO;gBACH,oCAAoC;gBACpC,aAAa,EAAE,sBAAsB,CAAC,MAAM,GAAG,CAAC;gBAChD,iDAAiD;gBACjD,oBAAoB,EAAE,sBAAsB;gBAC5C,0CAA0C;gBAC1C,uBAAuB,EAAE,KAAK,CAAC,mCAAmC,CAC9D,6BAAa,CAAC,GAAG,CAAC,iCAAiC,CAAC,CACvD;gBACD,sCAAsC;gBACtC,mBAAmB,EAAE,KAAK,CAAC,mCAAmC,CAC1D,6BAAa,CAAC,GAAG,CAAC,6BAA6B,CAAC,CACnD;gBACD,sDAAsD;gBACtD,+BAA+B,EAC3B,CAAC,CAAC,OAAO,CAAC,sBAAsB,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;oBAChD,CAAC,CAAC,OAAO,CAAC,sBAAsB,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC;oBACvD,CAAC,CAAC,OAAO,CAAC,sBAAsB,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;gBACxD,sCAAsC;gBACtC,eAAe,EAAE,CAAC,CAAC,OAAO,CAAC,sBAAsB,EAAE,kBAAkB,CAAC,KAAK,CAAC,CAAC;aAChF,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,yCAAyC,CAAC","file":"CreditCard.Edit.Form.SecurityCode.Tooltip.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CreditCard.Edit.Form.SecurityCode.Tooltip.View\"/>\n// @module CreditCard\n\nimport * as _ from 'underscore';\nimport * as creditcard_edit_form_securitycode_tootltip from 'creditcard_edit_form_securitycode_tooltip.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { ProfileModel } from '../../Profile/JavaScript/Profile.Model';\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\nconst CreditCardEditFormSecurityCodeTooltipView: any = BackboneView.extend({\n    template: creditcard_edit_form_securitycode_tootltip,\n\n    // @method getAvailableCreditcards\n    getAvailableCreditcards: function() {\n        // Creditcards\n        const creditcards = [];\n        const user_creditcards = ProfileModel.getInstance().get('paymentmethods');\n\n        user_creditcards.each(function(user_cc) {\n            creditcards.push(user_cc.get('paymentmethod').name);\n        });\n\n        if (!creditcards.length) {\n            const available_creditcards: any = _.where(\n                Configuration.get('siteSettings.paymentmethods'),\n                { creditcard: 'T', ispaypal: 'F' }\n            );\n\n            _.each(available_creditcards, function(index, el) {\n                creditcards.push(available_creditcards[el].name);\n            });\n        }\n\n        return _.unique(creditcards);\n    },\n\n    // @method getContext @return CreditCard.Edit.Form.SecurityCode.Tooltip.View.Context\n    getContext: function() {\n        const available_credit_cards = this.getAvailableCreditcards();\n\n        // @class CreditCard.Edit.Form.SecurityCode.Tooltip.View.Context\n        return {\n            // @property {Boolean} isCreditCards\n            isCreditCards: available_credit_cards.length > 0,\n            // @property {Array<String>} availableCreditcards\n            availableCreditcards: available_credit_cards,\n            // @property {String} imageCvvAmericanCard\n            imageCvvAmericanCardURL: Utils.getAbsoluteUrlOfNonManagedResources(\n                Configuration.get('creditCard.imageCvvAmericanCard')\n            ),\n            // @property {String} imageCvvAllCards\n            imageCvvAllCardsURL: Utils.getAbsoluteUrlOfNonManagedResources(\n                Configuration.get('creditCard.imageCvvAllCards')\n            ),\n            // @property {Boolean} isVisaMasterOrDiscoverAvailable\n            isVisaMasterOrDiscoverAvailable:\n                _.indexOf(available_credit_cards, 'VISA') !== -1 ||\n                _.indexOf(available_credit_cards, 'Master Card') !== -1 ||\n                _.indexOf(available_credit_cards, 'Discover') !== -1,\n            // @property {Boolean} isAmexAvailable\n            isAmexAvailable: _.indexOf(available_credit_cards, 'American Express') !== -1\n        };\n    }\n});\n\nexport = CreditCardEditFormSecurityCodeTooltipView;\n"]}