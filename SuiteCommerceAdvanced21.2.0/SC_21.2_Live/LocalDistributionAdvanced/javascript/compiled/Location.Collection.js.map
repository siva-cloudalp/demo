{"version":3,"sources":["Location.Collection.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IASF,yDAAyD;IACzD,IAAM,kBAAkB,GAAQ,wBAAwB,CAAC,MAAM,CAAC;QAC5D,mCAAmC;QACnC,KAAK,EAAE,aAAa;QAEpB,yBAAyB;QACzB,GAAG,EAAE,KAAK,CAAC,cAAc,CAAC,8BAA8B,CAAC;QAEzD,8FAA8F;QAC9F,0CAA0C;QAC1C,KAAK,EAAE,SAAS,KAAK,CAAC,QAAQ;YAC1B,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;gBAC5C,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,iBAAiB,CAAC;gBACpD,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;gBAC9C,OAAO,QAAQ,CAAC,OAAO,CAAC;aAC3B;YACD,OAAO,QAAQ,CAAC;QACpB,CAAC;QAED,iBAAiB;QACjB,0BAA0B;QAC1B,4BAA4B;QAC5B,MAAM,EAAE,SAAS,MAAM,CAAC,OAAO,EAAE,SAAS;YACtC,OAAO,IAAI,CAAC,KAAK,CACb,CAAC,CAAC,MAAM,CACJ;gBACI,IAAI,EAAE;oBACF,8BAA8B;oBAC9B,QAAQ,EAAE,OAAO,CAAC,QAAQ;oBAC1B,+BAA+B;oBAC/B,SAAS,EAAE,OAAO,CAAC,SAAS;oBAC5B,4BAA4B;oBAC5B,MAAM,EAAE,OAAO,CAAC,MAAM;oBACtB,0BAA0B;oBAC1B,IAAI,EAAE,OAAO,CAAC,IAAI;oBAClB,0BAA0B;oBAC1B,IAAI,EAAE,OAAO,CAAC,IAAI;oBAClB,kCAAkC;oBAClC,YAAY,EAAE,OAAO,CAAC,YAAY;oBAClC,sCAAsC;oBACtC,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;iBAC7C;gBACD,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK;gBACtB,QAAQ,EAAE,OAAO,CAAC,QAAQ;aAC7B,EACD,SAAS,CACZ,CACJ,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,kBAAkB,CAAC","file":"Location.Collection.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Location.Collection\"/>\nimport * as _ from 'underscore';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport LocationModel = require('./Location.Model');\nimport BackboneCachedCollection = require('../../../Commons/BackboneExtras/JavaScript/Backbone.CachedCollection');\n\n// @class Location.Collection @extend Backbone.Collection\nconst LocationCollection: any = BackboneCachedCollection.extend({\n    // @property {Location.Model} model\n    model: LocationModel,\n\n    // @property {String} url\n    url: Utils.getAbsoluteUrl('services/Location.Service.ss'),\n\n    // @method parse Transforms the JSON response to extract  the array of models from the correct\n    // response as to know what page is loaded\n    parse: function parse(response) {\n        if (!_.isUndefined(response.totalRecordsFound)) {\n            this.totalRecordsFound = response.totalRecordsFound;\n            this.recordsPerPage = response.recordsPerPage;\n            return response.records;\n        }\n        return response;\n    },\n\n    // @method update\n    // @param {Object} options\n    // @param {Object} callbacks\n    update: function update(options, callbacks) {\n        return this.fetch(\n            _.extend(\n                {\n                    data: {\n                        // @property {String} latitude\n                        latitude: options.latitude,\n                        // @property {String} longitude\n                        longitude: options.longitude,\n                        // @property {String} radius\n                        radius: options.radius,\n                        // @property {String} sort\n                        sort: options.sort,\n                        // @property {Number} page\n                        page: options.page,\n                        // @property {Number} locationtype\n                        locationtype: options.locationtype,\n                        // @property {Number} results_per_page\n                        results_per_page: options.results_per_page\n                    },\n                    reset: !!options.reset,\n                    killerId: options.killerId\n                },\n                callbacks\n            )\n        );\n    }\n});\n\nexport = LocationCollection;\n"]}