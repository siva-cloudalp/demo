{"version":3,"sources":["ProductListPage.Component.ts"],"names":[],"mappings":"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","file":"ProductListPage.Component.js","sourcesContent":["/*\n\t© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductListPage.Component\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\n\nimport SCVisualComponent = require('../../../Commons/SC/JavaScript/SC.VisualComponent');\nimport FacetsModel = require('./Facets.Model');\nimport FacetsTranslator = require('./Facets.Translator');\n\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\n\nexport const ProductListPageComponent = function ProductListPageComponentGenerator(application) {\n    // @class ProductListPage.Component The ProductListPage component let's the user interact with most important aspect of the\n    // Product List Page, like setting options, changing quantity, and obtain item's related information. @extend SC.VisualComponent @public @extlayer\n    const privateComponent = SCVisualComponent.extend({\n        componentName: 'PLP',\n\n        application: application,\n\n        // @method _isViewFromComponent Indicate if the passed-in the View is a PDP of the current component\n        // @private\n        // @param {Backbone.View} view Any view of the system\n        // @return {Boolean} True in case the passed in View is a PDP of the current Component, false otherwise\n        _isViewFromComponent: function _isViewFromComponent(view) {\n            view = view || this.viewToBeRendered || this.application.getLayout().getCurrentView();\n\n            const view_identifier = this._getViewIdentifier(view);\n            const view_prototype_id = view && this._getViewIdentifier(view.prototype);\n\n            if (\n                view &&\n                (view_identifier === this._PLP_VIEW_ID || view_prototype_id === this._PLP_VIEW_ID)\n            ) {\n                this.current_view = view;\n                return true;\n            }\n            return false;\n        },\n\n        DEFAULT_VIEW: 'Facets.Browse.View',\n\n        PLP_VIEW: 'Facets.Browse.View',\n\n        _PLP_VIEW_ID: 'facet-browse',\n\n        _getComponentIdentifiers: function _getComponentIdentifiers(): string[] {\n            return [this.PLP_VIEW];\n        },\n\n        // @method getPagination Return the info of the current options in the PLP\n        // @return {Object} | NULL\n        getPagination: function getPagination() {\n            if (this._isViewFromComponent()) {\n                return this.current_view.getPagination();\n            }\n        },\n\n        // @method setCurrentPage Go to the indicated page\n        // @param {Object} options\n        // @return {jQuery.Deferred}\n        setCurrentPage: function setPage(options) {\n            try {\n                if (this._isViewFromComponent()) {\n                    if (!_.isNumber(options.currentPage)) {\n                        this._reportError(\n                            'INVALID_PARAM',\n                            'Invalid parameter \"currentPage\". It must be a valid number'\n                        );\n                    } else if (options.currentPage <= 0) {\n                        this._reportError(\n                            'INVALID_PARAM',\n                            'Parameter \"currentPage\" must be greater than 0'\n                        );\n                    } else if (options.currentPage > this.current_view.totalPages) {\n                        this._reportError(\n                            'INVALID_PARAM',\n                            `Parameter \"currentPage\" must be lesser than ${\n                                this.current_view.totalPages\n                            }`\n                        );\n                    }\n\n                    const url = this.current_view.translator\n                        .cloneForOption('page', options.currentPage)\n                        .getUrl();\n\n                    return this.current_view\n                        .setEvent('CurrentPage', options.currentPage)\n                        .then(function() {\n                            Backbone.history.navigate(url, { trigger: true });\n                        });\n                }\n                return jQuery.Deferred().reject(false);\n            } catch (error) {\n                return jQuery.Deferred().reject(error);\n            }\n        },\n\n        // @method _getOption Given an option and a list of options, it will return the data of the current selected option\n        // @private\n        // @param {Object} options\n        // @return {Array}\n        _getOption: function _getOption(options) {\n            const option = this.current_view.translator.getOptionValue(options.option);\n            const result = _.find(options.list_options, function(list_option: any) {\n                return list_option.id === String(option);\n            });\n\n            return Utils.deepCopy(result);\n        },\n\n        // @method _getOption Given an option, it will return the data of all the options\n        // @private\n        // @param {Object} options\n        // @return {Array}\n        _getAllOptions: function _getAllOptions(options) {\n            const option = this.current_view.translator.getOptionValue(options.option);\n            const list_options = Utils.deepCopy(options.list_options);\n\n            _.each(list_options, function(list_option: any) {\n                if (list_option.id === String(option)) {\n                    list_option.active = true;\n                }\n            });\n\n            return list_options;\n        },\n\n        // @method getSorting Get the info of the active sorting option\n        // @return {Object} | NULL\n        getSorting: function getSorting() {\n            if (this._isViewFromComponent()) {\n                return this._getOption({\n                    option: 'order',\n                    list_options: this.current_view.sortOptions\n                });\n            }\n        },\n\n        // @method getAllSorting Get the info of all the sorting option\n        // @return {Array} | NULL\n        getAllSorting: function getAllSorting() {\n            if (this._isViewFromComponent()) {\n                return this._getAllOptions({\n                    option: 'order',\n                    list_options: this.current_view.sortOptions\n                });\n            }\n        },\n\n        // @method setSorting Set the sorting option in the PLP\n        setSorting: function setSorting(options) {\n            try {\n                if (this._isViewFromComponent()) {\n                    const sortings = this.current_view.sortOptions;\n                    const sorting = _.find(sortings, function(sort: any) {\n                        return sort.id === options.sorting;\n                    });\n\n                    if (!sorting) {\n                        this._reportError(\n                            'INVALID_SORTING',\n                            `Does not exists a sorting with the id: ${options.sorting}`\n                        );\n                    } else {\n                        const url = this.current_view.translator\n                            .cloneForOption('order', options.sorting)\n                            .getUrl();\n\n                        return this.current_view\n                            .setEvent('Sorting', options.sorting)\n                            .then(function() {\n                                Backbone.history.navigate(url, { trigger: true });\n                            });\n                    }\n                } else {\n                    return jQuery.Deferred().reject(false);\n                }\n            } catch (error) {\n                return jQuery.Deferred().reject(error);\n            }\n        },\n\n        // @method getDisplay Get the info of the active display option\n        // @return {Object} | NULL\n        getDisplay: function getDisplay() {\n            if (this._isViewFromComponent()) {\n                return this._getOption({\n                    option: 'display',\n                    list_options: this.current_view.itemsDisplayOptions\n                });\n            }\n        },\n\n        // @method getAllDisplay Get the info of all the display option\n        // @return {Array} | NULL\n        getAllDisplay: function getAllDisplay() {\n            if (this._isViewFromComponent()) {\n                return this._getAllOptions({\n                    option: 'display',\n                    list_options: this.current_view.itemsDisplayOptions\n                });\n            }\n        },\n\n        // @method setDisplay Set the display option in the PLP\n        setDisplay: function setDisplay(options) {\n            try {\n                if (this._isViewFromComponent()) {\n                    const displays = this.current_view.itemsDisplayOptions;\n                    const display = _.find(displays, function(display: any) {\n                        return display.id === options.display;\n                    });\n\n                    if (!display) {\n                        this._reportError(\n                            'INVALID_DISPLAY',\n                            `Does not exists a display with the id: ${options.display}`\n                        );\n                    } else {\n                        const url = this.current_view.translator\n                            .cloneForOption('display', options.display)\n                            .getUrl();\n\n                        return this.current_view\n                            .setEvent('Display', options.display)\n                            .then(function() {\n                                Backbone.history.navigate(url, { trigger: true });\n                            });\n                    }\n                } else {\n                    return jQuery.Deferred().reject(false);\n                }\n            } catch (error) {\n                return jQuery.Deferred().reject(error);\n            }\n        },\n\n        // @method getPageSize Get the info of the active page size option\n        // @return {Object} | NULL\n        getPageSize: function getPageSize() {\n            if (this._isViewFromComponent()) {\n                return this._getOption({\n                    option: 'show',\n                    list_options: this.current_view.resultsPerPage\n                });\n            }\n        },\n\n        // @method getAllPageSize Get the info of all the page size option\n        // @return {Array} | NULL\n        getAllPageSize: function getAllPageSize() {\n            if (this._isViewFromComponent()) {\n                return this._getAllOptions({\n                    option: 'show',\n                    list_options: this.current_view.resultsPerPage\n                });\n            }\n        },\n\n        // @method setPageSize Set the page size option in the PLP\n        setPageSize: function setPageSize(options) {\n            try {\n                if (this._isViewFromComponent()) {\n                    const pageSizes = this.current_view.resultsPerPage;\n                    const pageSize = _.find(pageSizes, function(pageSize: any) {\n                        return pageSize.id === options.pageSize;\n                    });\n\n                    if (!pageSize) {\n                        this._reportError(\n                            'INVALID_PAGESIZE',\n                            `Does not exists a page size with the value: ${options.pageSize}`\n                        );\n                    } else {\n                        const url = this.current_view.translator\n                            .cloneForOption('show', options.pageSize)\n                            .getUrl();\n\n                        return this.current_view\n                            .setEvent('PageSize', parseInt(options.pageSize, 10))\n                            .then(function() {\n                                Backbone.history.navigate(url, { trigger: true });\n                            });\n                    }\n                } else {\n                    return jQuery.Deferred().reject(false);\n                }\n            } catch (error) {\n                return jQuery.Deferred().reject(error);\n            }\n        },\n\n        // @method getFilters Get the info of the active filters option\n        // @return {Array} | NULL\n        getFilters: function getFilters() {\n            if (this._isViewFromComponent()) {\n                return Utils.deepCopy(this.current_view.translator.getAllFacets());\n            }\n        },\n\n        // @method getAllFilters Get the info of all the filters\n        // @return {Object} | NULL\n        getAllFilters: function getAllFilters() {\n            if (this._isViewFromComponent()) {\n                const exclude = _.map(\n                    (\n                        this.current_view.$el\n                            .find('[data-view=\"Facets.FacetedNavigation\"]')\n                            .data('exclude-facets') || ''\n                    ).split(','),\n                    function(facet_id_to_exclude: any) {\n                        return String(facet_id_to_exclude).trim();\n                    }\n                );\n                const facets = _.filter(this.current_view.model.get('facets'), function(\n                    facet: any\n                ) {\n                    return !_.contains(exclude, facet.id);\n                });\n\n                return Utils.deepCopy(facets);\n            }\n        },\n\n        // @method setFilters Set the filters for the PLP\n        setFilters: function setFilters(options) {\n            try {\n                if (this._isViewFromComponent()) {\n                    options = options || {};\n                    const filters = options.filters || {};\n\n                    const translator = this.current_view.translator.cloneWithoutFacets();\n\n                    _.each(filters, function(value, key) {\n                        const config = translator.getFacetConfig(key);\n\n                        translator.facets.push({\n                            config: config,\n                            id: config.id,\n                            url: config.id,\n                            value: value,\n                            isParameter: config.isParameter\n                        });\n                    });\n\n                    const url = translator.getUrl();\n\n                    return this.current_view.setEvent('Filters', filters).then(function() {\n                        Backbone.history.navigate(url, { trigger: true });\n                    });\n                }\n                return jQuery.Deferred().reject(false);\n            } catch (error) {\n                return jQuery.Deferred().reject(error);\n            }\n        },\n\n        // @method getSearchText Return the text that was search\n        // @return {String} | NULL\n        getSearchText: function getSearchText() {\n            if (this._isViewFromComponent()) {\n                return this.current_view.translator.getOptionValue('keywords') || '';\n            }\n        },\n\n        // @method setSearchText Not implemented\n        setSearchText: function setSearchText(options) {\n            try {\n                if (this._isViewFromComponent()) {\n                    const keywords = options.searchText || '';\n                    const translatorOptions = {\n                        keywords: keywords,\n                        show: parseInt(this.current_view.translator.getOptionValue('show'), 10),\n                        order: this.current_view.translator.getOptionValue('order'),\n                        display: this.current_view.translator.getOptionValue('display')\n                    };\n                    const translator = new FacetsTranslator(\n                        [],\n                        translatorOptions,\n                        this.current_view.translator.configuration,\n                        null\n                    );\n                    const url = (<any>translator).getUrl();\n\n                    return this.current_view.setEvent('SearchText', keywords).then(function() {\n                        Backbone.history.navigate(url, { trigger: true });\n                    });\n                }\n                return jQuery.Deferred().reject(false);\n            } catch (error) {\n                return jQuery.Deferred().reject(error);\n            }\n        },\n\n        // @method getItemsInfo Get the info of all the items in the PLP\n        // @return {Array} | NULL\n        getItemsInfo: function getItemsInfo() {\n            if (this._isViewFromComponent()) {\n                return Utils.deepCopy(this.current_view.model.get('items'));\n            }\n        },\n\n        // @method getCategoryInfo Get the info of the current Category\n        // @return {Object} | NULL\n        getCategoryInfo: function getCategoryInfo() {\n            if (this._isViewFromComponent()) {\n                return Utils.deepCopy(this.current_view.model.get('category'));\n            }\n        },\n\n        // {\n        // \t\"currentPage\": 1,\n        // \t\"pageSize\": 24,\n        // \t\"sorting\": \"relevance:asc\",\n        // \t\"display\": \"grid\",\n        // \t\"filters\": { \"urlcomponent\": \"value\" },\n        // \t\"searchText\": \"\",\n        // \t\"category\": \"\"\n        // }\n        // @method getUrl Get the url to the Search API with the corresponding parameters\n        // @return {String} | NULL\n        getUrl: function getUrl(options: any) {\n            if (this._isViewFromComponent()) {\n                const self = this;\n                const defaultOptions = {\n                    currentPage: 1,\n                    pageSize: _.find(this.getAllPageSize(), function(option: any) {\n                        return option.isDefault;\n                    }).id,\n                    display: _.find(this.getAllDisplay(), function(option: any) {\n                        return option.isDefault;\n                    }).id,\n                    sorting: _.find(this.getAllSorting(), function(option: any) {\n                        return option.isDefault;\n                    }).id,\n                    searchText: ''\n                };\n\n                options = _.extend({}, defaultOptions, options);\n\n                const currentTranslator = this.current_view.translator;\n                const translatorOptions: any = {};\n\n                translatorOptions.show = options.pageSize;\n                translatorOptions.order = options.sorting;\n                translatorOptions.page = options.currentPage;\n                translatorOptions.display = options.display;\n                translatorOptions.keywords = options.searchText;\n\n                const filters = options.filters || [];\n                const translatorFilters = [];\n\n                _.each(filters, function(value, key) {\n                    const config = self.current_view.translator.getFacetConfig(key);\n\n                    translatorFilters.push({\n                        config: config,\n                        id: config.id,\n                        url: config.id,\n                        value: value,\n                        isParameter: config.isParameter\n                    });\n                });\n\n                const translator = new FacetsTranslator(\n                    translatorFilters,\n                    translatorOptions,\n                    currentTranslator.configuration,\n                    options.category || currentTranslator.categoryUrl\n                );\n                const facetModel = new FacetsModel();\n                const data = translator.getApiParams() || {};\n                let url = facetModel.url();\n\n                data.c = SC.ENVIRONMENT.companyId;\n                data.n = SC.ENVIRONMENT.siteSettings.siteid;\n\n                url += (~url.indexOf('?') ? '&' : '?') + jQuery.param(data);\n\n                url = Utils.reorderUrlParams(url);\n\n                return url;\n            }\n        }\n    });\n\n    const innerToOuterMap = [\n        // @event beforeSetCurrentPage Cancelable event triggered before the page is set @public @extlayer\n        {\n            inner: 'before:FacetModel.setCurrentPage',\n            outer: 'beforeSetCurrentPage',\n            normalize: null\n        },\n        // @event afterSetCurrentPage Triggered after the page is set @public @extlayer\n        { inner: 'after:FacetModel.setCurrentPage', outer: 'afterSetCurrentPage', normalize: null },\n        // @event beforeSetSorting Cancelable event triggered before the sort is set @public @extlayer\n        { inner: 'before:FacetModel.setSorting', outer: 'beforeSetSorting', normalize: null },\n        // @event afterSetSorting Triggered after the sort is set @public @extlayer\n        { inner: 'after:FacetModel.setSorting', outer: 'afterSetSorting', normalize: null },\n        // @event beforeSetPageSize Cancelable event triggered before the page size is set @public @extlayer\n        { inner: 'before:FacetModel.setPageSize', outer: 'beforeSetPageSize', normalize: null },\n        // @event afterSetPageSize Triggered after the page size is set @public @extlayer\n        { inner: 'after:FacetModel.setPageSize', outer: 'afterSetPageSize', normalize: null },\n        // @event beforeSetDisplay Cancelable event triggered before the display is set @public @extlayer\n        { inner: 'before:FacetModel.setDisplay', outer: 'beforeSetDisplay', normalize: null },\n        // @event afterSetDisplay Triggered after the display is set @public @extlayer\n        { inner: 'after:FacetModel.setDisplay', outer: 'afterSetDisplay', normalize: null },\n        // @event beforeSetFilters Cancelable event triggered before the filters is set @public @extlayer\n        { inner: 'before:FacetModel.setFilters', outer: 'beforeSetFilters', normalize: null },\n        // @event afterSetFilters Triggered after the filters is set @public @extlayer\n        { inner: 'after:FacetModel.setFilters', outer: 'afterSetFilters', normalize: null },\n        // @event beforeSetSearchText Cancelable event triggered before the search text is set @public @extlayer\n        { inner: 'before:FacetModel.setSearchText', outer: 'beforeSetSearchText', normalize: null },\n        // @event afterSetSearchText Triggered after the search text is set @public @extlayer\n        { inner: 'after:FacetModel.setSearchText', outer: 'afterSetSearchText', normalize: null }\n    ];\n\n    application.getLayout().on('beforeAppendView', function onApplicationBeforeAppendView(view) {\n        if (privateComponent._isViewFromComponent(view, true)) {\n            privateComponent._suscribeToInnerEvents(innerToOuterMap, view.model);\n        }\n    });\n\n    return privateComponent;\n};\n"]}