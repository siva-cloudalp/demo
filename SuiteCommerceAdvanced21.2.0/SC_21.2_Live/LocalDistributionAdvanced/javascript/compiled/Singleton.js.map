{"version":3,"sources":["Singleton.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAEF,kCAAkC;IAClC,sFAAsF;IACtF,IAAM,SAAS,GAAQ;QACnB,aAAa;QACb,2CAA2C;QAC3C,iFAAiF;QACjF,cAAc;QACd,qEAAqE;QACrE,4CAA4C;QAC5C,WAAW,EAAE;YACT,IAAM,IAAI,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,EAAE,CAAC;YAC5C,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;KACJ,CAAC;IACF,EAAE,CAAC,SAAS,GAAG,SAAS,CAAC;IACzB,OAAS,SAAS,CAAC","file":"Singleton.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Singleton\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/GlobalDeclarations.d.ts\" />\nconst Singleton: any = {\n    // Singleton:\n    // Defines a simple getInstance method for:\n    // models, collections, views or any other object to use to be used as singletons\n    // How to use:\n    // Backbone.[Collection, Model, View].extend({Your code}, Singleton);\n    // or _.extend({Object literal}, Singleton);\n    getInstance: function() {\n        const This = this;\n        this.instance = this.instance || new This();\n        return this.instance;\n    }\n};\nSC.Singleton = Singleton;\nexport = Singleton;\n"]}