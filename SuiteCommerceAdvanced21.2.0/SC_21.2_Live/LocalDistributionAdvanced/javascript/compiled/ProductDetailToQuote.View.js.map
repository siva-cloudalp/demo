{"version":3,"sources":["ProductDetailToQuote.View.ts"],"names":[],"mappings":"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","file":"ProductDetailToQuote.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductDetailToQuote.View\"/>\n\nimport * as _ from 'underscore';\nimport * as productDetailToQuote_tpl from 'product_detail_to_quote.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { GlobalViewsMessageView } from '../../../Commons/GlobalViews/JavaScript/GlobalViews.Message.View';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\n\nimport ProductListModel = require('../../../Commons/ProductList/JavaScript/ProductList.Model');\nimport ProductListItemModel = require('../../../Commons/ProductList/JavaScript/ProductList.Item.Model');\nimport Session = require('../../../Commons/Session/JavaScript/Session');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class ProductDetailToQuote.View @extend Backbone.View\nconst ProductDetailToQuoteView: any = BackboneView.extend({\n    // @property {Function} template\n    template: productDetailToQuote_tpl,\n\n    // @property {Object} events\n    events: {\n        'click [data-type=\"add-to-quote\"]': 'itemToQuote'\n    },\n\n    // @method initialize\n    // @param {ProductDetailToQuote.View.initialize.Options} options\n    // @return {Void}\n    initialize: function initialize(options) {\n        this.application = options.application;\n\n        this.profile_promise = ProfileModel.getPromise();\n\n        this.state = {\n            feedbackMessage: '',\n            quote_permissions: false,\n            feedbackMessageType: 'warning'\n        };\n\n        this.model.on('change', this.render, this);\n        this.once('afterViewRender', this.attachOnProfileModelEvents, this);\n    },\n\n    // @method attachOnProfileModelEvents When the profile ends loading reload the page to properly show the status of permission the current user has.\n    // @return {Void}\n    attachOnProfileModelEvents: function attachOnProfileModelEvents() {\n        const self = this;\n        this.profile_promise.done(function user_profile_done_loading() {\n            self.profile_model = ProfileModel.getInstance();\n            self.state.quote_permissions =\n                SC.ENVIRONMENT.permissions.transactions.tranEstimate >= 2;\n            self.render();\n        });\n    },\n\n    // @method destroy Overrides default method to detach from model change event\n    // @return {Void}\n    destroy: function destroy() {\n        this.model.off('change');\n        return this._destroy();\n    },\n\n    // @method itemToQuote Add/update an item from the pdp to current user quote\n    // If the quote doesn't exist, we create one\n    // If the quote exist but the item is not present, we put it there\n    // If the quote exist and has the item, we update the quantity\n    // @param {HTMLEvent} e\n    // @return {Void}\n    itemToQuote: function itemToQuote(e) {\n        const self = this;\n\n        e.preventDefault();\n\n        this.state.feedbackMessage = '';\n\n        // if user is logged in but isn't allowed to quote, we warn him.\n        if (this.profile_model.get('isLoggedIn') === 'T' && !this.state.quote_permissions) {\n            const phone = Configuration.get('quote.defaultPhone', '');\n            const email = Configuration.get('quote.defaultEmail', '');\n\n            this.state.feedbackMessageType = 'warning';\n            this.state.feedbackMessage = Utils.translate(\n                \"Sorry, you don't have sufficient permissions to request a quote online. <br/> For immediate assistance <strong>call us at $(0)</strong> or email us to <strong>$(1)</strong>\",\n                phone,\n                email\n            );\n            this.render();\n        } else if (this.model.isSelectionComplete() && this.isQuotable() && this.validateLogin()) {\n            this.application.ProductListModule.Utils.getRequestAQuoteProductList().done(function(\n                product_list_json\n            ) {\n                const product_list_line = ProductListItemModel.createFromProduct(self.model);\n\n                if (!product_list_json.internalid) {\n                    const product_list_model = new ProductListModel(product_list_json);\n\n                    product_list_model.save().done(function(product_list_json) {\n                        self.addItemToQuote(product_list_json, product_list_line, self.model);\n                    });\n                } else {\n                    const product_list_line_json = product_list_line.toJSON();\n                    const item_present_in_list = _.find(product_list_json.items, function(\n                        product_list_line_aux: any\n                    ) {\n                        return (\n                            parseInt(product_list_line_aux.item.internalid) ===\n                                product_list_line_json.item.internalid &&\n                            _.isEqual(product_list_line_json.options, product_list_line_aux.options)\n                        );\n                    });\n\n                    if (item_present_in_list) {\n                        self.updateItemInQuote(item_present_in_list);\n                    } else {\n                        self.addItemToQuote(product_list_json, product_list_line, self.model);\n                    }\n                }\n            });\n        }\n    },\n\n    // @method addItemToQuote Add a new item to the quote collection\n    // @param {Object} product_list (Please note that it is not a Backbone collection, but a JSON object).\n    // @param {ProductList.Item.Model} productListItem\n    // @return {Void}\n    addItemToQuote: function(product_list, product_list_line, product) {\n        let quantity_to_add;\n        const self = this;\n        let show_enforced_quantity_message = false;\n\n        if (product.get('item').get('_matrixParent').internalid) {\n            // As the quote is a line, it will only save the child item, but product list saves the parent item\n            // so we override the item with the parent one\n            product_list_line.set('item', product.get('item').get('_matrixParent'), {\n                silent: true\n            });\n        }\n\n        if (product.get('quantity') < product.get('_minimumQuantity')) {\n            quantity_to_add = product.get('_minimumQuantity');\n            show_enforced_quantity_message = true;\n        } else {\n            quantity_to_add = product.get('quantity');\n        }\n\n        product_list_line.set('productList', {\n            id: product_list.internalid\n        });\n        product_list_line.set('quantity', quantity_to_add);\n\n        product_list_line\n            .save(null, {\n                // Note this is lack of validation is required to not validate the JSON returned from the services as it will lack the Model/Collection structure required\n                // to run the validation. for example the list of options will be an array and not a collection as the event handle that parse them didn't run yet\n                validate: false\n            })\n            .done(function(obj) {\n                self.state.feedbackMessageType = 'success';\n                const product_name = self.model.get('item').get('_name');\n\n                product.set('pl_item_internalid', obj.internalid, { silent: true });\n\n                if (show_enforced_quantity_message) {\n                    self.state.feedbackMessage = Utils.translate(\n                        '$(0) has been added to your <a href=\"#\" data-hashtag=\"#request-a-quote\" data-touchpoint=\"customercenter\" data-trigger=\"go-to-quote\">Quote Request</a><br>Quantity: $(1). (Enforced minimum quantity)',\n                        product_name,\n                        quantity_to_add\n                    );\n                } else {\n                    self.state.feedbackMessage = Utils.translate(\n                        '$(0) has been added to your <a href=\"#\" data-hashtag=\"#request-a-quote\" data-touchpoint=\"customercenter\" data-trigger=\"go-to-quote\">Quote Request</a><br>Quantity: $(1)',\n                        product_name,\n                        quantity_to_add\n                    );\n                }\n\n                self.render();\n            });\n    },\n\n    // @method updateItemInQuote Update the item in the quote collection\n    // @param {Object} item_in_list Object with item list model data. (Please note that it is not a Backbone Model).\n    // @return {Void}\n    updateItemInQuote: function(item_in_list) {\n        const self = this;\n        const quantity_to_add = this.model.get('quantity');\n        const new_quantity = parseInt(item_in_list.quantity, 10) + parseInt(quantity_to_add, 10);\n        const product_list_item_model = new ProductListItemModel({\n            internalid: item_in_list.internalid\n        });\n\n        product_list_item_model.set('quantity', new_quantity);\n        // Set the options otherwise backend will remove them\n        product_list_item_model.set('options', this.model.get('options'));\n\n        product_list_item_model.save().done(function() {\n            const product_name = self.model.get('item').get('_name');\n\n            self.state.feedbackMessageType = 'success';\n            self.state.feedbackMessage = Utils.translate(\n                '$(0) has been added to your <a href=\"#\" data-hashtag=\"#request-a-quote\" data-touchpoint=\"customercenter\" data-trigger=\"go-to-quote\">Quote Request</a><br>Quantity: $(1)',\n                product_name,\n                quantity_to_add\n            );\n\n            self.render();\n        });\n    },\n\n    // @method isQuotable Check if this item is able to be quoted\n    // @return {Boolean} True if item is OK to be quoted\n    isQuotable: function() {\n        return (\n            !(\n                this.model.get('item') &&\n                (this.model.get('item').get('itemtype') === 'GiftCert' ||\n                    this.model.get('item').get('itemtype') === 'Discount')\n            ) && this.application.ProductListModule.Utils.isProductListEnabled()\n        );\n    },\n\n    // @method validateLogin Check if user is logged in. Else he is redirected to do so\n    // @return {Boolean}\n    validateLogin: function validateLogin() {\n        if (this.profile_model.get('isLoggedIn') === 'T') {\n            return true;\n        }\n\n        const { currentTouchpoint } = this.application.getConfig();\n\n        const params = {\n            origin: currentTouchpoint,\n            origin_hash: encodeURIComponent(this.model.generateURL())\n        };\n\n        window.location.href = Utils.addParamsToUrl(Session.get('touchpoints.login'), params);\n\n        return false;\n    },\n\n    childViews: {\n        'GlobalViews.FeedbackMessage': function() {\n            const message = this.state.feedbackMessage;\n            this.state.feedbackMessage = '';\n\n            return new GlobalViewsMessageView({\n                message: message,\n                type: this.state.feedbackMessageType || 'success',\n                closable: true\n            });\n        }\n    },\n\n    // @method getContext\n    // @return {ProductDetailToQuote.View.Context}\n    getContext: function getContext() {\n        // @class ProductDetailToQuote.View.Context\n        return {\n            // @property {Boolean} isQuotable\n            isQuotable: this.isQuotable(),\n            // @property {Boolean} isLoading\n            isLoading: this.profile_promise.state() === 'pending',\n            // @property {Boolean} isReadyForQuote\n            isReadyForQuote: this.model.isSelectionComplete(),\n            // @property {Boolean} showMessage\n            showMessage: !!this.state.feedbackMessage\n        };\n    }\n});\n\nexport = ProductDetailToQuoteView;\n"]}