{"version":3,"sources":["ProductReviews.Form.View.ts"],"names":[],"mappings":"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","file":"ProductReviews.Form.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductReviews.Form.View\"/>\n\nimport * as _ from 'underscore';\nimport * as product_reviews_form from 'product_reviews_form.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { AjaxRequestsKiller } from '../../AjaxRequestsKiller/JavaScript/AjaxRequestsKiller';\nimport { ProfileModel } from '../../Profile/JavaScript/Profile.Model';\n\nimport ProductModel = require('../../Product/JavaScript/Product.Model');\nimport ProductReviewsModel = require('./ProductReviews.Model');\nimport ProductReviewsFormPreviewView = require('./ProductReviews.FormPreview.View');\nimport ProductReviewsFormConfirmationView = require('./ProductReviews.FormConfirmation.View');\nimport FacetsItemCellView = require('../../Facets/JavaScript/Facets.ItemCell.View');\nimport GlobalViewsStarRatingView = require('../../GlobalViews/JavaScript/GlobalViews.StarRating.View');\nimport Backbone = require('../../Utilities/JavaScript/backbone.custom');\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport BackboneCollectionView = require('../../Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport BackboneFormView = require('../../Backbone.FormView/JavaScript/Backbone.FormView');\n\n// @class ProductReviews.Form.View\n// This view is used to render the Product Review form.\n// It handles the rating and submission of the review\n// @extends Backbone.View\nconst ProductReviewsFormView: any = BackboneView.extend({\n    template: product_reviews_form,\n\n    attributes: {\n        id: 'product-review-form',\n        class: 'product-review-form'\n    },\n\n    title: Utils.translate('Write your Review'),\n\n    page_header: Utils.translate('Write your Review'),\n\n    events: {\n        'submit form': 'customSaveForm',\n        'rate [data-toggle=\"rater\"]': 'rate',\n        'click [data-action=\"preview\"]': 'preview'\n    },\n\n    bindings: {\n        '[name=\"text\"]': 'text',\n        '[name=\"title\"]': 'title',\n        '[name=\"writerName\"]': 'writerName'\n    },\n\n    initialize: function(options) {\n        this.routerArguments = options.routerArguments;\n        this.model = options.model ? options.model : new ProductReviewsModel();\n        this.product = options.product ? options.product : new ProductModel();\n        this.tmpRatingPerAtribute = {};\n        this.isPreviewing = options.isPreviewing;\n        this.application = options.application;\n        this.profileModel = ProfileModel.getInstance();\n\n        // we let the view know if the customer is logged in\n        // as this might be required to add a review\n        this.isLoggedIn = this.profileModel.get('isLoggedIn') === 'T';\n\n        this.updateMetaTags();\n\n        // if the user is logged in and this is the first time we're initializing the view we preload the nickname\n        if (this.isLoggedIn && !(this.model.get('writer') && this.model.get('writer').name)) {\n            const writer_name = this.profileModel.get('firstname');\n\n            this.model.set('writerName', writer_name);\n            this.model.set('writer', { name: writer_name });\n        }\n\n        BackboneFormView.add(this);\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        if (this.isPreviewing) {\n            return jQuery.Deferred().resolve();\n        }\n\n        let data;\n\n        if (\n            this.routerArguments.length === 3 &&\n            this.routerArguments[0].toLowerCase() === 'product'\n        ) {\n            data = { id: this.routerArguments[1] };\n        } else {\n            data = { url: this.routerArguments[0] };\n        }\n\n        return this.product.get('item').fetch({\n            data: data,\n            killerId: AjaxRequestsKiller.getKillerId()\n        });\n    },\n\n    initializeDynamicFields: function() {\n        if (_.isEmpty(this.model.get('rating_per_attribute'))) {\n            _.each(\n                this.item.get('_attributesToRateOn'),\n                _.bind(function(attributes) {\n                    this.model.set(attributes, 0);\n                }, this)\n            );\n        }\n    },\n\n    addDynamicRatingFields: function() {\n        const self = this;\n\n        _.each(this.item.get('_attributesToRateOn'), function(dyn_attributes: any) {\n            self.model.validation[dyn_attributes] = function(value) {\n                if (value === 0) {\n                    return Utils.translate('Attribute is required');\n                }\n            };\n        });\n    },\n\n    showContent: function() {\n        const self = this;\n\n        this.item = this.product.get('item');\n\n        if (this.model.get('text')) {\n            // if the model contains text (if comming from a Preview View)\n            // we need to parse all html line breaks into regular ones\n            this.model.set('text', this.model.get('text').replace(/<br>/g, '\\n'));\n        }\n\n        this.initializeDynamicFields();\n        this.addDynamicRatingFields();\n\n        return this.application\n            .getLayout()\n            .showContent(this)\n            .done(function() {\n                // we initialize our custom plugin for rating\n                // (file: Bootstrap.Rate.js)\n                self.$('[data-toggle=\"rater\"]').rater();\n            });\n    },\n\n    // @method rate sets the rating of an attribute in the model\n    // @param {HTMLEvent} e\n    // @param {name:String,value:String} rater\n    rate: function(e, rater) {\n        const attributes_to_rate_on = this.item.get('_attributesToRateOn');\n\n        // if the name is not in attributes_to_rate_on\n        if (~_.indexOf(attributes_to_rate_on, rater.name)) {\n            this.tmpRatingPerAtribute[rater.name] = rater.value;\n            this.model.set(rater.name, rater.value);\n        } else if (rater.name === '__overall__') {\n            this.tmpRating = rater.value;\n\n            // rate touched is a flag to prevent auto computing the overall rating\n            this.rateTouched = true;\n            this.model.set('rating', this.tmpRating);\n        }\n\n        if (!this.rateTouched && Configuration.get('productReviews.computeOverall')) {\n            // auto compute the overall rating\n            const average = Math.round(\n                _.reduce(\n                    _.values(this.tmpRatingPerAtribute),\n                    function(memo, num) {\n                        return memo + num;\n                    },\n                    0\n                ) / attributes_to_rate_on.length\n            );\n\n            this.$('[data-toggle=\"rater\"][data-name=\"__overall__\"]')\n                .data('rater')\n                .setValue(average, true);\n            this.model.set('rating', average);\n        }\n    },\n\n    // @method sanitize method to parse html tags into text @param {String} text\n    sanitize: function(text) {\n        return jQuery\n            .trim(text)\n            .replace(/</g, '&lt;')\n            .replace(/\\>/g, '&gt;');\n    },\n\n    // @method preview When the Preview button is clicked\n    preview: function(e) {\n        e && e.preventDefault();\n\n        this.prepareItem();\n\n        Backbone.Validation.bind(this, { selector: 'id' });\n\n        // Then we show the FormPreview using the same Model\n        // Notice: the Model contains the selected rate for the different attributes\n        // plus the text, title and writer that were set up right above this comment\n        this.$savingForm = jQuery(e.target).closest('form');\n\n        if (this.model.isValid(true)) {\n            new ProductReviewsFormPreviewView({\n                formView: new ProductReviewsFormView({\n                    routerArguments: this.routerArguments,\n                    isPreviewing: true,\n                    product: this.product,\n                    application: this.application,\n                    model: this.model\n                }),\n                product: this.product,\n                application: this.application,\n                model: this.model\n            }).showContent();\n        }\n    },\n\n    // @method prepareItem\n    prepareItem: function() {\n        const sanitized_writer_name = this.sanitize(this.$('#writerName').val());\n\n        // it sets the Model's text, title and writer\n        this.model.set({\n            title: this.sanitize(this.$('#title').val()),\n            rating: this.tmpRating || this.model.get('rating'),\n            rating_per_attribute:\n                this.tmpRatingPerAtribute || this.model.get('rating_per_attribute'),\n            writer: { name: sanitized_writer_name },\n            writerName: sanitized_writer_name,\n            text: this.sanitize(this.$('#text').val())\n        });\n    },\n\n    // @method customSaveForm Dispatch the user 'save' action. IIt will validate the form and then show the review preview\n    customSaveForm: function(e) {\n        e && e.preventDefault();\n\n        this.prepareItem();\n        this.model.set('itemid', this.item.get('internalid'));\n\n        // use id as selector because rating's div doesn't have name.\n        // This selector is used to show validations' errors\n        this.selector = 'id';\n\n        const promise = BackboneFormView.saveForm.apply(this, arguments);\n        const self = this;\n\n        promise &&\n            promise.done(function() {\n                // Once the review is submited, we show the Confirmation View\n                const preview_review = new ProductReviewsFormConfirmationView({\n                    model: self.model,\n                    product: self.product,\n                    application: self.application\n                });\n\n                preview_review.showContent();\n            });\n\n        return promise;\n    },\n\n    // @method updateMetaTags\n    updateMetaTags: function() {\n        const $head = jQuery('head');\n\n        jQuery('<meta/>', {\n            name: 'robots',\n            content: 'noindex, nofollow'\n        }).appendTo($head);\n    },\n\n    childViews: {\n        'Facets.ItemCell': function() {\n            return new FacetsItemCellView({\n                model: this.product.get('item'),\n                itemIsNavigable: false,\n                showStarRating: false\n            });\n        },\n        'Global.StarRatingAttribute': function() {\n            const self = this;\n            const collection = new Backbone.Collection(\n                _.map(this.item.get('_attributesToRateOn'), function(value: any) {\n                    return {\n                        label: value,\n                        name: value,\n                        rating: !_.isUndefined(self.model.get('rating_per_attribute'))\n                            ? self.model.get('rating_per_attribute')[value]\n                            : 0\n                    };\n                })\n            );\n\n            return new BackboneCollectionView({\n                collection: collection,\n                childView: GlobalViewsStarRatingView,\n                childViewOptions: {\n                    showRatingCount: false,\n                    className: 'pegs',\n                    isWritable: true\n                },\n                viewsPerRow: 1\n            });\n        },\n        'Global.StarRating': function() {\n            this.model.set('label', 'Overall');\n            this.model.set('name', '__overall__');\n\n            return new GlobalViewsStarRatingView({\n                showRatingCount: false,\n                isWritable: true,\n                value: this.model.get('_rating') || this.model.get('rating') || 0,\n                ratingCount: this.model.get('_ratingsCount'),\n                label: this.model.get('label'),\n                name: this.model.get('name'),\n                isReviewMode: false\n            });\n        }\n    },\n\n    // @method getContext\n    // @returns {ProductReviews.Form.View.Context}\n    getContext: function() {\n        // @class ProductReviews.Form.View.Context\n        return {\n            // @property {String} header\n            header: this.page_header,\n            // @property {Boolean} isLoginRequiredAndIsNotLoggedIn\n            isLoginRequiredAndIsNotLoggedIn:\n                Configuration.get('productReviews.loginRequired') && !this.isLoggedIn,\n            // @property {String} writer\n            writer: (this.model.get('writer') && this.model.get('writer').name) || '',\n            // @property {String} title\n            title: this.model.get('title') || '',\n            // @property {String} text\n            text: this.model.get('text') || '',\n            // @property {String} itemUrl\n            itemUrl: this.item.get('_url'),\n            // @property {Boolean} showStarRatingAttributes\n            showStarRatingAttributes: !!this.item.get('_attributesToRateOn').length\n        };\n    }\n});\n\nexport = ProductReviewsFormView;\n"]}