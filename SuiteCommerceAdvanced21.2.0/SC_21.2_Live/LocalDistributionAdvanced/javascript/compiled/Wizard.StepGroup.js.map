{"version":3,"sources":["Wizard.StepGroup.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAMF;QAOI,mBAAY,IAAY,EAAE,GAAW;YAWrC,oBAAoB;YACpB,oBAAoB;YACpB,cAAS,GAAG;gBACR,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,UAAS,IAAS;oBACxC,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;gBAC5B,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;YAEF,iBAAiB;YACjB,mBAAmB;YACnB,WAAM,GAAG;gBACL,IAAM,iBAAiB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,UAAS,IAAS;oBAC3D,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC3B,CAAC,CAAC,CAAC;gBAEH,OAAO,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1D,CAAC,CAAC;YAEF,oBAAoB;YACpB,gCAAgC;YAChC,cAAS,GAAG;gBACR,IAAM,MAAM,GAAG,EAAE,CAAC;gBAClB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,UAAS,IAAS;oBACjC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,UAAS,eAAoB;wBACtD;;;;;;;;8BAQM;wBACN,IAAI,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;4BACnC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;yBACtC;6BAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;4BAC1C,MAAM,CAAC,IAAI,CAAC;gCACR,SAAS,EAAE,wBAAwB;gCACnC,YAAY,EAAE,eAAe,CAAC,KAAK;6BACtC,CAAC,CAAC;yBACN;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;gBACH,OAAO,MAAM,CAAC;YAClB,CAAC,CAAC;YAEF,wBAAwB;YACxB,oBAAoB;YACpB,kBAAa,GAAG;gBACZ,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,UAAS,IAAS;oBACxC,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC3B,CAAC,CAAC,CAAC;YACP,CAAC,CAAC;YA9DE,0BAA0B;YAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,8CAA8C;YAC9C,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAErB,2DAA2D;YAC3D,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QACpB,CAAC;QAuDL,gBAAC;IAAD,CAvES,AAuER,IAAC;;AAEF,sBAAsB;AACtB,+BAA+B;AAC/B,kCAAkC","file":"Wizard.StepGroup.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Wizard.StepGroup\"/>\n\nimport * as _ from 'underscore';\n\nexport = class StepGroup {\n    name: string;\n\n    url: string;\n\n    steps: any[];\n\n    constructor(name: string, url: string) {\n        // @property {String} name\n        this.name = name;\n\n        // Don't use this property, use getURL instead\n        this.url = '/' + url;\n\n        // @property {Array<Wizard.Step>} steps Collection of steps\n        this.steps = [];\n    }\n\n    // @method hasErrors\n    // @return {Boolean}\n    hasErrors = function() {\n        return _.some(this.steps, function(step: any) {\n            return step.hasErrors();\n        });\n    };\n\n    // @method getURL\n    // @return {String}\n    getURL = function() {\n        const first_active_step = _.find(this.steps, function(step: any) {\n            return step.showStep();\n        });\n\n        return first_active_step ? first_active_step.url : '';\n    };\n\n    // @method getErrors\n    // @return {Array<Wizard.Error>}\n    getErrors = function() {\n        const errors = [];\n        _.each(this.steps, function(step: any) {\n            _.each(step.moduleInstances, function(module_instance: any) {\n                /* if (_.isArray(module_instance.error))\n                {\n                    //This case happens when the module is a proxy that group all its submodule errors\n                    _.each(module_instance.error, function (an_error)\n                    {\n                        errors.push(an_error);\n                    });\n                }\n                else*/\n                if (_.isObject(module_instance.error)) {\n                    errors.push(module_instance.error);\n                } else if (_.isString(module_instance.error)) {\n                    errors.push({\n                        errorCode: 'ERR_WS_UNHANDLED_ERROR',\n                        errorMessage: module_instance.error\n                    });\n                }\n            });\n        });\n        return errors;\n    };\n\n    // @method showStepGroup\n    // @return {Boolean}\n    showStepGroup = function() {\n        return _.some(this.steps, function(step: any) {\n            return step.showStep();\n        });\n    };\n};\n\n// @class Wizard.Error\n// @property {String} errorCode\n// @property {String} errorMessage\n"]}