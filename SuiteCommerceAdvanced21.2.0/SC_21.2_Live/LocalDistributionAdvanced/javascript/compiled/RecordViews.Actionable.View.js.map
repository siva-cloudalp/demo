{"version":3,"sources":["RecordViews.Actionable.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAQF,8DAA8D;IAC9D,IAAM,yBAAyB,GAAQ,kCAAe,CAAC,MAAM,CAAC;QAC1D,gCAAgC;QAChC,QAAQ,EAAE,0BAA0B;QAEpC,qBAAqB;QACrB,0DAA0D;QAC1D,iBAAiB;QACjB,UAAU,EAAE;YACR,kCAAe,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAChE,CAAC;QAED,0GAA0G;QAC1G,UAAU,EAAE;YACR,aAAa,EAAE;gBACX,IAAM,cAAc,GAAG,CAAC,CAAC,MAAM,CAC3B;oBACI,KAAK,EAAE,IAAI,CAAC,KAAK;iBACpB,EACD,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,EAAE,CACnC,CAAC;gBACF,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;gBAErC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;YACpC,CAAC;SACJ;QAED,mEAAmE;QACnE,UAAU,EAAE;YACR,6CAA6C;YAC7C,OAAO;gBACH,iEAAiE;gBACjE,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,wBAAwB;gBACxB,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;gBACjB,gCAAgC;gBAChC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,gBAAgB;gBAC5D,kCAAkC;gBAClC,WAAW,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBACnD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC;oBAC/B,CAAC,CAAC,IAAI;gBACV,gCAAgC;gBAChC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC;gBACxC,2BAA2B;gBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;gBAE9B,iCAAiC;gBACjC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC;gBAE1C,qDAAqD;gBACrD,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE;gBAEhC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC;aAC3C,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,yBAAyB,CAAC;;AAEnC,gDAAgD;AAChD,iEAAiE;AAEjE,8EAA8E;AAC9E,wBAAwB;AACxB,uEAAuE;AACvE,6DAA6D;AAC7D,gCAAgC;AAChC,iCAAiC;AACjC,2BAA2B;AAC3B,qDAAqD","file":"RecordViews.Actionable.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"RecordViews.Actionable.View\"/>\n\nimport * as _ from 'underscore';\nimport * as recordviews_actionable_tpl from 'recordviews_actionable.tpl';\nimport { RecordViewsView } from './RecordViews.View';\n\n// @class RecordViews.Actionable.View @extend RecordViews.View\nconst RecordViewsActionableView: any = RecordViewsView.extend({\n    // @property {Function} template\n    template: recordviews_actionable_tpl,\n\n    // @method initialize\n    // @param {RecordViews.Actionable.View.Initialize} options\n    // @return {Void}\n    initialize: function() {\n        RecordViewsView.prototype.initialize.apply(this, arguments);\n    },\n\n    // @property {Object} childViews Override the base property by adding a default Action.View composite View\n    childViews: {\n        'Action.View': function() {\n            const action_options = _.extend(\n                {\n                    model: this.model\n                },\n                this.options.actionOptions || {}\n            );\n            const view = this.options.actionView;\n\n            return new view(action_options);\n        }\n    },\n\n    // @method getContext @return {RecordViews.Actionable.View.Context}\n    getContext: function() {\n        // @class RecordViews.Actionable.View.Context\n        return {\n            // @property {RecordViews.Actionable.View.Initialize.Model} model\n            model: this.model,\n            // @property {String} id\n            id: this.model.id,\n            // @property {String} touchpoint\n            touchpoint: this.model.get('touchpoint') || 'customercenter',\n            // @property {Boolean} isNavigable\n            isNavigable: _.isBoolean(this.model.get('isNavigable'))\n                ? this.model.get('isNavigable')\n                : true,\n            // @property {String} detailsURL\n            detailsURL: this.model.get('detailsURL'),\n            // @property {String} title\n            title: this.model.get('title'),\n\n            // @property {String} actionTitle\n            actionTitle: this.model.get('actionTitle'),\n\n            // @property {Array<RecordViews.View.Column>} columns\n            columns: this.normalizeColumns(),\n\n            recordType: this.model.get('recordType')\n        };\n    }\n});\n\nexport = RecordViewsActionableView;\n\n// @class RecordViews.Actionable.View.Initialize\n// @property {RecordViews.Actionable.View.Initialize.Model} model\n\n// @class RecordViews.Actionable.View.Initialize.Model @extends Backbone.Model\n// @property {String} id\n// @property {String?} touchpoint The default value is 'customercenter'\n// @property {Boolean?} isNavigable The default value is true\n// @property {String} detailsURL\n// @property {String} actionTitle\n// @property {String} title\n// @property {Array<RecordViews.View.Column>} columns\n"]}