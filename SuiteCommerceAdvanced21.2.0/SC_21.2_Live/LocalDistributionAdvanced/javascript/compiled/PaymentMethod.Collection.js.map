{"version":3,"sources":["PaymentMethod.Collection.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;IAUW,QAAA,uBAAuB,GAAQ,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC;QACnE,KAAK,EAAE,KAAK;QAEZ,GAAG,EAAE,mCAAmC;QAExC,UAAU,EAAE,UAAS,KAAK;YACtB,OAAO,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,WAAW;QACtD,CAAC;QAED,yHAAyH;QACzH,yBAAyB,EAAE;YACvB,IAAI,iBAAiB,CAAC;YAEtB,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE;gBACvB,iBAAiB,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEjC,IAAM,kBAAkB,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC;gBAChD,kBAAkB,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBAE3C,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aACrD;YAED,OAAO,iBAAiB,CAAC;QAC7B,CAAC;KACJ,CAAC,CAAC","file":"PaymentMethod.Collection.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PaymentMethod.Collection\"/>\n\nimport Model = require('../../../Commons/PaymentInstrument/JavaScript/PaymentInstrument.CreditCard.Model');\n\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\n// @class PaymentMethod.Collection Credit cards collection @extends Backbone.Collection\nexport type PaymentMethodCollection = any;\nexport const PaymentMethodCollection: any = Backbone.Collection.extend({\n    model: Model,\n\n    url: 'services/PaymentMethod.Service.ss',\n\n    comparator: function(model) {\n        return model.get('isdefault') !== 'T'; // ? 0 : 1;\n    },\n\n    // @method getCollectionForRendering Get the payment methods collection including new payment method button for rendering\n    getCollectionForRendering: function() {\n        let cloned_collection;\n\n        if (this && !!this.length) {\n            cloned_collection = this.clone();\n\n            const new_payment_method = this.first().clone();\n            new_payment_method.set('internalid', '-1');\n\n            cloned_collection.models.push(new_payment_method);\n        }\n\n        return cloned_collection;\n    }\n});\n"]}