{"version":3,"sources":["Profile.Information.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAiBF,yDAAyD;IACzD,IAAM,sBAAsB,GAAQ,YAAY,CAAC,MAAM,CAAC;QACpD,QAAQ,EAAE,uBAAuB;QACjC,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,qBAAqB,CAAC;QACnD,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,qBAAqB,CAAC;QAC7C,UAAU,EAAE;YACR,EAAE,EAAE,aAAa;YACjB,KAAK,EAAE,wBAAwB;SAClC;QACD,MAAM,EAAE;YACJ,aAAa,EAAE,MAAM;YACrB,iCAAiC,EAAE,aAAa;YAChD,oCAAoC,EAAE,aAAa;SACtD;QAED,QAAQ,EAAE;YACN,oBAAoB,EAAE,WAAW;YACjC,mBAAmB,EAAE,UAAU;YAC/B,sBAAsB,EAAE,aAAa;YACrC,gBAAgB,EAAE,OAAO;SAC5B;QAED,IAAI,EAAE,UAAS,CAAC;YACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC;QAED,UAAU,EAAE,UAAS,OAAO;YACxB,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;YACvC,IAAI,CAAC,KAAK,GAAG,4BAAY,CAAC,WAAW,EAAE,CAAC;YACxC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAClD,CAAC;QAED,WAAW,EAAE,UAAS,CAAC;YACnB,IAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAM,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACvD,CAAC;QAED,WAAW,EAAE;YACT,IAAM,KAAK,GAAG,IAAI,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAEjE,IAAM,IAAI,GAAG,IAAI,sBAAsB,CAAC;gBACpC,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,KAAK,EAAE,KAAK;aACf,CAAC,CAAC;YAEH,IAAM,IAAI,GAAG,IAAI,CAAC;YAElB,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE;gBACb,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,iCAAiC,CAAC,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAE3B,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACnD,CAAC;QAED,WAAW,EAAE;YACT,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAM,qBAAmB,GAAG,IAAI,iDAAsB,CAAC;oBACnD,OAAO,EAAE,KAAK,CAAC,SAAS,CAAC,+BAA+B,CAAC;oBACzD,IAAI,EAAE,SAAS;oBACf,QAAQ,EAAE,IAAI;iBACjB,CAAC,CAAC;gBACH,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC;oBACpB,IAAI,CAAC,CAAC,CAAC,iCAAiC,CAAC,CAAC,MAAM,CAC5C,qBAAmB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAC1C,CAAC;gBACN,CAAC,CAAC,CAAC;aACN;QACL,CAAC;QAED,0BAA0B;QAC1B,eAAe,EAAE;YACb,OAAO,oBAAoB,CAAC;QAChC,CAAC;QACD,6BAA6B;QAC7B,kBAAkB,EAAE;YAChB,OAAO;gBACH,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,IAAI,EAAE,qBAAqB;aAC9B,CAAC;QACN,CAAC;QACD,8DAA8D;QAC9D,UAAU,EAAE;YACR,0CAA0C;YAC1C,OAAO;gBACH,gCAAgC;gBAChC,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,mCAAmC;gBACnC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,SAAS;gBAClD,iCAAiC;gBACjC,WAAW,EAAE,6BAAa,CAAC,GAAG,CAAC,0BAA0B,CAAC;gBAC1D,mDAAmD;gBACnD,4BAA4B,EACxB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,SAAS;oBACpC,6BAAa,CAAC,GAAG,CAAC,4CAA4C,CAAC,KAAK,GAAG;gBAC3E,6CAA6C;gBAC7C,sBAAsB,EAAE,KAAK,CAAC,iBAAiB,CAC3C,IAAI,EACJ,uCAAuC,EACvC,KAAK,CACR;gBACD,2CAA2C;gBAC3C,oBAAoB,EAAE,KAAK,CAAC,iBAAiB,CACzC,IAAI,EACJ,iCAAiC,EACjC,KAAK,CACR;gBACD,+BAA+B;gBAC/B,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,EAAE;gBAC5C,8BAA8B;gBAC9B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE;gBAC1C,iCAAiC;gBACjC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,EAAE;gBAChD,2BAA2B;gBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE;gBACpC,2BAA2B;gBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE;gBACpC,wCAAwC;gBACxC,iBAAiB,EAAE,6BAAa,CAAC,GAAG,CAAC,uBAAuB,CAAC,KAAK,UAAU;aAC/E,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,sBAAsB,CAAC","file":"Profile.Information.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Profile.Information.View\"/>\n\nimport * as profile_information_tpl from 'profile_information.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nimport { GlobalViewsMessageView } from '../../GlobalViews/JavaScript/GlobalViews.Message.View';\nimport { ProfileModel } from './Profile.Model';\n\nimport ProfileChangeEmailModel = require('./Profile.ChangeEmailAddress.Model');\nimport ProfileChangeEmailView = require('./Profile.ChangeEmailAddress.View');\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport BackboneFormView = require('../../Backbone.FormView/JavaScript/Backbone.FormView');\n\n// @class Profile.Information.View @extends Backbone.View\nconst ProfileInformationView: any = BackboneView.extend({\n    template: profile_information_tpl,\n    page_header: Utils.translate('Profile Information'),\n    title: Utils.translate('Profile Information'),\n    attributes: {\n        id: 'ProfileInfo',\n        class: 'ProfileInformationView'\n    },\n    events: {\n        'submit form': 'save',\n        'change input[data-type=\"phone\"]': 'formatPhone',\n        'click [data-action=\"change-email\"]': 'changeEmail'\n    },\n\n    bindings: {\n        '[name=\"firstname\"]': 'firstname',\n        '[name=\"lastname\"]': 'lastname',\n        '[name=\"companyname\"]': 'companyname',\n        '[name=\"phone\"]': 'phone'\n    },\n\n    save: function(e) {\n        return this.saveForm(e, this.model);\n    },\n\n    initialize: function(options) {\n        this.application = options.application;\n        this.model = ProfileModel.getInstance();\n        BackboneFormView.add(this);\n        this.useLayoutError = true;\n        this.model.on('save', this.showSuccess, this);\n    },\n\n    formatPhone: function(e) {\n        const $target = jQuery(e.target);\n        $target.val(Utils.formatPhone(<any>$target.val()));\n    },\n\n    changeEmail: function() {\n        const model = new ProfileChangeEmailModel(this.model.attributes);\n\n        const view = new ProfileChangeEmailView({\n            application: this.application,\n            model: model\n        });\n\n        const self = this;\n\n        model.on('save', function() {\n            view.showSuccess(self.$('[data-type=\"alert-placeholder\"]'));\n        });\n\n        view.useLayoutError = true;\n\n        this.application.getLayout().showInModal(view);\n    },\n\n    showSuccess: function() {\n        if (this.$savingForm) {\n            const global_view_message = new GlobalViewsMessageView({\n                message: Utils.translate('Profile successfully updated!'),\n                type: 'success',\n                closable: true\n            });\n            this.showContent().then(function() {\n                this.$('[data-type=\"alert-placeholder\"]').append(\n                    global_view_message.render().$el.html()\n                );\n            });\n        }\n    },\n\n    // @method getSelectedMenu\n    getSelectedMenu: function() {\n        return 'profileinformation';\n    },\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return {\n            text: this.title,\n            href: '/profileinformation'\n        };\n    },\n    // @method getContext @return Profile.Information.View.Context\n    getContext: function() {\n        // @class Profile.Information.View.Context\n        return {\n            // @property {String} pageHeader\n            pageHeader: this.page_header,\n            // @property {Boolean} isNotCompany\n            isNotCompany: this.model.get('type') !== 'COMPANY',\n            // @property {String} phoneFormat\n            phoneFormat: Configuration.get('siteSettings.phoneformat'),\n            // @property {Boolean} isCompanyAndShowCompanyField\n            isCompanyAndShowCompanyField:\n                this.model.get('type') === 'COMPANY' ||\n                Configuration.get('siteSettings.registration.showcompanyfield') === 'T',\n            // @property {Boolean} isCompanyFieldRequired\n            isCompanyFieldRequired: Utils.getPathFromObject(\n                this,\n                'model.validation.companyname.required',\n                false\n            ),\n            // @property {Boolean} isPhoneFieldRequired\n            isPhoneFieldRequired: Utils.getPathFromObject(\n                this,\n                'model.validation.phone.required',\n                false\n            ),\n            // @property {String} firstName\n            firstName: this.model.get('firstname') || '',\n            // @property {String} lastName\n            lastName: this.model.get('lastname') || '',\n            // @property {String} companyName\n            companyName: this.model.get('companyname') || '',\n            // @property {String} email\n            email: this.model.get('email') || '',\n            // @property {String} phone\n            phone: this.model.get('phone') || '',\n            // @property {Boolean} showBackToAccount\n            showBackToAccount: Configuration.get('siteSettings.sitetype') === 'STANDARD'\n        };\n    }\n});\n\nexport = ProfileInformationView;\n"]}