{"version":3,"sources":["Validator.ts"],"names":[],"mappings":"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","file":"Validator.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Validator\"/>\n// @Typescript-full\n\nimport * as _ from 'underscore';\nimport { PropertiesName } from './Types';\n\nexport type ValidationErrors<TEntity> = Partial<{ [key in PropertiesName<TEntity>]: string }>;\nexport type AttributeValidationRules<TEntity> = Partial<\n    { [key in PropertiesName<TEntity>]: ValidationRule<key, TEntity[key]>[] }\n>;\n\ntype ValidationRule<TAttr, TVal> = (val: TVal, attr: TAttr) => string;\n\nexport class Validator<TEntity> {\n    private readonly validationRules: AttributeValidationRules<TEntity>;\n    public constructor(validationRules: AttributeValidationRules<TEntity>) {\n        this.validationRules = validationRules;\n    }\n    public validate(\n        attributes: Partial<{ [key in PropertiesName<TEntity>]: TEntity[key] }>\n    ): ValidationErrors<TEntity> | null {\n        const validationErrors: ValidationErrors<TEntity> = {};\n        Object.keys(attributes).forEach(<E extends PropertiesName<TEntity>>(attr: string) => {\n            const error = this.validateAttribute(attributes[attr], <E>attr);\n            if (error) {\n                validationErrors[attr] = error;\n            }\n        });\n        return Object.keys(validationErrors).length ? validationErrors : null;\n    }\n    public validateAttribute<E extends PropertiesName<TEntity>>(val: TEntity[E], attr: E): string {\n        const validationRules = this.validationRules[attr];\n        let error = '';\n        let i = 0;\n        if (validationRules) {\n            // Report the first error found\n            while (i < validationRules.length && !error) {\n                error = validationRules[i](val, attr);\n                i++;\n            }\n        }\n        return error;\n    }\n}\n\nfunction hasValue(value): boolean {\n    return !(\n        _.isNull(value) ||\n        _.isUndefined(value) ||\n        (_.isString(value) && value.trim() === '') ||\n        (_.isArray(value) && _.isEmpty(value))\n    );\n}\n// Keeping regex out of functions body to improve performance\nconst commonPatterns = {\n    // Same as email but is more restrictive and matches the same emails as the Netsuite backend UI\n    // Source: https://system.netsuite.com/javascript/NLUtil.jsp__NS_VER=2014.1.0&minver=154&locale=en_US.nlqs\n    //        (Search for NLValidationUtil_SIMPLE_EMAIL_PATTERN)\n    email: /^[-a-z0-9!#$%&'*+/=?^_`{|}~]+(?:\\.[-a-z0-9!#$%&'*+/=?^_`{|}~]+)*@(?:[a-z0-9]+(?:-+[a-z0-9]+)*\\.)+(?:xn--[a-z0-9]+|[a-z]{2,16})$/i,\n\n    netsuiteEmail: /^[-a-z0-9!#$%&'*+/=?^_`{|}~]+(?:\\.[-a-z0-9!#$%&'*+/=?^_`{|}~]+)*@(?:[a-z0-9]+(?:-+[a-z0-9]+)*\\.)+(?:xn--[a-z0-9]+|[a-z]{2,16})$/i,\n\n    // This validation is less restrictive than standard\n    // and matches with the used in Netsuite backend\n    netsuiteUrl: /^(https|http|ftp|file):\\/\\//,\n\n    netsuiteFloat: /^-{0,1}([0-9])+(\\.{1}[0-9]+)?$/,\n\n    netsuiteInteger: /^-{0,1}([0-9])+$/,\n    // Allow numbers bettwen 000.00 and 000100.00 ending with optional %\n    netsuitePercent: /^0*((([0-9]{1,2})(\\.[0-9]{1,2})?%?$)|(100(\\.0{1,2})?%?$))/,\n\n    // Allow any character 7 or more times\n    // (this is the validation that the netsuite backend form does on phone type fields)\n    netsuitePhone: /^.{7,}$/,\n\n    // Matches any digit(s) (i.e. 0-9)\n    digits: /^\\d+$/,\n\n    // Matches any number (e.g. 100.000)\n    number: /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)(?:\\.\\d+)?$/,\n\n    // Mathes any valid url (e.g. http://www.xample.com)\n    url: /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!$&'()*+,;=]|:|@)|\\/|\\?)*)?$/i\n};\n\nfunction pattern(value: any, regExp: RegExp, msg: string): string {\n    return !hasValue(value) || !value.toString().match(regExp) ? msg : '';\n}\n\nfunction required(val: any, msg: string): string {\n    return !hasValue(val) ? msg : '';\n}\n\nfunction email(value: any, msg: string): string {\n    return pattern(value, commonPatterns.email, msg);\n}\n\nfunction netsuiteEmail(value: any, msg: string): string {\n    return pattern(value, commonPatterns.netsuiteEmail, msg);\n}\n\nfunction netsuiteUrl(value: any, msg: string): string {\n    return pattern(value, commonPatterns.netsuiteUrl, msg);\n}\n\nfunction netsuiteFloat(value: any, msg: string): string {\n    return pattern(value, commonPatterns.netsuiteFloat, msg);\n}\n\nfunction netsuiteInteger(value: any, msg: string): string {\n    return pattern(value, commonPatterns.netsuiteInteger, msg);\n}\n\nfunction netsuitePercent(value: any, msg: string): string {\n    return pattern(value, commonPatterns.netsuitePercent, msg);\n}\n\nfunction netsuitePhone(value: any, msg: string): string {\n    return pattern(value, commonPatterns.netsuitePhone, msg);\n}\n\nfunction digits(value: any, msg: string): string {\n    return pattern(value, commonPatterns.digits, msg);\n}\n\nfunction number(value: any, msg: string): string {\n    return pattern(value, commonPatterns.number, msg);\n}\n\nfunction url(value: any, msg: string): string {\n    return pattern(value, commonPatterns.url, msg);\n}\n\nexport const ValidationUtils = {\n    required,\n    pattern,\n    email,\n    netsuiteEmail,\n    netsuiteUrl,\n    netsuiteFloat,\n    netsuiteInteger,\n    netsuitePercent,\n    netsuitePhone,\n    digits,\n    number,\n    url\n};\n"]}