{"version":3,"sources":["PaymentInstrument.CreditCard.Model.ts"],"names":[],"mappings":"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","file":"PaymentInstrument.CreditCard.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"PaymentInstrument.CreditCard.Model\"/>\n/// <reference path=\"../../Utilities/JavaScript/GlobalDeclarations.d.ts\" />\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport { PaymentMethodModel } from '../../../Advanced/PaymentMethod/JavaScript/PaymentMethod.Model';\n\n// @method validate that the expiration date is bigger than today\nfunction validateExpirationDate(value, name, data) {\n    if (\n        data &&\n        (!data.internalid || (data.internalid && !SC.ENVIRONMENT.paymentInstrumentEnabled))\n    ) {\n        const current = new Date();\n        const selected_date = new Date(data.expyear, data.expmonth - 1).getTime();\n        if (\n            !value ||\n            _.isNaN(selected_date) ||\n            new Date(current.getFullYear(), current.getMonth()).getTime() > selected_date\n        ) {\n            return Utils.translate('Please select a date in the future');\n        }\n    }\n}\n\n// @class PaymentInstrument.CreditCard.Model responsible\n// of implement the REST model of a credit card and of validating\n// the credit card properties @extends Backbone.Model\nconst PaymentInstrumentCreditCardModel: any = PaymentMethodModel.extend({\n    // @property validation. Backbone.Validation attribute used for validating the form before submit.\n    validation: {\n        ccname: {\n            fn: function(ccname) {\n                if (!ccname || !String(ccname).trim()) {\n                    return Utils.translate('Name is required');\n                }\n                if (ccname.length > 26) {\n                    return Utils.translate('Name too long');\n                }\n            }\n        },\n        ccnumber: {\n            fn: function(cc_number, attr, form) {\n                // credit card number validation\n                // It validates that the number pass the Luhn test and also that it has the right starting digits that identify the card issuer\n                if (!cc_number) {\n                    return Utils.translate('Card Number is required');\n                }\n\n                if (_.isUndefined(form.internalid)) {\n                    cc_number = cc_number.replace(/\\s/g, '');\n\n                    // check Luhn Algorithm\n                    const card_number_is_valid =\n                        _(cc_number.split('').reverse()).reduce(function(a, n, index) {\n                            return (\n                                a +\n                                _((+n * [1, 2][index % 2]).toString().split('')).reduce(function(\n                                    b,\n                                    o\n                                ) {\n                                    return b + +o;\n                                },\n                                0)\n                            );\n                        }, 0) %\n                            10 ===\n                        0;\n\n                    if (!card_number_is_valid) {\n                        // we throw an error if the number fails the regex or the Luhn algorithm\n                        return Utils.translate('Credit Card Number is invalid');\n                    }\n\n                    if (!(cc_number.length >= 13 && cc_number.length <= 20)) {\n                        return Utils.translate(\n                            'Credit card numbers must contain between 13 and 20 digits'\n                        );\n                    }\n                }\n            }\n        },\n        paymentmethod: {\n            fn: function(paymentmethod, attr, form) {\n                if (_.isUndefined(form.internalid) && paymentmethod === '0') {\n                    return Utils.translate('Please Select a Credit Card Type');\n                }\n            }\n        },\n        expyear: { fn: validateExpirationDate },\n        expmonth: { fn: validateExpirationDate },\n        ccsecuritycode: {\n            fn: function(cc_security_code) {\n                if (\n                    SC.ENVIRONMENT.siteSettings.checkout.requireccsecuritycode === 'T' &&\n                    (this.hasSecurityCode || this.get('hasSecurityCode'))\n                ) {\n                    const errorMessage = Utils.validateSecurityCode(cc_security_code);\n                    if (errorMessage) {\n                        return errorMessage;\n                    }\n                }\n            }\n        }\n    }\n});\n\nexport = PaymentInstrumentCreditCardModel;\n"]}