{"version":3,"sources":["Subscriptions.Line.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;;;;;;;;;;;;;;;;IAsCF;QAA0C,wCAAiC;QAavE,8BAAmB,OAAoC;YAAvD,YACI,iBAAO,SAIV;YAjBM,YAAM,GAAG;gBACZ,8BAA8B,EAAE,SAAS;aAC5C,CAAC;YAEQ,cAAQ,GAAG,sBAAsB,CAAC;YAuBlC,gBAAU,GAAG;gBACnB,cAAc,EAAE;oBACZ,OAAO,IAAI,qDAAwB,CAAC,EAAE,KAAK,EAAE,KAAI,CAAC,KAAK,EAAE,CAAC,CAAC;gBAC/D,CAAC;gBACD,UAAU,EAAE;oBACR,OAAO,IAAI,mDAAuB,CAAC,EAAE,MAAM,EAAE,KAAI,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;gBAChF,CAAC;aACJ,CAAC;YApBE,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,KAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;YACzC,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;;QAC/B,CAAC;QAEM,sCAAO,GAAd;YACI,IAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC5D,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC7C,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,gCAA8B,eAAe,SAAI,OAAS,EAAE;gBAClF,OAAO,EAAE,IAAI;aAChB,CAAC,CAAC;QACP,CAAC;QAWM,yCAAU,GAAjB;YACI,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpC,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtE,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACtE,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAC/C,IAAM,WAAW,GACb,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,yBAAyB,CAAC;gBACzC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,wBAAwB,CAAC;YAEvE,OAAO;gBACH,oCAAoC;gBACpC,aAAa,EAAE,KAAK,CAAC,aAAa,EAAE;gBACpC,mCAAmC;gBACnC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,YAAY;gBAC1D,yBAAyB;gBACzB,IAAI,EAAE,IAAI;gBACV,+BAA+B;gBAC/B,QAAQ,EAAE,QAAQ;gBAClB,iCAAiC;gBACjC,SAAS,EAAE,UAAU;gBACrB,4CAA4C;gBAC5C,sBAAsB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC;gBACpD,0BAA0B;gBAC1B,IAAI,EAAE,WAAW;gBACjB,wCAAwC;gBACxC,iBAAiB,EAAE,WAAW,KAAK,OAAO;gBAC1C,yCAAyC;gBACzC,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,UAAU;gBAChE,wCAAwC;gBACxC,iBAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE;aACpD,CAAC;QACN,CAAC;QACL,2BAAC;IAAD,CArEA,AAqEC,CArEyC,WAAI,GAqE7C;IArEY,oDAAoB","file":"Subscriptions.Line.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Subscriptions.Line.View\"/>\n// @Typescript-full\n\nimport * as subscriptions_line_tpl from 'subscriptions_line.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\nimport * as Backbone from '../../../Commons/Core/JavaScript/backbone/BackboneExtras';\n\nimport { View } from '../../../Commons/Core/JavaScript/View';\n\nimport { SubscriptionsStatusView } from './Subscriptions.Status.View';\n\nimport { SubscriptionsModel } from './Subscriptions.Model';\n\nimport { SubscriptionsLineModel } from './Subscriptions.Line.Model';\n\nimport { SubscriptionsPricingView } from './Subscriptions.Pricing.View';\n\ninterface SubscriptionLineViewContext {\n    isProcessing: boolean,\n    name: string;\n    quantity: boolean;\n    startDate: string;\n    subscriptionLineNumber: string;\n    type: number;\n    isChargeTypeUsage: boolean;\n    isLineTypeOptional: boolean;\n    isPhoneDevice: boolean;\n    hasPriceIntervals: boolean;\n}\n\ninterface SubscriptionLineViewOptions {\n    subscription: SubscriptionsModel;\n    model: SubscriptionsLineModel;\n}\n\nexport class SubscriptionLineView extends View<SubscriptionLineViewContext> {\n    public events = {\n        'click [data-action=\"change\"]': 'goToPDP'\n    };\n\n    protected template = subscriptions_line_tpl;\n\n    private readonly options: SubscriptionLineViewOptions;\n\n    private readonly subscription: SubscriptionsModel;\n\n    private readonly model: SubscriptionsLineModel;\n\n    public constructor(options: SubscriptionLineViewOptions) {\n        super();\n        this.options = options;\n        this.subscription = options.subscription;\n        this.model = options.model;\n    }\n\n    public goToPDP(): void {\n        const subscription_id = this.subscription.get('internalid');\n        const line_id = this.model.get('internalId');\n        Backbone.history.navigate(`subscription-addon-details/${subscription_id}/${line_id}`, {\n            trigger: true\n        });\n    }\n\n    protected childViews = {\n        'Pricing.View': (): SubscriptionsPricingView => {\n            return new SubscriptionsPricingView({ model: this.model });\n        },\n        StatusView: (): SubscriptionsStatusView => {\n            return new SubscriptionsStatusView({ status: this.model.getStatusLabel() });\n        }\n    };\n\n    public getContext(): SubscriptionLineViewContext {\n        const item = this.model.get('item');\n        const name = item.get('storeDisplayName') || item.get('itemId') || '';\n        const quantity = this.model.get('quantity') || Utils.translate('N/A');\n        const start_date = this.model.get('startDate');\n        const charge_type =\n            this.model.get('subscriptionLineTypeObj') &&\n            this.model.get('subscriptionLineTypeObj').subscriptionlinetypeText;\n\n        return {\n            // @property {Boolean} isPhoneDevice\n            isPhoneDevice: Utils.isPhoneDevice(),\n            // @property {Boolean} isProcessing\n            isProcessing: this.model.getStatusLabel() === 'PROCESSING',\n            // @propery {String} name\n            name: name,\n            // @property {Boolean} quantity\n            quantity: quantity,\n            // @property {Boolean} start_date\n            startDate: start_date,\n            // @property {String} subscriptionLineNumber\n            subscriptionLineNumber: this.model.get('lineNumber'),\n            // @property {number} type\n            type: charge_type,\n            // @property {Boolean} isChargeTypeUsage\n            isChargeTypeUsage: charge_type === 'Usage',\n            // @property {Boolean} isLineTypeOptional\n            isLineTypeOptional: this.model.get('catalogType') === 'OPTIONAL',\n            // @property {Boolean} hasPriceIntervals\n            hasPriceIntervals: this.model.hasPriceIntervals()\n        };\n    }\n}\n"]}