{"version":3,"sources":["Content.EnhancedViews.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAYF,wFAAwF;IACxF,+CAA+C;IAC/C,IAAM,aAAa,GAAQ;QACvB,oBAAoB,EAAE,EAAE;KAC3B,CAAC;IAEF,CAAC,CAAC,MAAM,CAAC,aAAa,EAAE;QACpB,+GAA+G;QAC/G,wDAAwD;QACxD,oBAAoB,EAAE,UAAS,IAAI,EAAE,IAAI;YACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;YAE5C,IAAI,IAAI,EAAE;gBACN,oFAAoF;gBACpF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAClD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC;gBAC9D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC;gBAC/D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAChF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC;gBACtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC;gBACpE,gFAAgF;gBAChF,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;aAC3E;YAED,2EAA2E;YAC3E,2BAA2B;YAC3B,IAAM,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;YAC5D,IAAM,YAAY,GACd,WAAW,IAAI,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;YAE5F,IAAI,YAAY,EAAE;gBACd,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;aACnF;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,aAAa,EAAE;YACX,OAAO,MAAM,CAAC,MAAM,CAAC;iBAChB,GAAG,CAAC,aAAa,CAAC;iBAClB,MAAM,CAAC,UAAU,CAAC;iBAClB,GAAG,EAAE;iBACL,GAAG,CAAC,6BAA6B,CAAC;iBAClC,MAAM,CAAC,yBAAyB,CAAC;iBACjC,GAAG,EAAE;iBACL,GAAG,CAAC,6BAA6B,CAAC;iBAClC,MAAM,CAAC,yBAAyB,CAAC;iBACjC,GAAG,EAAE;iBACL,GAAG,CAAC,gCAAgC,CAAC;iBACrC,MAAM,CAAC,4BAA4B,CAAC;iBACpC,GAAG,EAAE,CAAC;QACf,CAAC;QAED,WAAW,EAAE,UAAS,IAAI;YACtB,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAE9B,IAAI,KAAK,EAAE;gBACP,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;aAC1B;YACD,6DAA6D;YAC7D,6DAA6D;YAC7D,yBAAyB;YACzB,IAAI,EAAE,CAAC,WAAW,CAAC,aAAa,KAAK,QAAQ,EAAE;gBAC3C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxC;YAED,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAClE,CAAC;QAED,qFAAqF;QACrF,kIAAkI;QAClI,uGAAuG;QACvG,eAAe,EAAE,UAAS,IAAI;YAC1B,IAAI,CAAC,KAAK;gBACN,8BAA8B;iBAC7B,IAAI,CAAC,0BAA0B,CAAC;iBAChC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,kBAAkB,EAAE,IAAI,EAAE,CAAC;iBACxE,GAAG,EAAE;gBACN,yBAAyB;iBACxB,IAAI,CAAC,uBAAuB,CAAC;iBAC7B,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,eAAe,EAAE,IAAI,EAAE,CAAC;iBAClE,GAAG,EAAE;gBACN,gDAAgD;gBAChD,0DAA0D;iBACzD,MAAM,CACH,IAAI;iBACC,WAAW,EAAE;iBACb,GAAG,CAAC,sBAAsB,CAAC;iBAC3B,GAAG,CAAC,mBAAmB,CAAC,CAChC,CAAC;YAEN,sFAAsF;YACtF,IAAI,cAAc,GAAG,KAAK,CAAC,CAAC,+CAA+C;YAE3E,MAAM,CAAC,MAAM,CAAC;iBACT,QAAQ,EAAE;iBACV,IAAI,CAAC;gBACF,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEvC,IAAI,UAAU,KAAK,sBAAsB,EAAE;oBACvC,cAAc,GAAG,IAAI,CAAC;iBACzB;gBAED,IAAI,cAAc,EAAE;oBAChB,QAAQ,CAAC,MAAM,EAAE,CAAC;iBACrB;gBAED,IAAI,cAAc,IAAI,UAAU,KAAK,oBAAoB,EAAE;oBACvD,cAAc,GAAG,KAAK,CAAC;iBAC1B;YACL,CAAC,CAAC,CAAC;YAEP,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACtC,8EAA8E;YAC9E,IAAI,SAAS,EAAE;gBACX,MAAM,CACF,6CAA6C;oBACzC,SAAS;oBACT,2CAA2C,CAClD,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC1B;YAED,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,4DAA4D;QAC5D,qBAAqB,EAAE,UAAS,IAAI;YAChC,IAAI,CAAC,KAAK;iBACL,IAAI,CAAC,uBAAuB,CAAC;iBAC7B,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;iBACjC,GAAG,EAAE;gBACN,mDAAmD;gBACnD,6DAA6D;iBAC5D,IAAI,CAAC,oCAAoC,CAAC;iBAC1C,MAAM,EAAE,CAAC;YAEd,mCAAmC;YACnC,yBAAyB;YACzB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YAE3C,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,UAAU,EAAE,UAAS,GAAG,EAAE,IAAI;YAC1B,IAAI;gBACA,MAAM,CAAC,UAAU,EAAE;oBACf,GAAG,EAAE,GAAG;oBACR,IAAI,EAAE,IAAI;iBACb,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChC,CAAC;QAED,6BAA6B;QAC7B,sDAAsD;QACtD,WAAW,EAAE,UAAS,IAAI,EAAE,MAAM;YAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YAChD,qDAAqD;YACrD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAEvB,yCAAyC;YACzC,aAAa,CAAC,iBAAiB,EAAE,CAAC;YAElC,uDAAuD;YACvD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,EAAE,UAAS,YAAiB;gBACtD,oBAAoB;gBACpB,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC1C,aAAa;oBACb,IAAI,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;wBACrD,OAAO;qBACV;iBACJ;gBAED,MAAM,CAAC,OAAO,CAAC,2BAA2B,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;YACpE,CAAC,CAAC,CAAC;QACP,CAAC;QAED,iBAAiB,EAAE,UAAS,IAAI,EAAE,YAAY;YAClC,IAAA,MAAM,GAAK,YAAY,OAAjB,CAAkB;YAChC,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;YAEpD,mCAAmC;YACnC,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE;gBACvB,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBAC1C,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC7D,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;aAC3C;iBAAM;gBACH,4CAA4C;gBAC5C,kCAAkC;gBAClC,MAAM;qBACD,CAAC,CAAC,MAAM,CAAC;qBACT,MAAM,CAAC,QAAQ,CAAC;qBAChB,IAAI,CAAC,UAAS,KAAK,EAAE,OAAO;oBACzB,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;oBAC3C,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBACjE,CAAC,CAAC,CAAC;gBACP,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;aAC7C;QACL,CAAC;QAED,mCAAmC;QACnC,mEAAmE;QACnE,yDAAyD;QACzD,qBAAqB;QACrB,iBAAiB,EAAE;YACf,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,UAAS,oBAAoB;gBACpE,MAAM,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;YACzC,CAAC,CAAC,CAAC;YAEH,aAAa,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC5C,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,aAAa,CAAC","file":"Content.EnhancedViews.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Content.EnhancedViews\"/>\n\nimport * as _ from 'underscore';\nimport '../../../Commons/BackboneExtras/JavaScript/Backbone.View';\nimport '../../../Commons/BackboneExtras/JavaScript/Backbone.View.render';\nimport '../../../Commons/BackboneExtras/JavaScript/Backbone.View.Plugins';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\n\nimport DataModels = require('./Content.DataModels');\n\n// @class Content.EnhancedViews Provides functions that based in a view, sets the title,\n// meta tags and inject html content in the dom\nconst EnhancedViews: any = {\n    previousPlaceholders: []\n};\n\n_.extend(EnhancedViews, {\n    // @method overrideViewSettings Updates attributes of the view with the info coming in the page model passed in\n    // @param {Backbone.View} view @param {Pages.Model} page\n    overrideViewSettings: function(view, page) {\n        view.contentZones = view.contentZones || [];\n\n        if (page) {\n            // All info comming off the page has presedence to whats already defined in the view\n            view.title = page.get('title') || view.getTitle();\n            view.page_header = page.get('pageheader') || view.page_header;\n            view.description = page.get('description') || view.description;\n            view.metaDescription = page.get('metadescription') || view.getMetaDescription();\n            view.metaKeywords = page.get('metakeywords') || view.getMetaKeywords();\n            view.template = page.get('template') || view.template;\n            view.addToHead = page.get('metaextra') || view.getAddToHead() || '';\n            // Everything but the banners, who are merged with other that the view may have,\n            view.contentZones = _.union(view.contentZones, page.get('pagecontent'));\n        }\n\n        // If you have a default page (this is a page that is pointed by the * url)\n        // it will be always merged\n        const default_url = DataModels.Urls.Collection.defaultModel;\n        const default_page =\n            default_url && DataModels.Pages.Collection.getInstance().get(default_url.get('pageid'));\n\n        if (default_page) {\n            view.contentZones = _.union(view.contentZones, default_page.get('pagecontent'));\n        }\n\n        return view;\n    },\n\n    initalizeHead: function() {\n        return jQuery('head')\n            .not(':has(title)')\n            .append('<title/>')\n            .end()\n            .not(':has(link[rel=\"canonical\"])')\n            .append('<link rel=\"canonical\"/>')\n            .end()\n            .not(':has(meta[name=\"keywords\"])')\n            .append('<meta name=\"keywords\"/>')\n            .end()\n            .not(':has(meta[name=\"description\"])')\n            .append('<meta name=\"description\"/>')\n            .end();\n    },\n\n    enhanceHead: function(view) {\n        const title = view.getTitle();\n\n        if (title) {\n            document.title = title;\n        }\n        // Sets the text of the title element if we are in the server\n        // we only do it on the server side due to an issue modifying\n        // the title tag on IE :(\n        if (SC.ENVIRONMENT.jsEnvironment === 'server') {\n            this.$head.find('title').text(title);\n        }\n\n        return this.enhanceMetaTags(view).enhanceCanonicalLinks(view);\n    },\n\n    // @method enhanceMetaTags Enhance the document's head by adding given view metadata.\n    // We enclose the added metatags between two special tags so we can delete them when the url changes. We do this like this because\n    // we cannot add any strange parameter to added metatags to reference them. @param {Backbone.View} view\n    enhanceMetaTags: function(view) {\n        this.$head\n            // then we add the description\n            .find('meta[name=\"description\"]')\n            .attr('content', view.metaDescription || view.getMetaDescription() || '')\n            .end()\n            // and keywords meta tags\n            .find('meta[name=\"keywords\"]')\n            .attr('content', view.metaKeywords || view.getMetaKeywords() || '')\n            .end()\n            // then we append the tags specific to this view\n            // excluding any extra descriptions and keywords meta tags\n            .append(\n                view\n                    .getMetaTags()\n                    .not('[name=\"description\"]')\n                    .not('[name=\"keywords\"]')\n            );\n\n        // remove head's elements that are between enhanceMetaTagsStart and enhanceMetaTagsEnd\n        let remove_element = false; // flag used to determine when remove elements.\n\n        jQuery('head')\n            .children()\n            .each(function() {\n                const $element = jQuery(this);\n                const element_id = $element.attr('id');\n\n                if (element_id === 'enhanceMetaTagsStart') {\n                    remove_element = true;\n                }\n\n                if (remove_element) {\n                    $element.remove();\n                }\n\n                if (remove_element && element_id === 'enhanceMetaTagsEnd') {\n                    remove_element = false;\n                }\n            });\n\n        const addToHead = view.getAddToHead();\n        // add meta extra elements between enhanceMetaTagsStart and enhanceMetaTagsEnd\n        if (addToHead) {\n            jQuery(\n                '<script id=\"enhanceMetaTagsStart\"></script>' +\n                    addToHead +\n                    '<script id=\"enhanceMetaTagsEnd\"></script>'\n            ).appendTo(this.$head);\n        }\n\n        return this;\n    },\n\n    // @method enhanceCanonicalLinks @param {Backbone.View} view\n    enhanceCanonicalLinks: function(view) {\n        this.$head\n            .find('link[rel=\"canonical\"]')\n            .attr('href', view.getCanonical())\n            .end()\n            // we remove any existing next/prev tags every time\n            // a page is rendered in case the previous view was paginated\n            .find('link[rel=\"next\"], link[rel=\"prev\"]')\n            .remove();\n\n        // if the current page is paginated\n        // set prev/next link rel\n        this.setLinkRel('prev', view.getRelPrev());\n        this.setLinkRel('next', view.getRelNext());\n\n        return this;\n    },\n\n    setLinkRel: function(rel, link) {\n        link &&\n            jQuery('<link />', {\n                rel: rel,\n                href: link\n            }).appendTo(this.$head);\n    },\n\n    // EnhancedViews.enhancePage:\n    // enhance the DOM based on the attributes of the view\n    enhancePage: function(view, Layout) {\n        this.$head = this.$head || this.initalizeHead();\n        // changes the page head based on the view attributes\n        this.enhanceHead(view);\n\n        // empties the place holders DOMs element\n        EnhancedViews.clearPlaceholders();\n\n        // walks the content zones and injects them in the site\n        _.each(view.contentZones || [], function(content_zone: any) {\n            // its in the layout\n            if (view.$(content_zone.target).length === 0) {\n                // it's empty\n                if (jQuery(content_zone.target + ':empty').length === 0) {\n                    return;\n                }\n            }\n\n            Layout.trigger('renderEnhancedPageContent', view, content_zone);\n        });\n    },\n\n    renderHTMLContent: function(view, content_zone) {\n        const { target } = content_zone;\n        const layout = view.options.application.getLayout();\n\n        // If the target is inside the view\n        if (view.$(target).length) {\n            view.$(target).html(content_zone.content);\n            EnhancedViews.previousPlaceholders.push(content_zone.target);\n            layout.trigger('afterAppendView', view);\n        } else {\n            // Otherwise, if the target is on the layout\n            // we have to make sure it's empty\n            layout\n                .$(target)\n                .filter(':empty')\n                .each(function(index, element) {\n                    jQuery(element).html(content_zone.content);\n                    EnhancedViews.previousPlaceholders.push(content_zone.target);\n                });\n            layout.trigger('afterAppendView', layout);\n        }\n    },\n\n    // EnhancedViews.clearPlaceholders:\n    // This clears all content that was previously added to the Layout,\n    // this method is called by the EnhancedViews.enhancePage\n    // for every new page\n    clearPlaceholders: function() {\n        _.each(EnhancedViews.previousPlaceholders, function(previous_placeholder) {\n            jQuery(previous_placeholder).empty();\n        });\n\n        EnhancedViews.previousPlaceholders = [];\n    }\n});\n\nexport = EnhancedViews;\n"]}