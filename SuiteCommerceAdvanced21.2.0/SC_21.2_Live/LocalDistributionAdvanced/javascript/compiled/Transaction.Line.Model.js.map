{"version":3,"sources":["Transaction.Line.Model.ts"],"names":[],"mappings":"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","file":"Transaction.Line.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Transaction.Line.Model\"/>\n\nimport * as _ from 'underscore';\n\nimport ItemModel = require('../../Item/JavaScript/Item.Model');\nimport TransactionLineOptionCollection = require('./Transaction.Line.Option.Collection');\nimport ProductLineCommon = require('../../ProductLine/JavaScript/ProductLine.Common');\nimport Backbone = require('../../Utilities/JavaScript/backbone.custom');\n\nconst TransactionLineModel: any = Backbone.Model.extend(\n    {\n        // @method initialize Override default initialize method to assure the correct data structure\n        // @param {Transaction.Model.Get.Line} attributes\n        // @return {Void}\n        initialize: function initialize(attributes) {\n            Backbone.Model.prototype.initialize.apply(this, arguments);\n\n            const self = this;\n            this.on('change:item', function(model, item) {\n                model.set('item', item instanceof ItemModel ? item.clone() : new ItemModel(item), {\n                    silent: true\n                });\n\n                const item_options = model.get('item').get('options');\n                const options = model.get('options') || item_options.toJSON();\n\n                model.set(\n                    'options',\n                    options instanceof TransactionLineOptionCollection\n                        ? options\n                        : new TransactionLineOptionCollection(options),\n                    { silent: true }\n                );\n\n                self.extendOptionsFromItem(model.get('item'), self);\n            });\n            this.trigger('change:item', this, (attributes && attributes.item) || {});\n\n            // Extend the model with Backbone.Validation.mixin to validate it without a View\n            _.extend(this, Backbone.Validation.mixin);\n        },\n\n        moduleName: 'Transaction.Line.Model',\n\n        // @method getItem Returns the current selected item. This method exists to share a common interface with the Product\n        // @return {Item.Model}\n        getItem: function getItem() {\n            return this.get('item');\n        },\n\n        // @method getStockInfo Get the stock information of the current item. Indicate if any stock message should be shown or not, and if the current item is valid to be purchased\n        // @return {Item.StockInfo}\n        getStockInfo: function getStockInfo() {\n            return this.get('item').getStockInfo();\n        },\n\n        // @method getPrice Returns the object specifying the price of the current selection\n        // @return {ItemPrice}\n        getPrice: function getPrice() {\n            return this.getItem().getPrice(this.get('quantity'), []);\n        },\n\n        // @method getItemId Returns the id of the current selected item. This method exists to share a common interface with the Product\n        // @return {String}\n        getItemId: function getItemId() {\n            return this.get('item').id;\n        },\n\n        // @method isEqual\n        // @param {Transaction.Line.Model} other_line\n        // @return {Boolean}\n        isEqual: function isEqual(other_line) {\n            return !!(\n                other_line &&\n                this.getItemId() === other_line.getItemId() &&\n                _.isEqual(this.get('options').toJSON(), other_line.get('options').toJSON())\n            );\n        }\n    },\n    {\n        // @method createFromProduct Convert a Product.Model (ProductList.Item.Model) into a Transaction.Line.Model\n        // @param {Product.Model} product\n        // @return {Transaction.Line.Model}\n        createFromProduct: function createFromProduct(product) {\n            const line = new TransactionLineModel(product.toJSON());\n            const item = product.get('item');\n            let item_images_detail = item.get('itemimages_detail');\n            const is_matrix_item = !!item.get('_matrixChilds').length;\n\n            if (\n                _.isEqual(item_images_detail, {}) &&\n                item.get('_matrixParent').get('internalid') &&\n                item.get('_matrixParent').get('itemimages_detail')\n            ) {\n                item_images_detail = item.get('_matrixParent').get('itemimages_detail');\n            }\n\n            line.set('item', product.getItem().clone(), { silent: true });\n            line.get('item').set('itemimages_detail', item_images_detail, { silent: true });\n            line.get('item').set('itemid', item.get('itemid'), { silent: true });\n\n            line.set('minimumquantity', product.get('item').minimumquantity);\n            line.set('maximumquantity', product.get('item').maximumquantity);\n\n            if (is_matrix_item) {\n                line.get('item').set('matrix_parent', product.get('item'));\n            }\n\n            const price = product.getPrice();\n            line.set('rate', price.price, { silent: true });\n            line.set('rate_formatted', price.price_formatted, { silent: true });\n\n            product.get('options').each(function(product_option) {\n                const line_option = line\n                    .get('options')\n                    .findWhere({ cartOptionId: product_option.get('cartOptionId') });\n                line_option.attributes = _.extend(\n                    {},\n                    product_option.attributes,\n                    line_option.attributes\n                );\n            });\n\n            return line;\n        }\n    }\n);\n\nTransactionLineModel.prototype = _.extend(TransactionLineModel.prototype, ProductLineCommon);\n\nexport = TransactionLineModel;\n"]}