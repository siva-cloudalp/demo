{"version":3,"sources":["Cart.Lines.Free.View.ts"],"names":[],"mappings":"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","file":"Cart.Lines.Free.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Cart.Lines.Free.View\"/>\n\nimport * as _ from 'underscore';\nimport * as cart_lines_free_tpl from 'cart_lines_free.tpl';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { GlobalViewsMessageView } from '../../GlobalViews/JavaScript/GlobalViews.Message.View';\n\nimport LiveOrderModel = require('../../LiveOrder/JavaScript/LiveOrder.Model');\nimport TransactionLineViewsPriceView = require('../../Transaction.Line.Views/JavaScript/Transaction.Line.Views.Price.View');\nimport TransactionLineViewsOptionsSelectedView = require('../../Transaction.Line.Views/JavaScript/Transaction.Line.Views.Options.Selected.View');\nimport ProductLineStockView = require('../../ProductLine/JavaScript/ProductLine.Stock.View');\nimport ProductLineSkuView = require('../../ProductLine/JavaScript/ProductLine.Sku.View');\nimport ProductLineStockDescriptionView = require('../../ProductLine/JavaScript/ProductLine.StockDescription.View');\nimport TransactionLineViewsTax = require('../../Transaction.Line.Views/JavaScript/Transaction.Line.Views.Tax');\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\n// @class Cart.Lines.Free.View @extend Backbone.View\nexport = BackboneView.extend({\n    template: cart_lines_free_tpl,\n\n    // @method initialize\n    // @param {Transaction.Line.Views.Cell.Actionable.Initialize.Options} options\n    // @return {Void}\n    initialize: function() {\n        this.cart = LiveOrderModel.getInstance();\n    },\n    events: {\n        'click [data-action=\"plus\"]': 'addQuantity',\n        'click [data-action=\"minus\"]': 'subQuantity',\n        'click [data-action=\"remove-free-gift\"]': 'removeGift',\n        'change [data-type=\"cart-free-item-quantity-input\"]': 'changeQuantity'\n    },\n\n    // @method addQuantity Add 1 to the quantity field\n    // @return {Void}\n    addQuantity: function() {\n        const old_value = this.$('[name=\"quantity\"]').val();\n        const new_val = Math.min(\n            this.model.get('free_gift_info').qtyelegible,\n            parseFloat(old_value) + 1\n        );\n\n        this.$('[name=\"quantity\"]').val(new_val);\n\n        this.changeQuantity();\n    },\n\n    // @method subQuantity Subtract 1 from the quantity field\n    // @return {Void}\n    subQuantity: function() {\n        const old_value = this.$('[name=\"quantity\"]').val();\n        const new_val = Math.max(1, parseFloat(old_value) - 1);\n\n        this.$('[name=\"quantity\"]').val(new_val);\n\n        this.changeQuantity();\n    },\n\n    removeGift: function() {\n        this.cart.removeLine(this.model);\n    },\n\n    updateGift: function(quantity) {\n        this.$('[name=\"quantity\"]').prop('disabled', false);\n\n        const line = this.model;\n        const current_quantity = line.get('quantity');\n\n        line.set('quantity', quantity);\n\n        const invalid = line.validate();\n        const placeholder = this.$el.find('[data-type=\"alert-placeholder\"]');\n\n        placeholder.empty();\n\n        if (!invalid) {\n            this.cart.updateLine(line);\n        } else {\n            _.each(invalid, function(value) {\n                const global_view_message = new GlobalViewsMessageView({\n                    message: value,\n                    type: 'error',\n                    closable: true\n                });\n\n                placeholder.append(global_view_message.render().$el.html());\n            });\n\n            line.set('quantity', current_quantity);\n        }\n\n        this.$('[name=\"quantity\"]').prop('disabled', false);\n    },\n\n    changeQuantity: _.debounce(function() {\n        const $input = this.$('[name=\"quantity\"]');\n        const current_quantity = parseInt(this.model.get('quantity'), 10);\n        const new_quantity =\n            $input.val() <= this.model.get('free_gift_info').eligible_quantity && $input.val() > 0\n                ? parseInt($input.val())\n                : current_quantity;\n\n        $input.val(new_quantity);\n\n        if (new_quantity && new_quantity !== current_quantity) {\n            this.updateGift(new_quantity);\n        }\n    }, 1000),\n\n    childViews: {\n        'Item.Price': function() {\n            return new TransactionLineViewsPriceView({\n                model: this.model,\n                showComparePrice: true\n            });\n        },\n        'Item.Sku': function() {\n            return new ProductLineSkuView({\n                model: this.model\n            });\n        },\n        'Item.SelectedOptions': function() {\n            return new TransactionLineViewsOptionsSelectedView({\n                model: this.model\n            });\n        },\n        'Product.Stock.Info': function() {\n            return new ProductLineStockView({\n                model: this.model\n            });\n        },\n        'Item.Tax.Info': function() {\n            if (Configuration.get('showTaxDetailsPerLine')) {\n                return new TransactionLineViewsTax({\n                    model: this.model\n                });\n            }\n        },\n        StockDescription: function() {\n            return new ProductLineStockDescriptionView({\n                model: this.model\n            });\n        }\n    },\n\n    // @method getContext\n    // @return {Transaction.Line.Views.Actionable.View.Context}\n    getContext: function() {\n        const item = this.model.get('item');\n\n        // @class Transaction.Line.Views.Actionable.View.Context\n        return {\n            // @property {OrderLine.Model|Transaction.Line.Model} line\n            line: this.model,\n            // @property {String} lineId\n            lineId: this.model.get('internalid'),\n            // @property {Item.Model} item\n            item: item,\n            // @property {String} itemId\n            itemId: item.get('internalid'),\n            // @property {String} linkAttributes\n            linkAttributes: this.model.getFullLink({\n                quantity: null,\n                location: null,\n                fulfillmentChoice: null\n            }),\n            // @property {Boolean} isNavigable\n            isNavigable: !!this.options.navigable && !!item.get('_isPurchasable'),\n            // @property {ImageContainer} thumbnail\n            thumbnail: this.model.getThumbnail(),\n            // @property {Boolean} isQtyEditable\n            isQtyEditable: this.model.get('free_gift_info').eligible_quantity > 1,\n            // @property {Number} qtyElegible\n            qtyElegible: this.model.get('free_gift_info').eligible_quantity\n        };\n        // @class Transaction.Line.Views.Actionable.View\n    }\n});\n\n// @class Cart.Lines.Initialize.Options\n// @property {Transaction.Line.Model} model\n// @property {String} generalClass Class name used in the generated HTML\n// @property {Backbone.View} SummaryView View to show details\n// @property {Backbone.View} ActionsView View to show actions buttons\n// @property {Object} actionsOptions Any object used to extend the options sent to the Action View\n// @property {Object} summaryOptions Any object used to extend the options sent to the Summary View\n// @property {Boolean} navigable\n// @property {Boolean} showAlert Indicate if a place holder is added in the final HTML,\n// used when the action can generate errors\n// @property {ApplicationSkeleton} application\n// @property {Boolean} hideComparePrice Property used to bypass to the TransactionLineViewsPriceView\n"]}