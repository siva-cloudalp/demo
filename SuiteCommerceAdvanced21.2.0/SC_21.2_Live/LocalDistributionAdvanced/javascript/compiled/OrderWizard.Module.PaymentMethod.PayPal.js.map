{"version":3,"sources":["OrderWizard.Module.PaymentMethod.PayPal.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAYF,IAAM,oCAAoC,GAAQ,8BAA8B,CAAC,MAAM,CAAC;QACpF,QAAQ,EAAE,4CAA4C;QAEtD,QAAQ,EAAE;YACN,IAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,YAAY,IAAI,EAAE,CAAC;YAC5E,IAAM,MAAM,GAAQ,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,cAAc,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;YACtF,OAAO,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI,EAAE;YACF,IACI,IAAI,CAAC,QAAQ,EAAE;gBACf,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;gBAC/B,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;gBAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,EAC/C;gBACE,IAAI,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;gBACvD,IAAM,KAAK,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;gBACrD,IAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;gBAE3D,YAAY,IAAI,KAAK,GAAG,qBAAqB,GAAG,iBAAiB,CAAC;gBAElE,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAEhF,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,YAAY,CAAC;gBAEtC,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;aAC7E;QACL,CAAC;QAED,MAAM,EAAE;YACJ,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;gBACjB,IAAI,CAAC,aAAa,GAAG,IAAI,6BAA6B,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;gBAE3E,IAAI,CAAC,OAAO,EAAE,CAAC;gBAEf,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,EAAE;oBAChC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;oBACxC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;oBACzC,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,sBAAsB,KAAK,MAAM,CAAC;oBAChF,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;iBACnC;aACJ;QACL,CAAC;QAED,UAAU,EAAE;YACR,IAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,WAAW,IAAI,EAAE,CAAC;YAC1E,OAAO;gBACH,uCAAuC;gBACvC,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC;gBACtD,oCAAoC;gBACpC,cAAc,EAAE,WAAW,CAAC,UAAU;aACzC,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,oCAAoC,CAAC","file":"OrderWizard.Module.PaymentMethod.PayPal.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"OrderWizard.Module.PaymentMethod.PayPal\"/>\n\nimport * as _ from 'underscore';\nimport * as order_wizard_paymentmethod_paypal_module_tpl from 'order_wizard_paymentmethod_paypal_module.tpl';\n\nimport OrderWizardModulePaymentMethod = require('./OrderWizard.Module.PaymentMethod');\nimport Session = require('../../../Commons/Session/JavaScript/Session');\nimport TransactionPaymentmethodModel = require('../../../Commons/Transaction/JavaScript/Transaction.Paymentmethod.Model');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\nconst OrderWizardModulePaymentMethodPayPal: any = OrderWizardModulePaymentMethod.extend({\n    template: order_wizard_paymentmethod_paypal_module_tpl,\n\n    isActive: function(): boolean {\n        const siteSettings = this.wizard.application.getConfig().siteSettings || {};\n        const paypal: any = _.findWhere(siteSettings.paymentmethods || [], { ispaypal: 'T' });\n        return !!(paypal && paypal.internalid);\n    },\n\n    past: function() {\n        if (\n            this.isActive() &&\n            !this.wizard.isPaypalComplete() &&\n            !this.wizard.hidePayment() &&\n            this.wizard.model.get('confirmation').isNew()\n        ) {\n            let checkout_url = Session.get('touchpoints.checkout');\n            const joint = ~checkout_url.indexOf('?') ? '&' : '?';\n            const previous_step_url = this.wizard.getPreviousStepUrl();\n\n            checkout_url += joint + 'paypal=T&next_step=' + previous_step_url;\n\n            Backbone.history.navigate(previous_step_url, { trigger: false, replace: true });\n\n            document.location.href = checkout_url;\n\n            throw new Error('This is not an error. This is just to abort javascript');\n        }\n    },\n\n    render: function() {\n        if (this.isActive()) {\n            this.paymentMethod = new TransactionPaymentmethodModel({ type: 'paypal' });\n\n            this._render();\n\n            if (this.wizard.isPaypalComplete()) {\n                this.paymentMethod.set('primary', null);\n                this.paymentMethod.set('complete', true);\n                const is_ready = this.options && this.options.backFromPaypalBehavior !== 'stay';\n                this.trigger('ready', is_ready);\n            }\n        }\n    },\n\n    getContext: function() {\n        const checkoutApp = this.wizard.application.getConfig().checkoutApp || {};\n        return {\n            // @property {Boolean} isPaypalComplete\n            isPaypalComplete: !!this.model.get('isPaypalComplete'),\n            // @property {String} paypalImageUrl\n            paypalImageUrl: checkoutApp.paypalLogo\n        };\n    }\n});\n\nexport = OrderWizardModulePaymentMethodPayPal;\n"]}