{"version":3,"sources":["Address.Edit.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAmBF,iDAAiD;IACjD,IAAM,eAAe,GAAQ,YAAY,CAAC,MAAM,CAAC;QAC7C,QAAQ,EAAE,gBAAgB;QAE1B,UAAU,EAAE;YACR,EAAE,EAAE,aAAa;YACjB,KAAK,EAAE,iBAAiB;SAC3B;QAED,MAAM,EAAE;YACJ,aAAa,EAAE,UAAU;SAC5B;QAED,QAAQ,EAAE;YACN,mBAAmB,EAAE,UAAU;YAC/B,kBAAkB,EAAE,SAAS;YAC7B,gBAAgB,EAAE,OAAO;YACzB,eAAe,EAAE,MAAM;YACvB,kBAAkB,EAAE,SAAS;YAC7B,cAAc,EAAE,KAAK;YACrB,gBAAgB,EAAE,OAAO;SAC5B;QAED,UAAU,EAAE,UAAS,OAAY;YAC7B,IAAI,CAAC,YAAY,GAAG,4BAAY,CAAC,WAAW,EAAE,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAC3E,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YAC7B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;YAEvC,IAAM,EAAE,GACJ,CAAC,OAAO,CAAC,eAAe;gBACpB,OAAO,CAAC,eAAe,CAAC,MAAM;gBAC9B,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;gBAC/B,EAAE,CAAC;YAEP,IAAI,EAAE,IAAI,EAAE,KAAK,KAAK,EAAE;gBACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBAErC,IAAI,CAAC,KAAK,CAAC,EAAE,CACT,0BAA0B,EAC1B;oBACI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,eAAe,EAAE;wBACtC,IAAI,CAAC,eAAe;6BACf,WAAW,CAAC,MAAM,CAAC;6BACnB,KAAK,CAAC,MAAM,CAAC;6BACb,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;wBAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;qBAClB;yBAAM;wBACH,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;qBAChE;gBACL,CAAC,EACD,IAAI,CACP,CAAC;aACL;iBAAM,IAAI,OAAO,CAAC,KAAK,EAAE;gBACtB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;aAC9B;iBAAM;gBACH,IAAI,CAAC,KAAK,GAAG,IAAI,4BAAY,EAAE,CAAC;gBAEhC,IAAI,CAAC,KAAK,CAAC,EAAE,CACT,QAAQ,EACR,UAAS,KAAK;oBACV,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBAE3B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,eAAe,EAAE;wBACtC,IAAI,CAAC,eAAe;6BACf,WAAW,CAAC,MAAM,CAAC;6BACnB,KAAK,CAAC,MAAM,CAAC;6BACb,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;wBAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;qBAClB;yBAAM;wBACH,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;qBAChE;gBACL,CAAC,EACD,IAAI,CACP,CAAC;aACL;YAED,IAAM,iBAAiB,GAAG,KAAK,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;YAC7D,IAAM,gBAAgB,GAAG,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YACzD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,gBAAgB,CAAC;YACvE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,6BAAa,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YAC7D,IAAI,CAAC,eAAe;gBAChB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,6BAAa,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;YAEtF,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBACvD,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAC1D;YAED,IAAI,IAAI,CAAC,eAAe,EAAE;gBACtB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;aACvE;YAED,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAE3B,IAAI,CAAC,QAAQ,GAAG,SAAS,QAAQ;gBAAjB,iBAgBf;gBAfG,IAAM,OAAO,GAAG,iBAAO,CAAC,SAAS,EAAE,CAAC;gBACpC,IAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;gBAE/C,IAAM,OAAO,GAAG,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gBAEjE,IAAI,OAAO,EAAE;oBACT,OAAO,CAAC,IAAI,CAAC;wBACT,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE;4BAClB,YAAY,EAAE,KAAI,CAAC,KAAK,CAAC,eAAe,EAAE;4BAC1C,MAAM,EAAE,SAAS;yBACpB,CAAC,CAAC;oBACP,CAAC,CAAC,CAAC;iBACN;gBAED,OAAO,OAAO,CAAC;YACnB,CAAC,CAAC;QACN,CAAC;QAED,OAAO,EAAE,SAAS,OAAO;YACrB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAEjC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC;QAED,iBAAiB,EAAE,SAAS,iBAAiB;YACzC,IAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAElC,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,GAAG,EAAE;gBAC7C,OAAO,CAAC,MAAM,EAAE,CAAC;gBACjB,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC;aAC3C;iBAAM;gBACH,OAAO,CAAC,OAAO,EAAE,CAAC;aACrB;YAED,OAAO,OAAO,CAAC;QACnB,CAAC;QAED,0BAA0B;QAC1B,eAAe,EAAE;YACb,OAAO,aAAa,CAAC;QACzB,CAAC;QAED,6BAA6B;QAC7B,kBAAkB,EAAE;YAChB,OAAO;gBACH;oBACI,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC;oBACrC,IAAI,EAAE,cAAc;iBACvB;gBACD;oBACI,IAAI,EAAE,IAAI,CAAC,KAAK;oBAChB,IAAI,EAAE,kBAAkB;iBAC3B;aACJ,CAAC;QACN,CAAC;QAED,MAAM,EAAE;YACJ,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAErD,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC;iBACpB,OAAO,CAAC;gBACL,SAAS,EAAE,OAAO;aACrB,CAAC;iBACD,EAAE,CAAC,MAAM,EAAE,UAAS,CAAM;gBACvB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;qBACX,IAAI,CAAC,UAAU,CAAC;qBAChB,IAAI,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC;QACX,CAAC;QAED,UAAU,EAAE;YACR,qBAAqB,EAAE;gBACnB,OAAO,IAAI,oBAAoB,CAAC;oBAC5B,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,eAAe,EAAE,IAAI,CAAC,eAAe;oBACrC,YAAY,EAAE,6BAAa,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,gBAAgB;oBACzE,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;oBACrC,MAAM,EAAE,IAAI,CAAC,MAAM;iBACtB,CAAC,CAAC;YACP,CAAC;SACJ;QAED,uDAAuD;QACvD,UAAU,EAAE;YACR,mCAAmC;YACnC,OAAO;gBACH,kCAAkC;gBAClC,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,mCAAmC;gBACnC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBAChC,wCAAwC;gBACxC,iBAAiB,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM;gBAC1C,gCAAgC;gBAChC,SAAS,EAAE,IAAI,CAAC,OAAO;gBACvB,4CAA4C;gBAC5C,qBAAqB,EAAE,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU;gBAChE,iCAAiC;gBACjC,UAAU,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU;gBACpC,oDAAoD;gBACpD,6BAA6B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;aAC5E,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,eAAe,CAAC","file":"Address.Edit.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n// @module Address\n/// <amd-module name=\"Address.Edit.View\"/>\n\nimport * as _ from 'underscore';\nimport * as address_edit_tpl from 'address_edit.tpl';\nimport { Loggers } from '../../Loggers/JavaScript/Loggers';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { ProfileModel } from '../../Profile/JavaScript/Profile.Model';\nimport { AddressModel } from './Address.Model';\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\nimport Backbone = require('../../Utilities/JavaScript/backbone.custom');\nimport AddressEditFieldView = require('../JavaScript/Address.Edit.Fields.View');\nimport BackboneFormView = require('../../Backbone.FormView/JavaScript/Backbone.FormView');\n\n// @class Address.Edit.View @extend Backbone.View\nconst AddressEditView: any = BackboneView.extend({\n    template: address_edit_tpl,\n\n    attributes: {\n        id: 'AddressEdit',\n        class: 'AddressListView'\n    },\n\n    events: {\n        'submit form': 'saveForm'\n    },\n\n    bindings: {\n        '[name=\"fullname\"]': 'fullname',\n        '[name=\"company\"]': 'company',\n        '[name=\"addr1\"]': 'addr1',\n        '[name=\"city\"]': 'city',\n        '[name=\"country\"]': 'country',\n        '[name=\"zip\"]': 'zip',\n        '[name=\"phone\"]': 'phone'\n    },\n\n    initialize: function(options: any) {\n        this.profileModel = ProfileModel.getInstance();\n        this.collection = options.collection || this.profileModel.get('addresses');\n        this.manage = options.manage;\n        this.application = options.application;\n\n        const id =\n            (options.routerArguments &&\n                options.routerArguments.length &&\n                options.routerArguments[0]) ||\n            '';\n\n        if (id && id !== 'new') {\n            this.model = this.collection.get(id);\n\n            this.model.on(\n                'reset destroy change add',\n                function() {\n                    if (this.inModal && this.$containerModal) {\n                        this.$containerModal\n                            .removeClass('fade')\n                            .modal('hide')\n                            .data('bs.modal', null);\n                        this.destroy();\n                    } else {\n                        Backbone.history.navigate('#addressbook', { trigger: true });\n                    }\n                },\n                this\n            );\n        } else if (options.model) {\n            this.model = options.model;\n        } else {\n            this.model = new AddressModel();\n\n            this.model.on(\n                'change',\n                function(model) {\n                    this.collection.add(model);\n\n                    if (this.inModal && this.$containerModal) {\n                        this.$containerModal\n                            .removeClass('fade')\n                            .modal('hide')\n                            .data('bs.modal', null);\n                        this.destroy();\n                    } else {\n                        Backbone.history.navigate('#addressbook', { trigger: true });\n                    }\n                },\n                this\n            );\n        }\n\n        const addNewAddresLabel = Utils.translate('Add New Address');\n        const editAddressLabel = Utils.translate('Edit Address');\n        this.title = this.model.isNew() ? addNewAddresLabel : editAddressLabel;\n        this.page_header = this.title;\n        this.countries = Configuration.get('siteSettings.countries');\n        this.selectedCountry =\n            this.model.get('country') || Configuration.get('siteSettings.defaultshipcountry');\n\n        if (!this.selectedCountry && _.size(this.countries) === 1) {\n            this.selectedCountry = _.first(_.keys(this.countries));\n        }\n\n        if (this.selectedCountry) {\n            this.model.set({ country: this.selectedCountry }, { silent: true });\n        }\n\n        BackboneFormView.add(this);\n\n        this.saveForm = function saveForm() {\n            const loggers = Loggers.getLogger();\n            const actionId = loggers.start('Save Address');\n\n            const promise = BackboneFormView.saveForm.apply(this, arguments);\n\n            if (promise) {\n                promise.done(() => {\n                    loggers.end(actionId, {\n                        operationIds: this.model.getOperationIds(),\n                        status: 'success'\n                    });\n                });\n            }\n\n            return promise;\n        };\n    },\n\n    destroy: function destroy() {\n        this.model.off(null, null, this);\n\n        this._destroy();\n    },\n\n    beforeShowContent: function beforeShowContent() {\n        const promise = jQuery.Deferred();\n\n        if (this.profileModel.get('isLoggedIn') !== 'T') {\n            promise.reject();\n            this.application.getLayout().notFound();\n        } else {\n            promise.resolve();\n        }\n\n        return promise;\n    },\n\n    // @method getSelectedMenu\n    getSelectedMenu: function() {\n        return 'addressbook';\n    },\n\n    // @method getBreadcrumbPages\n    getBreadcrumbPages: function() {\n        return [\n            {\n                text: Utils.translate('Address Book'),\n                href: '/addressbook'\n            },\n            {\n                text: this.title,\n                href: '/addressbook/new'\n            }\n        ];\n    },\n\n    render: function() {\n        BackboneView.prototype.render.apply(this, arguments);\n\n        this.$('[rel=\"tooltip\"]')\n            .tooltip({\n                placement: 'right'\n            })\n            .on('hide', function(e: any) {\n                e.preventDefault();\n                jQuery(e.target)\n                    .next('.tooltip')\n                    .hide();\n            });\n    },\n\n    childViews: {\n        'Address.Edit.Fields': function() {\n            return new AddressEditFieldView({\n                model: this.model,\n                countries: this.countries,\n                selectedCountry: this.selectedCountry,\n                hideDefaults: Configuration.get('currentTouchpoint') !== 'customercenter',\n                application: this.options.application,\n                manage: this.manage\n            });\n        }\n    },\n\n    // @method getContext @return Address.Edit.View.Context\n    getContext: function() {\n        // @class Address.Edit.View.Context\n        return {\n            // @property {Address.Model} model\n            model: this.model,\n            // @property {Boolean} isAddressNew\n            isAddressNew: this.model.isNew(),\n            // @property {Boolean} isCollectionEmpty\n            isCollectionEmpty: !this.collection.length,\n            // @property {Boolean} isInModal\n            isInModal: this.inModal,\n            // @property {Boolean} isInModalOrHideHeader\n            isInModalOrHideHeader: this.inModal || !!this.options.hideHeader,\n            // @property {Boolean} showFooter\n            showFooter: !this.options.hideFooter,\n            // @property {Boolean} isInModalOrCollectionNotEmpty\n            isInModalOrCollectionNotEmpty: !!(this.inModal || this.collection.length)\n        };\n    }\n});\n\nexport = AddressEditView;\n"]}