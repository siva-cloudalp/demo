{"version":3,"sources":["Backbone.CachedModel.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAYF,QAAQ,CAAC,WAAW,GAAG,aAAa,CAAC,MAAM,CAAC;QACxC,IAAI,EAAE,kBAAkB,CAAC,UAAU;QACnC,UAAU,EAAE,kBAAkB,CAAC,UAAU;QACzC,QAAQ,EAAE,kBAAkB,CAAC,QAAQ;KACxC,CAAC,CAAC;IAEH,OAAS,QAAQ,CAAC,WAAW,CAAC","file":"Backbone.CachedModel.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Backbone.CachedModel\"/>\n/*\nIt adds the Backbome.CachedModel class. \nIt is a Backbone.Model that will return results from memory the second time you call fetch(). It's\njust an extension of the original Backbone.Model but it uses the Backbone.cachedSync.\n\n*/\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneCachedSync = require('./Backbone.CachedSync');\nimport BackboneModel = require('./Backbone.Model');\nBackbone.CachedModel = BackboneModel.extend({\n    sync: BackboneCachedSync.cachedSync,\n    addToCache: BackboneCachedSync.addToCache,\n    isCached: BackboneCachedSync.isCached\n});\n\nexport = Backbone.CachedModel;\n"]}