{"version":3,"sources":["OrderHistory.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAcF,iDAAiD;IACjD,IAAM,YAAY,GAAQ;QACtB,qBAAqB;QACrB,UAAU,EAAE,UAAS,WAAW;YAC5B,IAAM,QAAQ,GAAG,WAAW,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;YACtD,IAAM,MAAM,GAAG;gBACX,WAAW;gBACX,oBAAoB;gBACpB,gBAAgB;gBAChB,yBAAyB;aAC5B,CAAC;YACF,IAAI,6BAAa,CAAC,GAAG,CAAC,uCAAuC,EAAE,KAAK,CAAC,EAAE;gBACnE,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBACjC,MAAM,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;aAC7C;YACD,QAAQ,CAAC,gBAAgB,CAAC;gBACtB,IAAI,EAAE,iBAAiB;gBACvB,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,oBAAoB;gBAC1B,eAAe,EAAE;oBACb,IAAI,EAAE,wBAAwB;oBAC9B,WAAW,EAAE,0BAA0B;oBACvC,SAAS,EAAE,KAAK,CAAC,wCAAwC,CACrD,yCAAyC,CAC5C;iBACJ;aACJ,CAAC,CAAC;YACH,QAAQ,CAAC,gBAAgB,CAAC;gBACtB,IAAI,EAAE,gBAAgB;gBACtB,MAAM,EAAE,CAAC,gCAAgC,CAAC;gBAC1C,IAAI,EAAE,uBAAuB;gBAC7B,eAAe,EAAE;oBACb,IAAI,EAAE,2BAA2B;oBACjC,WAAW,EAAE,kCAAkC;oBAC/C,SAAS,EAAE,KAAK,CAAC,wCAAwC,CACrD,wCAAwC,CAC3C;iBACJ;aACJ,CAAC,CAAC;QACP,CAAC;KACJ,CAAC;IAEF,OAAS,YAAY,CAAC","file":"OrderHistory.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"OrderHistory\"/>\n\n// Implements the experience of seeing all the customer Orders experience,\n// this is the 'Order History' experience in MyAccount.\n// Includes the Order module (Model, Collection, Views, Router);\n\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\n\nimport OrderHistoryListView = require('./OrderHistory.List.View');\nimport OrderHistoryDetailsView = require('./OrderHistory.Details.View');\n\n// @class OrderHistory @extends ApplicationModule\nconst OrderHistory: any = {\n    // @method mountToApp\n    mountToApp: function(application) {\n        const pageType = application.getComponent('PageType');\n        const routes = [\n            'purchases',\n            'purchases?:options',\n            'open-purchases',\n            'open-purchases?:options'\n        ];\n        if (Configuration.get('siteSettings.isSCISIntegrationEnabled', false)) {\n            routes.push('instore-purchases');\n            routes.push('instore-purchases?:options');\n        }\n        pageType.registerPageType({\n            name: 'PurchaseHistory',\n            routes: routes,\n            view: OrderHistoryListView,\n            defaultTemplate: {\n                name: 'order_history_list.tpl',\n                displayName: 'Purchase history default',\n                thumbnail: Utils.getThemeAbsoluteUrlOfNonManagedResources(\n                    'img/default-layout-transaction-list.png'\n                )\n            }\n        });\n        pageType.registerPageType({\n            name: 'PurchaseDetail',\n            routes: ['purchases/view/:recordtype/:id'],\n            view: OrderHistoryDetailsView,\n            defaultTemplate: {\n                name: 'order_history_details.tpl',\n                displayName: 'Purchase history details default',\n                thumbnail: Utils.getThemeAbsoluteUrlOfNonManagedResources(\n                    'img/default-layout-purchase-detail.png'\n                )\n            }\n        });\n    }\n};\n\nexport = OrderHistory;\n"]}