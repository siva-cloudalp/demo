{"version":3,"sources":["Transaction.Line.Views.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAUF,IAAM,oBAAoB,GAAQ;QAC9B,8FAA8F;QAC9F,iBAAiB;QACjB,UAAU,EAAE;YACR,IAAM,sCAAsC,GAAG;gBAC3C,4CAA4C,EAAE,0CAA0C;gBACxF,kDAAkD,EAAE,gDAAgD;aACvG,CAAC;YACF,IAAM,YAAY,GAAG,6BAAa,CAAC,GAAG,CAAC,kCAAkC,EAAE,EAAE,CAAC,CAAC;YAC/E,IAAM,wCAAwC,GAAG,6BAAa,CAAC,GAAG,CAC9D,6CAA6C,EAC7C,EAAE,CACL,CAAC;YACF,IAAM,0BAA0B,GAAG,EAAE,CAAC;YACtC,IAAI,yBAAyB,GAAG,KAAK,CAAC;YAEtC,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,UAAS,WAAgB;gBAC1C,IACI,WAAW,CAAC,gBAAgB;oBAC5B,sCAAsC,CAAC,WAAW,CAAC,gBAAgB,CAAC,EACtE;oBACE,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,IAAI,EAAE,CAAC;oBACpD,WAAW,CAAC,SAAS,CAAC,QAAQ;wBAC1B,sCAAsC,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;iBAC5E;YACL,CAAC,CAAC,CAAC;YAEH,CAAC,CAAC,IAAI,CAAC,wCAAwC,EAAE,UAAS,yBAA8B;gBACpF,IAAI,sCAAsC,CAAC,yBAAyB,CAAC,QAAQ,CAAC,EAAE;oBAC5E,0BAA0B,CAAC,yBAAyB,CAAC,IAAI,CAAC;wBACtD,sCAAsC,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;oBAC/E,yBAAyB,GAAG,IAAI,CAAC;iBACpC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,yBAAyB,EAAE;gBAC3B,KAAK,CAAC,iBAAiB,CACnB,6BAAa,EACb,6CAA6C,EAC7C,0BAA0B,CAC7B,CAAC;aACL;QACL,CAAC;KACJ,CAAC;IAEF,OAAS,oBAAoB,CAAC","file":"Transaction.Line.Views.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Transaction.Line.Views\"/>\n\nimport * as _ from 'underscore';\nimport * as transaction_line_views_selected_option_tpl from 'transaction_line_views_selected_option.tpl';\nimport * as transaction_line_views_selected_option_color_tpl from 'transaction_line_views_selected_option_color.tpl';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nconst TransactionLineViews: any = {\n    // @method mountToApp Initialize the item options configuration related with transaction lines\n    // @return {Void}\n    mountToApp: function() {\n        const transaction_line_view_options_selected = {\n            'transaction_line_views_selected_option.tpl': transaction_line_views_selected_option_tpl,\n            'transaction_line_views_selected_option_color.tpl': transaction_line_views_selected_option_color_tpl\n        };\n        const item_options = Configuration.get('ItemOptions.optionsConfiguration', []);\n        const configuration_default_selected_templates = Configuration.get(\n            'ItemOptions.defaultTemplates.selectedByType',\n            []\n        );\n        const default_selected_templates = {};\n        let default_template_selected = false;\n\n        _.each(item_options, function(item_option: any) {\n            if (\n                item_option.templateSelected &&\n                transaction_line_view_options_selected[item_option.templateSelected]\n            ) {\n                item_option.templates = item_option.templates || {};\n                item_option.templates.selected =\n                    transaction_line_view_options_selected[item_option.templateSelected];\n            }\n        });\n\n        _.each(configuration_default_selected_templates, function(default_selected_template: any) {\n            if (transaction_line_view_options_selected[default_selected_template.template]) {\n                default_selected_templates[default_selected_template.type] =\n                    transaction_line_view_options_selected[default_selected_template.template];\n                default_template_selected = true;\n            }\n        });\n\n        if (default_template_selected) {\n            Utils.setPathFromObject(\n                Configuration,\n                'ItemOptions.defaultTemplates.selectedByType',\n                default_selected_templates\n            );\n        }\n    }\n};\n\nexport = TransactionLineViews;\n"]}