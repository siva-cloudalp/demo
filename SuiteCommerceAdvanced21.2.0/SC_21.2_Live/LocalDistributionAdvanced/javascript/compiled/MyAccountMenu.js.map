{"version":3,"sources":["MyAccountMenu.ts"],"names":[],"mappings":"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","file":"MyAccountMenu.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"MyAccountMenu\"/>\nimport * as _ from 'underscore';\nimport { EventEmitter, DefaultEventEmitter } from '../../../Commons/Core/JavaScript/EventEmitter';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\n\ninterface BasicMenu {\n    id: string;\n    name: string;\n    index: number;\n    permissionOperator?: 'AND' | 'OR';\n    permission?: string;\n}\nexport interface Entry extends BasicMenu {\n    url?: string;\n}\nexport interface SubEntry extends BasicMenu {\n    entryId: string;\n    url: string;\n}\n\ninterface MyAccountMenuEvents {\n    entriesChanged: () => void;\n}\n\nexport interface Menu extends Entry {\n    children: SubEntry[];\n    showChildren: boolean;\n}\n\nexport class MyAccountMenu {\n    private readonly emitter: EventEmitter<MyAccountMenuEvents>;\n\n    private readonly entries: Entry[];\n\n    private readonly subEntries: SubEntry[];\n\n    private static instance: MyAccountMenu;\n\n    private correctUrl(url: string = '') {\n        if (url && url[0] !== '/') {\n            return `/${url}`;\n        }\n\n        return url;\n    }\n\n    public constructor() {\n        this.entries = [];\n        this.emitter = new DefaultEventEmitter();\n        this.entries = [];\n        this.subEntries = [];\n    }\n\n    public addEntry(entry: Entry): void {\n        if (!_.some(this.entries, elem => elem.id === entry.id)) {\n            entry.url = this.correctUrl(entry.url);\n            this.entries.push(entry);\n            this.getEmitter().emit('entriesChanged');\n        }\n    }\n\n    public addSubEntry(subEntry: SubEntry) {\n        if (!_.some(this.subEntries, elem => elem.id === subEntry.id)) {\n            subEntry.url = this.correctUrl(subEntry.url);\n            this.subEntries.push(subEntry);\n            this.getEmitter().emit('entriesChanged');\n        }\n    }\n\n    public replaceEntry(entryId: string, newEntry: Entry): void {\n        const entryToDelete = _.find(this.entries, entry => entry.id === entryId);\n        if (entryToDelete) {\n            this.entries.splice(this.entries.indexOf(entryToDelete), 1);\n            this.addEntry(newEntry);\n            this.getEmitter().emit('entriesChanged');\n        }\n    }\n\n    public replaceSubEntry(subEntryId: string, newSubEntry: SubEntry) {\n        const subEntryToDelete = _.find(this.subEntries, entry => entry.id === subEntryId);\n        if (subEntryToDelete) {\n            this.subEntries.splice(this.subEntries.indexOf(subEntryToDelete), 1);\n            this.addSubEntry(newSubEntry);\n        }\n    }\n\n    private remove(menu: BasicMenu[], id: string): void {\n        const toDelete = _.find(menu, entry => entry.id === id);\n        if (toDelete) {\n            menu.splice(menu.indexOf(toDelete), 1);\n            this.getEmitter().emit('entriesChanged');\n        }\n    }\n\n    public removeEntry(entryId: string) {\n        this.remove(this.entries, entryId);\n    }\n\n    public removeSubEntry(subEntryId: string) {\n        this.remove(this.subEntries, subEntryId);\n    }\n\n    public getEmitter() {\n        return this.emitter;\n    }\n\n    public getEntries(): Menu[] {\n        const order = (a, b) => a.index - b.index;\n        const entries = this.entries.sort(order);\n        const menu: Menu[] = [];\n        _.each(entries, (entry: Entry) => {\n            const menuEntry = { ...entry, children: [], showChildren: false };\n            menuEntry.children = _.filter(\n                this.subEntries,\n                subEntry => subEntry.entryId === entry.id\n            ).sort(order);\n            menuEntry.showChildren = menuEntry.url !== '' ? false : menuEntry.children.length > 0;\n            menu.push(menuEntry);\n        });\n        return menu;\n    }\n\n    public getMenuIdByUrl(url: string): string {\n        const menu = _.find(this.entries, entry => entry.url === url);\n        if (menu) {\n            return menu.id;\n        }\n        const subMenu = _.find(this.subEntries, subEntry => subEntry.url === url);\n        return subMenu ? subMenu.id : '';\n    }\n\n    public static getInstance() {\n        this.instance = this.instance || new MyAccountMenu();\n        return this.instance;\n    }\n}\n"]}