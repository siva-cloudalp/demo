{"version":3,"sources":["GoogleTagManager.Model.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IASF,OAAS,aAAa,CAAC,MAAM,CAAC;QAC1B,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC,sCAAsC,CAAC;QAErE,YAAY,EAAE,UAAS,IAAI;YACvB,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YAEnC,IAAM,IAAI,GAAG,IAAI,CAAC;YAElB,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;YACxB,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAS,MAAM;gBAC5B,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;gBAClC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;gBAC1C,QAAQ,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;YAEH,OAAO,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC9B,CAAC;QACD,SAAS,EAAE,UAAS,IAAI;YACpB,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;YACnC,IAAM,IAAI,GAAG,IAAI,CAAC;YAElB,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;gBACb,QAAQ,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;YAEH,OAAO,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC9B,CAAC;KACJ,CAAC,CAAC","file":"GoogleTagManager.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"GoogleTagManager.Model\"/>\n\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\n\nimport BackboneModel = require('../../../Commons/BackboneExtras/JavaScript/Backbone.Model');\n\nexport = BackboneModel.extend({\n    urlRoot: Utils.getAbsoluteUrl('services/GoogleTagManager.Service.ss'),\n\n    getDataLayer: function(data) {\n        const deferred = jQuery.Deferred();\n\n        const self = this;\n\n        self.set('id', data.id);\n        self.set('events', data.events);\n        this.save().done(function(result) {\n            self.set('events', result.events);\n            self.set('internalid', result.internalid);\n            deferred.resolve();\n        });\n\n        return deferred.promise();\n    },\n    saveEvent: function(data) {\n        const deferred = jQuery.Deferred();\n        const self = this;\n\n        this.set('events', data);\n        self.save().done(function() {\n            deferred.resolve();\n        });\n\n        return deferred.promise();\n    }\n});\n"]}