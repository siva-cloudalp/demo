{"version":3,"sources":["CMSadapter.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAmBF,OAAS;QACL,YAAY,EAAE,UAAS,WAAW;YAC9B,IAAI,6BAAa,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;gBACjC,WAAW,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,CAAC;gBAEhE,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;gBAEhD,IAAI,CAAC,eAAe,GAAG,IAAI,sBAAsB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;gBACvE,IAAI,CAAC,0BAA0B,CAAC,WAAW,CAAC,CAAC;gBAE7C,IAAI,6BAAa,CAAC,GAAG,CAAC,oBAAoB,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,aAAa,EAAE;oBACrE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;iBACxC;qBAAM;oBACH,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;iBACzC;aACJ;YAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAC9C,CAAC;QAED,UAAU,EAAE,SAAS,UAAU,CAAC,WAAW,EAAE,MAAM;YAC/C,IAAM,IAAI,GAAG,IAAI,CAAC;YAElB,MAAM;iBACD,SAAS,CAAC,OAAO,GAAG,6BAAa,CAAC,GAAG,CAAC,oBAAoB,CAAC,GAAG,SAAS,CAAC;iBACxE,IAAI,CAAC;gBACF,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;QACX,CAAC;QAED,WAAW,EAAE,SAAS,WAAW,CAAC,WAAW,EAAE,aAAa;YACxD,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;gBAC5B,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,GAAG,EAAE,aAAa,CAAC,CAAC;gBAEvD,QAAQ,CAAC,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;aACvC;QACL,CAAC;QAED,cAAc,EAAE,MAAM,CAAC,IAAI;QAE3B,0BAA0B,EAAE,MAAM,CAAC,IAAI;QAEvC,gBAAgB,EAAE,MAAM,CAAC,IAAI;QAE7B,gBAAgB,EAAE,MAAM,CAAC,IAAI;KAChC,CAAC","file":"CMSadapter.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CMSadapter\"/>\n/// <reference path=\"../../../Commons/Utilities/JavaScript/GlobalDeclarations.d.ts\" />\n/// <reference path=\"./CMS.d.ts\" />\n\nimport * as jQuery from '../../../Commons/Core/JavaScript/jQuery';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\n\nimport CMSadapterImplEnhanced = require('./CMSadapter.Impl.Enhanced');\nimport CMSadapterComponent = require('./CMSadapter.Component');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\n/* global CMS: false */\n// @module CMSadapter\n\n// @class CMSadapter responsible of starting both the adapter implementation.\n// Assumes cms.js is already loaded\n// @extend ApplicationModule\nexport = {\n    mountAdapter: function(application) {\n        if (Configuration.get('cms.useCMS')) {\n            application.registerComponent(CMSadapterComponent(application));\n\n            const routes = this.initPageRoutes(application);\n\n            this.adapterEnhanced = new CMSadapterImplEnhanced(application, routes);\n            this.installBackboneViewPlugins(application);\n\n            if (Configuration.get('cms.adapterVersion') === '2' || SC.isDevelopment) {\n                this.loadScript(application, routes);\n            } else {\n                this.initAdapter(application, routes);\n            }\n        }\n\n        return this.postMountAdapter(application);\n    },\n\n    loadScript: function loadScript(application, routes) {\n        const self = this;\n\n        jQuery\n            .getScript('/cms/' + Configuration.get('cms.adapterVersion') + '/cms.js')\n            .done(function() {\n                self.initAdapter(application, routes);\n            });\n    },\n\n    initAdapter: function initAdapter(application, landingRouter) {\n        if (typeof CMS !== 'undefined') {\n            this.initAdapterImpls(application, CMS, landingRouter);\n\n            Backbone.trigger('cms:loaded', CMS);\n        }\n    },\n\n    initPageRoutes: jQuery.noop,\n\n    installBackboneViewPlugins: jQuery.noop,\n\n    initAdapterImpls: jQuery.noop,\n\n    postMountAdapter: jQuery.noop\n};\n"]}