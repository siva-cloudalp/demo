{"version":3,"sources":["LoginRegister.CheckoutAsGuest.View.ts"],"names":[],"mappings":"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","file":"LoginRegister.CheckoutAsGuest.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"LoginRegister.CheckoutAsGuest.View\"/>\n\nimport * as _ from 'underscore';\nimport * as checkout_as_guest_tpl from 'login_register_checkout_as_guest.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\nimport { ProfileModel } from '../../../Commons/Profile/JavaScript/Profile.Model';\n\nimport AccountRegisterAsGuestModel = require('../../Account/JavaScript/Account.RegisterAsGuest.Model');\nimport Tracker = require('../../../Commons/Tracker/JavaScript/Tracker');\nimport LiveOrderModel = require('../../../Commons/LiveOrder/JavaScript/LiveOrder.Model');\nimport BackboneFormView = require('../../../Commons/Backbone.FormView/JavaScript/Backbone.FormView');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @class LoginRegister.CheckoutAsGuest.View Implements\n// the checkout-as-guest UI bu showing a checkout-as-guest button\n// that when clicked it will first register the current user as guest\n// and then shows the checkout wizard @extend BackboneView\nconst LoginRegisterCheckoutAsGuestView: any = BackboneView.extend({\n    template: checkout_as_guest_tpl,\n\n    attributes: {\n        id: 'checkout-as-guest',\n        class: 'view checkout-as-guest'\n    },\n\n    events: {\n        'submit form': 'submitForm'\n    },\n\n    bindings: {\n        '[name=\"firstname\"]': 'firstname',\n        '[name=\"lastname\"]': 'lastname',\n        '[name=\"email\"]': 'email'\n    },\n\n    initialize: function(options) {\n        this.application = options.application;\n        this.parentView = options.parentView;\n        this.hideRegister = options.hideRegister;\n        // @property {Account.RegisterAsGuest.Model} model\n        this.model = new AccountRegisterAsGuestModel();\n        // on save we redirect the user out of the registration page\n        // as we know there hasn't been an error\n\n        BackboneFormView.add(this);\n    },\n\n    // @method trackEvent responsible of notifying the Tracker that the guest-checkout operation was made\n    trackEvent: function(callback: Function) {\n        Tracker.getInstance().trackCheckoutAsGuest({\n            category: 'Checkout - User Interaction',\n            action: 'Checkout As Guest',\n            callback: callback\n        });\n    },\n\n    submitForm: function(e) {\n        e.preventDefault();\n        this.$el.find('.login-register-checkout-as-guest-submit').attr('disabled', 'true');\n\n        const promise = BackboneFormView.saveForm.apply(this, arguments);\n\n        if (promise) {\n            promise.done(response => {\n                this.redirect(null, response);\n            });\n        }\n        return promise;\n    },\n\n    // @method redirect after the checkout-as-guest operation was successfully made this method is in\n    // responsible of navigating to the checkout wizard page. Remember that both login and checkout touchpoints belongs to the same\n    // checkout.ssp so we don't need to reload the page.\n    redirect: function(context, response) {\n        const { application } = this;\n        const profile_model = ProfileModel.getInstance();\n\n        this.$('[type=\"submit\"]').attr('disabled', true);\n\n        response.user && profile_model.set(response.user);\n        response.cart && LiveOrderModel.getInstance().set(response.cart);\n        response.address && profile_model.get('addresses').reset(response.address);\n        response.paymentmethod && profile_model.get('paymentmethods').reset(response.paymentmethod);\n\n        // Track Guest Checkout Event\n        this.trackEvent(function() {\n            // First we track the event of login in as guest, and after that we\n            // change the current touch-point form register to checkout\n            // this is necessary to the navigation helper and some routers to work properly\n            application.setConfig('currentTouchpoint', 'checkout');\n            Backbone.history.navigate('', { trigger: true });\n        });\n    },\n\n    // @method getContext @return {LoginRegister.CheckoutAsGuest.View.Context}\n    getContext: function() {\n        const url_options = Utils.parseUrlOptions(window.location.search);\n\n        // @class LoginRegister.CheckoutAsGuest.View.Context\n        return {\n            // @property {Boolean} isRedirect\n            isRedirect: !!(url_options.is !== 'checkout' && url_options.origin !== 'checkout'),\n            // @property {Boolean} hideRegister\n            hideRegister: this.hideRegister,\n            // @property {Boolean} hideGuestFirstandLastname\n            showGuestFirstandLastname: Configuration.get('forms.loginAsGuest.showName'),\n            // @property {Boolean} showEmail\n            showGuestEmail: Configuration.get('forms.loginAsGuest.showEmail'),\n            // @property {Boolean} expandGuestUserEnabled\n            expandGuestUserEnabled:\n                Configuration.get('forms.loginAsGuest.showName') ||\n                Configuration.get('forms.loginAsGuest.showEmail'),\n            // @property {String} buttonCheckoutAsGuestText\n            buttonCheckoutAsGuestText: Configuration.get(\n                'forms.loginAsGuest.buttonCheckoutAsGuestText'\n            )\n        };\n    }\n});\n\nexport = LoginRegisterCheckoutAsGuestView;\n"]}