{"version":3,"sources":["LiveOrder.Line.Collection.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAYF,OAAS,yBAAyB,CAAC,MAAM,CAAC;QACtC,KAAK,EAAE,kBAAkB;QAEzB,GAAG,EAAE,KAAK,CAAC,cAAc,CAAC,oCAAoC,CAAC;QAC/D,IAAI,EAAE;YAAS,cAAO;iBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;gBAAP,yBAAO;;YAClB,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,MAAM,CACzC,CAAC,CAAC,IAAI,CAAC,UAAS,IAAI,EAAE,MAAM,EAAE,GAAG;gBAC7B,IAAI;oBACA,IAAI,GAAG,CAAC,iBAAiB,EAAE;wBACvB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC,CAAC;qBACjE;iBACJ;gBAAC,OAAO,CAAC,EAAE;oBACR,OAAO,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;iBAC7D;YACL,CAAC,EAAE,IAAI,CAAC,CACX,CAAC;QACN,CAAC;QAED,cAAc,EAAE,UAAS,GAAG;YACxB,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gBACzD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;aAC1B;YAED,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;aACrD;iBAAM;gBACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC/B;QACL,CAAC;QAED,eAAe,EAAE;YACb,OAAO,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;QACD,qBAAqB,EAAE,UAAS,oBAAoB;YAChD,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC9D,CAAC;KACJ,CAAC,CAAC","file":"LiveOrder.Line.Collection.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"LiveOrder.Line.Collection\"/>\n\nimport * as _ from 'underscore';\n\nimport * as Utils from '../../Utilities/JavaScript/Utils';\n\nimport TransactionLineCollection = require('../../../Commons/Transaction/JavaScript/Transaction.Line.Collection');\nimport LiveOrderLineModel = require('../../../Commons/LiveOrder/JavaScript/LiveOrder.Line.Model');\nimport Backbone = require('../../Core/JavaScript/backbone/backbone');\n\nexport = TransactionLineCollection.extend({\n    model: LiveOrderLineModel,\n\n    url: Utils.getAbsoluteUrl('services/LiveOrder.Line.Service.ss'),\n    sync: function(...args) {\n        return Backbone.sync.apply(this, args).always(\n            _.bind(function(body, status, xhr) {\n                try {\n                    if (xhr.getResponseHeader) {\n                        this.addOperationId(xhr.getResponseHeader('x-n-operationid'));\n                    }\n                } catch (e) {\n                    console.error('Error fetching Operation Id from header.');\n                }\n            }, this)\n        );\n    },\n\n    addOperationId: function(ids) {\n        if (!this.operationIds || !Array.isArray(this.operationIds)) {\n            this.operationIds = [];\n        }\n\n        if (Array.isArray(ids)) {\n            this.operationIds = this.operationIds.concat(ids);\n        } else {\n            this.operationIds.push(ids);\n        }\n    },\n\n    getOperationIds: function() {\n        return this.operationIds;\n    },\n    getLatestOperationIds: function(lastOperationIdIndex) {\n        return this.getOperationIds().slice(lastOperationIdIndex);\n    }\n});\n"]}