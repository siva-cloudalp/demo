{"version":3,"sources":["Address.Details.View.ts"],"names":[],"mappings":"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","file":"Address.Details.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Address.Details.View\"/>\n\nimport * as _ from 'underscore';\nimport '../../Utilities/JavaScript/Utils';\nimport * as address_tpl from 'address_details.tpl';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\n\nimport BackboneView = require('../../BackboneExtras/JavaScript/Backbone.View');\n\nexport type AddressDetailsView = any;\n\n// @class Address.View @extend Backbone.View\nexport const AddressDetailsView: any = BackboneView.extend({\n    // @property {Function} template\n    template: address_tpl,\n\n    // @property {Object} attributes\n    attributes: {\n        class: 'AddressDetailsView'\n    },\n\n    // @method initialize Attach to any change on the model and make a render on this changes\n    // @return {Void}\n    initialize: function() {\n        this.model.on('sync', _.bind(this.render, this));\n    },\n\n    destroy: function destroy() {\n        this.model.off('sync', this);\n        return this._destroy();\n    },\n\n    // @method getContext @return Address.View.Context\n    getContext: function() {\n        const label = this.model.get('label');\n        const company =\n            Configuration.get('siteSettings.registration.displaycompanyfield') === 'T'\n                ? this.model.get('company')\n                : null;\n        const fullname = this.model.get('fullname');\n        const countries = Configuration.get('siteSettings.countries', []);\n        const country_object = countries[this.model.get('country')];\n        const country = country_object ? country_object.name : this.model.get('country');\n        const state_object = country_object && country_object.states ? <any>_.findWhere(\n                      countries[this.model.get('country')].states,\n                      {\n                          code: this.model.get('state')\n                      }\n                  ) : null;\n        const state = state_object ? state_object.name : this.model.get('state');\n        const invalidAttributes = this.model.getInvalidAttributes() || [];\n\n        // @class Address.View.Context\n        return {\n            // @property {Address.Model} model\n            model: this.model,\n            // @property {String} internalid\n            internalid: this.model.get('internalid'),\n            // @property {Boolean} isManageOptionsSpecified\n            isManageOptionsSpecified: !!this.options.manage,\n            // @property {String} manageOption\n            manageOption: this.options.manage,\n            // @property {Boolean} showMultiSelect\n            showMultiSelect: this.options.showMultiSelect,\n            // @property {Boolean} isAddressCheck\n            isAddressCheck: !!this.model.get('check'),\n            // @property {String} title\n            title: label || company || fullname,\n            // @property {Boolean} showCompanyAndFullName\n            showCompanyAndFullName: !!(label && company),\n            // @property {String} company\n            company: company,\n            // @property {String} fullname\n            fullname: fullname,\n            // @property {Boolean} showFullNameOnly\n            showFullNameOnly: !!(label ? !company : company),\n            // @property {String} addressLine1\n            addressLine1: this.model.get('addr1'),\n            // @property {Boolean} showAddressLine1\n            showAddressLine1: !!this.model.get('addr2'),\n            // @property {String} addressLine2\n            addressLine2: this.model.get('addr2'),\n            // @property {String} city\n            city: this.model.get('city'),\n            // @property {Boolean} showState\n            showState: !!this.model.get('state'),\n            // @property {String} state\n            state: state,\n            // @property {String} zip\n            zip: this.model.get('zip'),\n            // @property {String} country\n            country: country,\n            // @property {String} phone\n            phone: this.model.get('phone'),\n            // @property {Boolean} showDefaultLabels\n            showDefaultLabels: !this.options.hideDefaults,\n            // @property {Boolean} isDefaultShippingAddress\n            isDefaultShippingAddress: this.model.get('defaultshipping') === 'T',\n            // @property {Boolean} isDefaultBillingAddress\n            isDefaultBillingAddress: this.model.get('defaultbilling') === 'T',\n            // @property {Boolean} showSelectionButton\n            showSelectionButton: !!this.options.showSelect,\n            // @property {Boolean} isASelectMessageSpecified\n            isASelectMessageSpecified: !!this.options.selectMessage,\n            // @property {String} selectMessage\n            selectMessage: this.options.selectMessage,\n            // @property {Boolean} showActionButtons\n            showActionButtons: !this.options.hideActions,\n            // @property {Boolean} showChangeButton\n            showChangeButton: !!this.options.showChangeButton,\n            // @property {Boolean} showRemoveButton\n            showRemoveButton: !this.options.hideRemoveButton,\n            // @property {Boolean} showError\n            showError:\n                this.options.showError &&\n                this.model.get('isvalid') &&\n                this.model.get('isvalid') !== 'T' &&\n                invalidAttributes.length,\n            // @property {Array<Object>} invalidAttributes\n            invalidAttributes: invalidAttributes,\n            // @property {Boolean} isInvalidAddressToRemove\n            isInvalidAddressToRemove: !!(\n                this.options.disableRemoveButton &&\n                this.options.disableRemoveButton(this.model.get('internalid'))\n            ),\n            // @property {Boolean} isSelected\n            isSelected:\n                this.options.hideSelector ||\n                this.model.get('internalid') === this.options.selectedAddressId,\n            // @property {Boolean} showSelector\n            showSelector: !this.options.hideSelector,\n            // @property {Boolean} isNewAddress\n            isNewAddress: this.model.get('internalid') < 0\n        };\n    }\n});\n"]}