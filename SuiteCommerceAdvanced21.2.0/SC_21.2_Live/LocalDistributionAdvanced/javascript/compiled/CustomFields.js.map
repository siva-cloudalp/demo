{"version":3,"sources":["CustomFields.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAUF,yBAAyB;IACzB,IAAM,YAAY,GAAQ;QACtB,UAAU,EAAE;YACR,+CAA+C;YAC/C,SAAS,YAAY,CAAC,KAAU;gBAC5B,IAAM,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnD,IAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;gBACrC,mCAAmC;gBACnC,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;oBAClC,IAAI,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,IAAI,KAAK,UAAU,EAAE;wBACnE,OAAO,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;qBACzD;yBAAM;wBACH,OAAO,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;qBACxE;iBACJ;qBAAM;oBACH,OAAO,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;iBACpD;gBACD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YACvC,CAAC;YAED,UAAU,CAAC,SAAS,CAAC,0BAA0B,CAAC,OAAO,CAAC;gBACpD,IAAI,EAAE,mDAAmD;gBACzD,OAAO,EAAE,UAAS,cAAmB;oBACjC,mGAAmG;oBACnG,IAAM,0BAA0B,GAAG,cAAc,CAAC,UAAU,CAAC;oBAC7D,cAAc,CAAC,UAAU,GAAG;wBACxB,IAAM,OAAO,GAAG,0BAA0B,CAAC,KAAK,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;wBAC5E,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;4BAChB,OAAO,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC;yBACxC;wBACD,cAAc,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,IAAI,EAAE,CAAC;wBACpD,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,UACjC,WAAgB,EAChB,SAAc;4BAEd,cAAc,CAAC,MAAM,CAAC,gBAAgB,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG,YAAY,CAAC;wBAC9E,CAAC,CAAC,CAAC;wBACH,OAAO,OAAO,CAAC;oBACnB,CAAC,CAAC;gBACN,CAAC;aACJ,CAAC,CAAC;QACP,CAAC;KACJ,CAAC;IAEF,OAAS,YAAY,CAAC","file":"CustomFields.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"CustomFields\"/>\n\nimport * as _ from 'underscore';\nimport * as jQuery from '../../Core/JavaScript/jQuery';\n\nimport Backbone = require('../../Utilities/JavaScript/backbone.custom');\nimport WizardStep = require('../../../Advanced/Wizard/JavaScript/Wizard.Step');\n\n// jshint validthis: true\nconst CustomFields: any = {\n    mountToApp: function() {\n        // update in the model the changed custom field\n        function updateOption(event: any) {\n            const options = _.clone(this.model.get('options'));\n            const optionName = event.target.name;\n            // support checkbox type of backend\n            if (event.target.type === 'checkbox') {\n                if (this.model.__customFieldsMetadata[optionName].type === 'checkbox') {\n                    options[optionName] = event.target.checked ? 'T' : '';\n                } else {\n                    options[optionName] = event.target.checked ? event.target.value : '';\n                }\n            } else {\n                options[optionName] = jQuery(event.target).val();\n            }\n            this.model.set('options', options);\n        }\n\n        WizardStep.prototype.afterModuleInstanceCreated.install({\n            name: 'custom-fields-wizard-step-module-instance-created',\n            execute: function(moduleInstance: any) {\n                // Add the model of the wizard to the context of all the modules to support transaction body fields\n                const originalGetContextFunction = moduleInstance.getContext;\n                moduleInstance.getContext = function() {\n                    const context = originalGetContextFunction.apply(moduleInstance, arguments);\n                    if (!context.model) {\n                        context.model = moduleInstance.model;\n                    }\n                    moduleInstance.events = moduleInstance.events || {};\n                    _.each(context.model.get('options'), function(\n                        optionValue: any,\n                        optionKey: any\n                    ) {\n                        moduleInstance.events['change [name=\"' + optionKey + '\"]'] = updateOption;\n                    });\n                    return context;\n                };\n            }\n        });\n    }\n};\n\nexport = CustomFields;\n"]}