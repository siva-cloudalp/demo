{"version":3,"sources":["RecordViews.Selectable.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAOF,8DAA8D;IAC9D,IAAM,yBAAyB,GAAQ,kCAAe,CAAC,MAAM,CAAC;QAC1D,gCAAgC;QAChC,QAAQ,EAAE,0BAA0B;QAEpC,MAAM,EAAE;YACJ,oCAAoC,EAAE,6BAA6B;SACtE;QAED,qHAAqH;QACrH,0BAA0B;QAC1B,iBAAiB;QACjB,2BAA2B,EAAE,SAAS,2BAA2B,CAAC,CAAC;YAC/D,CAAC,CAAC,eAAe,EAAE,CAAC;QACxB,CAAC;QAED,qBAAqB;QACrB,0DAA0D;QAC1D,iBAAiB;QAEjB,qBAAqB;QACrB,gDAAgD;QAChD,UAAU,EAAE;YACR,6CAA6C;YAC7C,OAAO;gBACH,mCAAmC;gBACnC,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,wBAAwB;gBACxB,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;gBACjB,gCAAgC;gBAChC,SAAS,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;gBACpC,+BAA+B;gBAC/B,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;gBACpC,gCAAgC;gBAChC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE;gBAC9C,kCAAkC;gBAClC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACtE,yBAAyB;gBACzB,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;oBACtB,CAAC,CAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,SAAI,IAAI,CAAC,OAAO,CAAC,QAAU;oBACrD,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC;gBAC3B,2BAA2B;gBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;gBAC9B,qDAAqD;gBACrD,OAAO,EAAE,IAAI,CAAC,gBAAgB,EAAE;aACnC,CAAC;QACN,CAAC;KACJ,CAAC,CAAC;IAEH,OAAS,yBAAyB,CAAC;;AAEnC,gDAAgD;AAChD,iEAAiE;AACjE,6FAA6F;AAE7F,8EAA8E;AAC9E,wBAAwB;AACxB,4BAA4B;AAC5B,6BAA6B;AAC7B,qDAAqD;AACrD,2BAA2B;AAC3B,yBAAyB;AACzB,gCAAgC;AAChC,qDAAqD","file":"RecordViews.Selectable.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"RecordViews.Selectable.View\"/>\n\nimport * as recordviews_selectable_tpl from 'recordviews_selectable.tpl';\nimport { RecordViewsView } from './RecordViews.View';\n\n// @class RecordViews.Selectable.View @extend RecordViews.View\nconst RecordViewsSelectableView: any = RecordViewsView.extend({\n    // @property {Function} template\n    template: recordviews_selectable_tpl,\n\n    events: {\n        'click [data-action=\"go-to-record\"]': 'stopPropagationOnNavigation'\n    },\n\n    // @method stopPropagationOnNavigation Auxiliary method to stop the propagation of the click over the navigation link\n    // @param {jQuery.Event} e\n    // @return {Void}\n    stopPropagationOnNavigation: function stopPropagationOnNavigation(e) {\n        e.stopPropagation();\n    },\n\n    // @method initialize\n    // @param {RecordViews.Selectable.View.Initialize} options\n    // @return {Void}\n\n    // @method getContext\n    // @return {RecordViews.Selectable.View.Context}\n    getContext: function() {\n        // @class RecordViews.Selectable.View.Context\n        return {\n            // @property {Backbone.Model} model\n            model: this.model,\n            // @property {String} id\n            id: this.model.id,\n            // @property {Boolean} isChecked\n            isChecked: !!this.model.get('check'),\n            // @property {Boolean} isActive\n            isActive: !!this.model.get('active'),\n            // @property {String} actionType\n            actionType: this.model.get('actionType') || '',\n            // @property {Boolean} isNavigable\n            isNavigable: !!(this.options.navigable || this.model.get('navigable')),\n            // @property {String} url\n            url: this.options.referrer\n                ? `${this.model.get('url')}/${this.options.referrer}`\n                : this.model.get('url'),\n            // @property {String} title\n            title: this.model.get('title'),\n            // @property {Array<RecordViews.View.Column>} columns\n            columns: this.normalizeColumns()\n        };\n    }\n});\n\nexport = RecordViewsSelectableView;\n\n// @class RecordViews.Selectable.View.Initialize\n// @property {RecordViews.Selectable.View.Initialize.Model} model\n// @property {Boolean} navigable This value will takes precedence over the value of the model\n\n// @class RecordViews.Selectable.View.Initialize.Model @extends Backbone.Model\n// @property {String} id\n// @property {Boolean} check\n// @property {Boolean} active\n// @property {String?} actionType Default value is ''\n// @property {String} title\n// @property {String} url\n// @property {Boolean} navigable\n// @property {Array<RecordViews.View.Column>} columns\n"]}