{"version":3,"sources":["Merchandising.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAmBF,OAAS,YAAY,CAAC,MAAM,CAAC;QACzB,QAAQ,EAAE,sBAAsB;QAEhC,gEAAgE;QAChE,iDAAiD;QACjD,sDAAsD;QACtD,UAAU,EAAE,UAAS,OAAO;YACxB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAC3B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YAE3B,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEzD,IAAM,IAAI,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,EAAE,CAAC,0BAA0B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;QACvE,CAAC;QAED,UAAU,EAAE;YACR,YAAY,EAAE;gBACV,IAAM,mBAAmB,GAAG,IAAI,sBAAsB,CAAC;oBACnD,SAAS,EAAE,4BAA4B;oBACvC,WAAW,EAAE,QAAQ;oBACrB,YAAY,EAAE,oCAAoC;oBAClD,WAAW,EAAE,mCAAmC;oBAChD,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBACjE,CAAC,CAAC;gBAEH,OAAO,mBAAmB,CAAC;YAC/B,CAAC;SACJ;QAED,qBAAqB;QACrB,UAAU,EAAE;YACR,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YAC9D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,6BAAa,CAAC,gBAAgB,CAAC,CAAC;QAC/E,CAAC;QAED,kEAAkE;QAClE,UAAU,EAAE;YACR,2CAA2C;YAC3C,OAAO;gBACH,+BAA+B;gBAC/B,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;gBAClC,wCAAwC;gBACxC,iBAAiB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC;gBAClD,qCAAqC;gBACrC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC;aACjD,CAAC;QACN,CAAC;KACJ,CAAC,CAAC","file":"Merchandising.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Merchandising.View\"/>\n\nimport * as _ from 'underscore';\nimport * as merchandising_zone_tpl from 'merchandising_zone.tpl';\nimport * as merchandising_zone_cell_template_tpl from 'merchandising_zone_cell_template.tpl';\nimport * as merchandising_zone_row_template_tpl from 'merchandising_zone_row_template.tpl';\nimport * as Utils from '../../../Commons/Utilities/JavaScript/Utils';\nimport { Configuration } from '../../SCA/JavaScript/Configuration';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\nimport BackboneCollectionView = require('../../../Commons/Backbone.CollectionView/JavaScript/Backbone.CollectionView');\nimport ItemRelationsRelatedItemView = require('../../../Commons/ItemRelations/JavaScript/ItemRelations.RelatedItem.View');\n\n// @module Merchandising\n\n// @class Merchandising.View Responsible for rendering the list of item requested by a merchandizing\n// rule @extend Backbone.View\nexport = BackboneView.extend({\n    template: merchandising_zone_tpl,\n\n    // @method initialize Creates a new instance of the current view\n    // @param {MerchandisingRule.Model} options.model\n    // @param {Merchandising.ItemCollection} options.items\n    initialize: function(options) {\n        this.model = options.model;\n        this.items = options.items;\n\n        BackboneView.prototype.initialize.apply(this, arguments);\n\n        const self = this;\n        this.on('afterMerchandAppendToDOM', _.bind(this.initSlider, self));\n    },\n\n    childViews: {\n        'Zone.Items': function() {\n            const itemsCollectionView = new BackboneCollectionView({\n                childView: ItemRelationsRelatedItemView,\n                viewsPerRow: Infinity,\n                cellTemplate: merchandising_zone_cell_template_tpl,\n                rowTemplate: merchandising_zone_row_template_tpl,\n                collection: _.first(this.items.models, this.model.get('show'))\n            });\n\n            return itemsCollectionView;\n        }\n    },\n\n    // @method initSlider\n    initSlider: function() {\n        const element = this.$el.find('[data-type=\"carousel-items\"]');\n        this.$slider = Utils.initBxSlider(element, Configuration.bxSliderDefaults);\n    },\n\n    // @method getContext @returns {Content.LandingPages.View.Context}\n    getContext: function() {\n        // @class Content.LandingPages.View.Context\n        return {\n            // @property {String} zoneTitle\n            zoneTitle: this.model.get('title'),\n            // @property {Boolean} isZoneDescription\n            isZoneDescription: !!this.model.get('description'),\n            // @property {Stirng} zoneDescription\n            zoneDescription: this.model.get('description')\n        };\n    }\n});\n"]}