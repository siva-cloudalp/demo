{"version":3,"sources":["Profile.Model.ts"],"names":[],"mappings":"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","file":"Profile.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Profile.Model\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\nimport { Configuration } from '../../Utilities/JavaScript/Configuration';\nimport { AddressCollection } from '../../Address/JavaScript/Address.Collection';\nimport { PaymentMethodCollection } from '../../../Advanced/PaymentMethod/JavaScript/PaymentMethod.Collection';\n\nimport Singleton = require('../../Main/JavaScript/Singleton');\nimport Backbone = require('../../Utilities/JavaScript/backbone.custom');\nimport BigNumber = require('../../Utilities/JavaScript/BigNumber');\nimport jQuery = require('../../Core/JavaScript/jQuery');\n\nconst classProperties: any = _.extend(\n    {\n        // @method getPromise\n        // @static\n        // @return {jQuery.Deferred}\n        getPromise: function() {\n            const self = this;\n\n            if (!SC.PROFILE_PROMISE) {\n                SC.PROFILE_PROMISE = jQuery.Deferred();\n                SC.PROFILE_PROMISE.then(function(profile) {\n                    delete SC.ENVIRONMENT.PROFILE;\n                    self.getInstance().set(profile);\n                });\n            }\n\n            // if the user.env has already loaded, resolve the profile promise if not already resolved\n            if (SC.ENVIRONMENT.PROFILE && SC.PROFILE_PROMISE.state() !== 'resolved') {\n                SC.PROFILE_PROMISE.resolve(SC.ENVIRONMENT.PROFILE);\n            }\n\n            return SC.PROFILE_PROMISE;\n        }\n    },\n    Singleton\n);\n// @class Profile.Model @extend Backbone.Model\nexport const ProfileModel: any = Backbone.Model.extend(\n    {\n        validation: {\n            firstname: {\n                required: true,\n                msg: Utils.translate('First Name is required')\n            },\n\n            // This code is commented temporally, because of the inconsistence between Checkout and My Account regarding the require data from profile information (Checkout can miss last name)\n            lastname: {\n                required: true,\n                msg: Utils.translate('Last Name is required')\n            },\n\n            email: {\n                required: true,\n                pattern: 'email',\n                msg: Utils.translate('Valid Email is required')\n            },\n            phone: {\n                required: true,\n                fn: Utils.validatePhone\n            },\n\n            companyname: {\n                required: function isCompanyRequired() {\n                    return (\n                        Configuration.get(\n                            'siteSettings.registration.companyfieldmandatory',\n                            'F'\n                        ) === 'T'\n                    );\n                },\n                msg: Utils.translate('Company Name is required')\n            },\n\n            // if the user wants to change its email we need ask for confirmation and current password.\n            // We leave this validation in this model, instead of creating a new one like UpdatePassword, because\n            // the email is updated in the same window than the rest of the attributes\n            confirm_email: function(confirm_email, attr, form) {\n                if (\n                    String(form.email).trim() !== this.attributes.email &&\n                    String(confirm_email).trim() !== String(form.email).trim()\n                ) {\n                    return Utils.translate('Emails do not match');\n                }\n            },\n\n            current_password: function(current_password, attr, form) {\n                if (\n                    String(form.email).trim() !== this.attributes.email &&\n                    (_.isNull(current_password) ||\n                        _.isUndefined(current_password) ||\n                        (_.isString(current_password) && String(current_password).trim() === ''))\n                ) {\n                    return Utils.translate('Current password is required');\n                }\n            }\n        },\n\n        urlRoot: Utils.getAbsoluteUrl('services/Profile.Service.ss'),\n\n        searchApiBaseUrl: '',\n\n        initialize: function initialize(attributes) {\n            this.on('change:addresses', function() {\n                this.get('addresses').on(\n                    'change:defaultshipping change:defaultbilling add destroy reset',\n                    this.checkDefaultsAddresses,\n                    this\n                );\n            });\n\n            this.on('change:balance', function(model) {\n                if (_.isNumber(model.get('creditlimit')) && _.isNumber(model.get('balance'))) {\n                    let balance_available;\n\n                    if (typeof BigNumber !== 'undefined') {\n                        balance_available = new BigNumber(model.get('creditlimit')).minus(\n                            model.get('balance')\n                        );\n                    } else {\n                        balance_available = model.get('creditlimit') - model.get('balance');\n                    }\n\n                    model.set('balance_available', balance_available);\n                    model.set(\n                        'balance_available_formatted',\n                        Utils.formatCurrency(balance_available)\n                    );\n                }\n            });\n\n            this.set('addresses', (attributes && attributes.addresses) || new AddressCollection());\n            this.set(\n                'paymentmethods',\n                (attributes && attributes.paymentmethods) || new PaymentMethodCollection()\n            );\n\n            this.on('change:paymentmethods', function(model, paymentmethods) {\n                model.set('paymentmethods', new PaymentMethodCollection(paymentmethods), {\n                    silent: true\n                });\n                this.get('paymentmethods').on(\n                    'change:ccdefault add destroy reset',\n                    this.checkDefaultsCreditCard,\n                    this\n                );\n            });\n            this.set('paymentmethodsach', (attributes && attributes.paymentmethodsach) || null);\n        },\n\n        // @method checkDefaultsAddresses\n        // @param {Profile.Model} model\n        // @return {Void}\n        checkDefaultsAddresses: function checkDefaultsAddresses(model) {\n            const addresses = this.get('addresses');\n            const Model = addresses.model;\n\n            if (model instanceof Model) {\n                // if the created/modified address is set as default for shipping we set every other one as not default\n                if (model.get('defaultshipping') === 'T') {\n                    _.each(addresses.where({ defaultshipping: 'T' }), function(address: any) {\n                        if (model !== address) {\n                            address.set({ defaultshipping: 'F' }, { silent: true });\n                        }\n                    });\n                }\n\n                // if the created/modified address is set as default for billing we set every other one as not default\n                if (model.get('defaultbilling') === 'T') {\n                    _.each(addresses.where({ defaultbilling: 'T' }), function(address: any) {\n                        if (model !== address) {\n                            address.set({ defaultbilling: 'F' }, { silent: true });\n                        }\n                    });\n                }\n            }\n        },\n\n        // @method checkDefaultsCreditCard\n        // @param {Profile.Model} model\n        // @return {Void}\n        checkDefaultsCreditCard: function(model) {\n            const creditcards = this.get('paymentmethods');\n            const Model = creditcards.model;\n\n            // if the created/modified card is set as default we set every other card as not default\n            if (model.get('ccdefault') === 'T') {\n                _.each(creditcards.where({ ccdefault: 'T' }), function(creditCard: any) {\n                    if (creditCard && model !== creditCard) {\n                        creditCard.set({ ccdefault: 'F' }, { silent: true });\n                    }\n                });\n            }\n\n            const default_creditcard = creditcards.find(function(model) {\n                return model.get('ccdefault') === 'T';\n            });\n\n            // set the default card in the collection as the profile's default card\n            this.set('defaultCreditCard', default_creditcard || new Model({ ccdefault: 'T' }));\n        },\n\n        // @method getSearchApiUrl\n        // @return {String}\n        getSearchApiUrl: function(): string {\n            // We've got to disable passwordProtectedSite and loginToSeePrices features if customer registration is disabled.\n            let searchApiUrl = '/api/items';\n            if (\n                Configuration.getRegistrationType() !== 'disabled' &&\n                (Configuration.get('siteSettings.requireloginforpricing', 'F') === 'T' ||\n                    Configuration.get('siteSettings.siteloginrequired', 'F') === 'T') &&\n                this.get('isLoggedIn') === 'T'\n            ) {\n                searchApiUrl = Utils.getAbsoluteUrl('searchApi.ssp');\n            } else if (Configuration.get('isNewSearchApiEnabled') === true) {\n                if (this.get('isLoggedIn') === 'T') {\n                    searchApiUrl = '/api/personalized/items';\n                } else {\n                    searchApiUrl = '/api/cacheable/items';\n                }\n            }\n            return `${this.searchApiBaseUrl}${searchApiUrl}`;\n        },\n\n        setSearchApiBaseUrl: function(setSearchApiBaseUrl): void {\n            this.searchApiBaseUrl = setSearchApiBaseUrl;\n        },\n\n        isAnnonymous: function() {\n            return this.get('isLoggedIn') === 'F' && this.get('isRecognized') === 'F';\n        },\n\n        isLoggedIn: function() {\n            return this.get('isLoggedIn') === 'T';\n        },\n\n        // @method isAvoidingDoubleRedirect\n        // @return {Boolean}\n        isAvoidingDoubleRedirect: function(force_avoid_redirect) {\n            // We've got to disable passwordProtectedSite and loginToSeePrices features if customer registration is disabled.\n            return force_avoid_redirect\n                ? false\n                : Configuration.getRegistrationType() !== 'disabled' &&\n                      (Configuration.get('siteSettings.requireloginforpricing', 'F') === 'T' ||\n                          Configuration.get('siteSettings.siteloginrequired', 'F') === 'T') &&\n                      this.get('isLoggedIn') === 'T';\n        },\n\n        // @method hidePrices Determines -when LoginToSeePrices feature is enabled- if the prices should be hidden.\n        // @return {Boolean}\n        hidePrices: function() {\n            // We've got to disable loginToSeePrices feature if customer registration is disabled.\n            return (\n                Configuration.getRegistrationType() !== 'disabled' &&\n                Configuration.get('siteSettings.requireloginforpricing', 'F') === 'T' &&\n                this.get('isLoggedIn') !== 'T'\n            );\n        },\n        set: function(key, val, options) {\n            // If the addresses attribute is not an instance of AddressCollection, will be converted into one.\n            // attributes both `\"key\", value` and `{key: value}` -style arguments.\n            let attributes: any = {};\n            if (typeof key === 'object') {\n                attributes = key;\n                options = val;\n            } else {\n                attributes[key] = val;\n            }\n            if (attributes.addresses && !(attributes.addresses instanceof AddressCollection)) {\n                attributes.addresses = new AddressCollection(attributes.addresses);\n            }\n\n            return Backbone.Model.prototype.set.call(this, attributes, options);\n        }\n    },\n    classProperties\n);\n\nexport type ProfileModel = any;\n"]}