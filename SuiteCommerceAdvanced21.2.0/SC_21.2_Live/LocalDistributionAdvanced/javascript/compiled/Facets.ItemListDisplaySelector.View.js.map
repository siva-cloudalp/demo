{"version":3,"sources":["Facets.ItemListDisplaySelector.View.ts"],"names":[],"mappings":"AAAA;;;;;EAKE;;;IAWF,OAAS,YAAY,CAAC,MAAM,CAAC;QACzB,QAAQ,EAAE,qCAAqC;QAE/C,4EAA4E;QAC5E,UAAU,EAAE;YACR,IAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;YAClC,IAAA,UAAU,GAAK,IAAI,CAAC,OAAO,WAAjB,CAAkB;YACpC,IAAM,sBAAsB,GAAG,EAAE,CAAC;YAElC,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,UAAS,WAAgB;gBAC1C,IAAM,qBAAqB,GAAG;oBAC1B,eAAe,EAAE,UAAU,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE;oBAC9E,QAAQ,EAAE,UAAU,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,WAAW,CAAC,EAAE;oBACjE,MAAM,EAAE,WAAW,CAAC,EAAE,KAAK,MAAM;oBACjC,IAAI,EAAE,WAAW,CAAC,IAAI;oBACtB,IAAI,EAAE,WAAW,CAAC,IAAI;iBACzB,CAAC;gBAEF,sBAAsB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;YAEH,qDAAqD;YACrD,OAAO;gBACH,mCAAmC;gBACnC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;gBAEzC,4BAA4B;gBAC5B,OAAO,EAAE,sBAAsB;aAClC,CAAC;YACF,6CAA6C;QACjD,CAAC;KACJ,CAAC,CAAC","file":"Facets.ItemListDisplaySelector.View.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"Facets.ItemListDisplaySelector.View\"/>\n\nimport * as _ from 'underscore';\n\nimport * as facets_item_list_display_selector_tpl from 'facets_item_list_display_selector.tpl';\n\nimport BackboneView = require('../../../Commons/BackboneExtras/JavaScript/Backbone.View');\n\n// @module Facets\nexport = BackboneView.extend({\n    template: facets_item_list_display_selector_tpl,\n\n    // @method getContext @returns {Facets.ItemListDisplaySelector.View.Context}\n    getContext: function() {\n        const option_items = this.options.options;\n        const { translator } = this.options;\n        const processed_option_items = [];\n\n        _.each(option_items, function(option_item: any) {\n            const processed_option_item = {\n                configOptionUrl: translator.cloneForOption('display', option_item.id).getUrl(),\n                isActive: translator.getOptionValue('display') === option_item.id,\n                isGrid: option_item.id === 'grid',\n                name: option_item.name,\n                icon: option_item.icon\n            };\n\n            processed_option_items.push(processed_option_item);\n        });\n\n        // @class Facets.ItemListDisplaySelector.View.Context\n        return {\n            // @property {String} configClasses\n            configClasses: this.options.configClasses,\n\n            // @property {Array} options\n            options: processed_option_items\n        };\n        // @class Facets.ItemListDisplaySelector.View\n    }\n});\n"]}