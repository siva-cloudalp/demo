{"version":3,"sources":["ProductList.Model.ts"],"names":[],"mappings":"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","file":"ProductList.Model.js","sourcesContent":["/*\n\tÂ© 2020 NetSuite Inc.\n\tUser may not copy, modify, distribute, or re-bundle or otherwise make available this code;\n\tprovided, however, if you are an authorized user with a NetSuite account or log-in, you\n\tmay use this code subject to the terms that govern your access and use.\n*/\n\n/// <amd-module name=\"ProductList.Model\"/>\n\nimport * as _ from 'underscore';\nimport * as Utils from '../../Utilities/JavaScript/Utils';\n\nimport ProductListItemCollection = require('./ProductList.Item.Collection');\nimport Backbone = require('../../../Commons/Utilities/JavaScript/backbone.custom');\n\nfunction validateLength(value, name) {\n    const max_length = 300;\n\n    if (value && value.length > max_length) {\n        return Utils.translate('$(0) must be at most $(1) characters', name, max_length);\n    }\n}\n\nfunction validateName(value, name) {\n    if (!value) {\n        return Utils.translate('Name is required');\n    }\n\n    return validateLength(value, name);\n}\n\n// @class ProductList.Model Model for handling Product Lists (CRUD) @extends Backbone.Model\nexport = Backbone.Model.extend({\n    urlRoot: Utils.getAbsoluteUrl('services/ProductList.Service.ss'),\n\n    defaults: {\n        name: '',\n        description: '',\n        items: new ProductListItemCollection(),\n        scopeId: '2',\n        scopeName: 'private',\n        typeId: '1',\n        typeName: 'default'\n    },\n\n    validation: {\n        name: { fn: validateName },\n\n        description: { fn: validateLength }\n    },\n\n    // redefine url to avoid possible cache problems from browser\n    url: function() {\n        const base_url = Backbone.Model.prototype.url.apply(this, arguments);\n        const url_params = { t: new Date().getTime() };\n\n        return Utils.addParamsToUrl(base_url, url_params);\n    },\n\n    initialize: function(attributes) {\n        this.on('change:items', function(model, items) {\n            if (model.previous('items') instanceof ProductListItemCollection) {\n                model.set('items', model.previous('items'), { silent: true });\n                model.get('items').reset(items);\n            } else {\n                model.set('items', new ProductListItemCollection(items), { silent: true });\n            }\n        });\n\n        this.trigger('change:items', this, (attributes && attributes.items) || []);\n    },\n\n    // @method checked Returns true if an item with id: pli_to_add_id and options: pli_to_add_options is already in this product list. Options could be empty. @param {String} item_to_add_id @param {Object}item_to_add_options\n    checked: function(line) {\n        return !!this.get('items').find(function(product_list_line) {\n            return product_list_line.isEqual(line);\n        });\n    },\n\n    // @method getOutOfStockItems Returns all the items which are out of stock.\n    // @param {ProductList.Item.Collection} items_to_check\n    // @returns {ProductList.Item.Collection}\n    getOutOfStockItems: function(items_to_check) {\n        const items = !_.isUndefined(items_to_check) ? items_to_check : this.get('items');\n\n        return items.filter(function(product_list_item) {\n            return !product_list_item.get('item').get('_isPurchasable');\n        });\n    },\n\n    // @method getNotPurchasableItemsDueToMinimumQuantity @param {ProductList.Item.Collection} items_to_check @returns {ProductList.Item.Collection} Returns all the items which do not fulfill minimum quantity requirements.\n    getNotPurchasableItemsDueToMinimumQuantity: function(items_to_check) {\n        const items = !_.isUndefined(items_to_check) ? items_to_check : this.get('items');\n\n        return items.filter(function(product_list_item) {\n            return !product_list_item.fulfillsMinimumQuantityRequirement();\n        });\n    },\n\n    // @method someCheckedItemsExist Returns true if at least one item is checked. @return{Boolean}\n    someCheckedItemsExist: function() {\n        return this.get('items').some(function(product_list_item) {\n            return product_list_item.get('checked');\n        });\n    },\n\n    // @method canBeAddedToCart Returns true if the the items in the product list can be added to the cart by the following conditions:\n    // 1.- Items > 0\n    // 2.- No out of stock items\n    // 3.- No items which do not fulfill minimum quantity items\n    // only_checked_items determines if we are considering only checked items.\n    // @param {Boolean} only_checked_items @return {Boolean}\n    canBeAddedToCart: function(only_checked_items) {\n        const items = !_.isUndefined(only_checked_items)\n            ? new Backbone.Collection(\n                  this.get('items').filter(function(product_list_item) {\n                      return product_list_item.get('checked');\n                  })\n              )\n            : this.get('items');\n\n        return (\n            items.length &&\n            this.getOutOfStockItems(items).length === 0 &&\n            this.getNotPurchasableItemsDueToMinimumQuantity(items).length === 0\n        );\n    }\n});\n"]}