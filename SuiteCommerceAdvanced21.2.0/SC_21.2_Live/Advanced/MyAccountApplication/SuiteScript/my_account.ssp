<%/*
	Â© 2020 NetSuite Inc.
	User may not copy, modify, distribute, or re-bundle or otherwise make available this code;
	provided, however, if you are an authorized user with a NetSuite account or log-in, you
	may use this code subject to the terms that govern your access and use.
*/%><%
    var SecurityHeaders = require('SecurityHeaders');
    SecurityHeaders.addSecurityHeaders(response);

    var SiteSettings
	,	siteType
	,	Environment
	,	Utils
	,	Language
	,	Currency
	,	Error
	,	Application
	,	environmentParameters
	,	session
	, 	parameters
	,	external_payment
	,	email_change_verification
	,	Configuration
	,	googletagmanager_cookie
	,	hasTranslations
	,	isCoreLanguage;

	try
	{
		Application = require('Application');
		Configuration = require('Configuration');
		Environment = Application.getEnvironment(request);
		Utils = require('Utils');
		environmentParameters = [];
		SiteSettings = require('SiteSettings.Model').get();
		parameters = request.getAllParameters();
		session = require('SC.Models.Init').session;

		googletagmanager_cookie = encodeURIComponent(request.getParameter('_ga') || '');
		Language = Environment.currentLanguage && Environment.currentLanguage.locale || '';
		Currency = Environment.currencyCodeSpecifiedOnUrl;

		hasTranslations = app_includes.myaccount.translations && app_includes.myaccount.translations[Language];
		isCoreLanguage = !app_includes.myaccount.core || (app_includes.myaccount.core.translations && app_includes.myaccount.core.translations.indexOf(Language) >= 0);

		// Access control, if you are not loged this will send you to the log in page
		if (!session.isLoggedIn2() || session.getCustomer().isGuest())
		{
			delete parameters.sitepath;
			parameters.origin = 'customercenter';

			if (parameters.fragment)
			{
				parameters.origin_hash = parameters.fragment;
				delete parameters.fragment;
			}

			return nlapiSetRedirectURL('EXTERNAL', SiteSettings.touchpoints.login, null, false, parameters);
		}
		else if (session.isLoggedIn2() && parameters.key)
		{
			try
			{
				session.verifyEmailChange(parameters.key)
				email_change_verification = true;
			}
			catch (e)
			{
				email_change_verification = e.details;
			}
		}

		siteType = SiteSettings.sitetype;

		environmentParameters.push('lang=' + Language);
		environmentParameters.push('cur=' + Currency);
		environmentParameters.push('X-SC-Touchpoint=myaccount');

		_.each(require('ExternalPayment.Model').getParametersFromRequest(request), function(value, key) {
			environmentParameters.push(key.concat('=', value));
		});
	}
	catch (e)
	{
		Error = Application.processError(e);
	}

%>
<!DOCTYPE html>
<html <%= Language ? 'lang="' + Language.replace('_', '-') + '"' : '' %>>
	<head>
		<script>
			window.applicationStartTime = Date.now();
		</script>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
		<title>My Account</title>
		<link rel="shortcut icon" href="<%= session.getAbsoluteUrl2(Application.getFaviconPath() + 'img/favicon.ico') %>" />

			<%
			   var css_files = app_includes.myaccount.css;
			   for(var i=0; i < css_files.length; i++)
			   {
			%>
					<link rel="stylesheet" href="<%= session.getAbsoluteUrl2(css_files[i]) %>?t={{timestamp}}">
			<%
			   }
			%>

		<%= (siteType && siteType === 'STANDARD') ? getPageFullHead() : '' %>
		<script>

			var googletagmanager_cookie = '';
			<%
		    if(!googletagmanager_cookie)
		    {
		    %>

				var value = "; " + document.cookie;
				var parts = value.split("; _gid=");
				if (parts.length === 2)
				{
					googletagmanager_cookie = '&_ga='+parts.pop().split(";").shift();
				}

			<%
			} else {

			%>
				googletagmanager_cookie = '&_ga=<%= googletagmanager_cookie %>';

			<%
			}
			%>

			var email_change_verification;
			<% if (email_change_verification) { %>
                email_change_verification = '<%= email_change_verification %>';
            <% } %>

			var translationUrl = '<%= hasTranslations ? session.getAbsoluteUrl2(app_includes.myaccount.translations[Language]) : '' %>';
			var coreLanguageUrl = '<%= isCoreLanguage ? session.getAbsoluteUrl2("languages") : '' %>';

			{{#js}}

			{{{dependencies}}}
			window.loadedResourcesPromises = window.loadedResourcesPromises || {};

            if(translationUrl){
                window.loadedResourcesPromises.extensionLanguagePromise = new Deferred();
            }

            if(coreLanguageUrl){
                window.loadedResourcesPromises.languagePromise = new Deferred();
            }

			loadJSON('<%= session.getAbsoluteUrl2("services/MyAccountEnvironment.Service.ss?" + environmentParameters.join("&") )  %>' + googletagmanager_cookie + '&t={{timestamp}}', 'myAccountEnvironment')
			.done(function(env){
				merge(SC, env);
                if (email_change_verification) {
                    SC.SESSION.email_change_verification = email_change_verification;
                }
				SC.ENVIRONMENT.isTouchEnabled = ('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch;
				document.documentElement.className = (SC.ENVIRONMENT.isTouchEnabled) ? 'touch' : 'no-touch';

				if(translationUrl) {
					loadScript(translationUrl + '?t={{timestamp}}')
					.done(function() {
						window.loadedResourcesPromises.extensionLanguagePromise.resolve();
					});
				}

				if(coreLanguageUrl)
				{
					loadScript(coreLanguageUrl + '/myaccount_' + SC.ENVIRONMENT.currentLanguage.locale + '.js?t={{timestamp}}')
                    .done(function() {
                        window.loadedResourcesPromises.languagePromise.resolve();
                    });
				}
			});

			SC.extensionModules = [];
			SC.addExtensionModule = function addExtensionModule(appModuleName) {
				SC.extensionModules.push(appModuleName);
			};
			{{/js}}
		</script>

		<script src="<%= session.getAbsoluteUrl2('myaccount.environment.shortcache.ssp?X-SC-Touchpoint=myaccount') %>&t={{timestamp}}"></script>
		<script src="<%= session.getAbsoluteUrl2('customFieldsMetadata.ssp?')%>t={{timestamp}}"></script>

		<%
		var Configuration = require('Configuration');
		if (Configuration.get().cms.useCMS && Configuration.get().cms.adapterVersion !== '2') { %>
			<script src="/cms/<%= Configuration.get().cms.adapterVersion %>/cms.js"></script>
		<% } %>

		<script>
			if(!SC.isPageGenerator()){
                var NLRUM = NLRUM || {};
                NLRUM.bSendBeacon = 0;
                NLRUM.bResourceTimingDataCollection = 1;
                NLRUM.autorun = false;
                loadScript('/nlrum/nlRUM.js');
            }
		</script>

		<% if (Error) { %>
		<script>SC.ENVIRONMENT.contextError = <%= JSON.stringify(Error) %>;</script>
		<% } %>

		<%
		   var js_files = app_includes.myaccount.js;
		   for(var i=0; i < js_files.length; i++)
		   {
		%>
				<script src="<%= session.getAbsoluteUrl2(js_files[i]) %>?t={{timestamp}}"></script>
		<%
		   }
		%>
	</head>
	<body>
	<div style="display:none">
		<%= session.getOrder().getDeviceFingerPrintingHtml() %>
	</div>
	<% if (siteType && siteType === 'STANDARD'){ %>
		<div id='div__header' style="overflow: hidden;" class='noprint' leftmargin='0' topmargin='0' marginwidth='1' >
			<table border='0' cellspacing='0' cellpadding='0' width='100%'>
				<%= getPageTop() %>
			</table>
		</div>
	<% } %>

		<noscript>
			<div class="myaccount-layout-no-javascript-msg">
				<strong>Javascript is disabled on your browser.</strong><br>
				To view this site, you must enable JavaScript or upgrade to a JavaScript-capable browser.
			</div>
		</noscript>

		<div id="main" class="main"></div>
		<script>
				{{#js}}
						{{{applicationStarter}}}
				{{/js}}
			</script>
	</body>
</html>

<%= (function(){ try{ return require('ReleaseMetadata').asHTMLComment(); } catch(ex){return '';}} )() %>
